{"meta":{"title":"lixin.ee","subtitle":"","description":"lixin的博客","author":"Li Xin","url":"http://blog.lixin.ee","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2021-11-20T14:42:06.713Z","updated":"2021-11-19T02:17:32.117Z","comments":false,"path":"/404.html","permalink":"http://blog.lixin.ee/404.html","excerpt":"","text":""},{"title":"关于","date":"2021-11-20T14:59:13.580Z","updated":"2021-11-20T14:59:13.580Z","comments":false,"path":"about/index.html","permalink":"http://blog.lixin.ee/about/index.html","excerpt":"","text":"这是我的练手博客，托管在github。联系我&#x6c;&#105;&#x78;&#105;&#x6e;&#x40;&#108;&#105;&#x78;&#105;&#x6e;&#x2e;&#x65;&#101;"},{"title":"书单","date":"2021-11-19T14:08:21.508Z","updated":"2021-11-19T14:08:21.508Z","comments":false,"path":"books/index.html","permalink":"http://blog.lixin.ee/books/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2021-11-19T13:44:00.451Z","updated":"2021-11-19T02:17:32.122Z","comments":true,"path":"links/index.html","permalink":"http://blog.lixin.ee/links/index.html","excerpt":"","text":""},{"title":"分类","date":"2021-11-20T14:42:38.252Z","updated":"2021-11-19T02:17:32.121Z","comments":false,"path":"categories/index.html","permalink":"http://blog.lixin.ee/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2021-11-20T14:40:59.416Z","updated":"2021-11-19T02:17:32.123Z","comments":false,"path":"tags/index.html","permalink":"http://blog.lixin.ee/tags/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2021-11-19T13:31:43.843Z","updated":"2021-11-19T02:17:32.123Z","comments":false,"path":"repository/index.html","permalink":"http://blog.lixin.ee/repository/index.html","excerpt":"","text":""}],"posts":[{"title":"GitHub+Hexo搭建个人博客","slug":"GitHub-Hexo搭建个人博客","date":"2021-11-24T02:26:53.000Z","updated":"2021-11-25T05:51:42.703Z","comments":true,"path":"6447.html","link":"","permalink":"http://blog.lixin.ee/6447.html","excerpt":"","text":"什么是Hexo ?Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。这里我们选用的是GitHub。Hexo同时也是GitHub上的开源项目，参见：hexojs/hexo（https://github.com/hexojs/hexo）如果想要更加全面的了解Hexo，可以到其官网 Hexo（https://hexo.io/）了解更多的细节，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。这里，默认各位猿/媛儿都知道GitHub就不再赘述。 搭建步骤： GitHub创建个人仓库 安装Git 安装Node.js 安装Hexo 推送网站 获得个人网站域名 绑定域名 更换主题 初识MarkDown语法 发布文章 寻找图床 个性化设置 其他 附录 GitHub创建个人仓库登录到GitHub,如果没有GitHub帐号，使用你的邮箱注册GitHub帐号：Build software better, together 点击GitHub中的New repository创建新仓库，仓库名应该为：用户名.github.io 这个用户名使用你的GitHub帐号名称代替，这是固定写法，比如我的仓库名为： 安装Git什么是Git ?简单来说Git是开源的分布式版本控制系统，用于敏捷高效地处理项目。我们网站在本地搭建好了，需要使用Git同步到GitHub上。如果想要了解Git的细节，参看廖雪峰老师的Git教程：Git教程 从Git官网下载：Git - Downloading Package 现在的机子基本都是64位的，选择64位的安装包，下载后安装，在命令行里输入git测试是否安装成功，若安装失败，参看其他详细的Git安装教程。安装成功后，将你的Git与GitHub帐号绑定，鼠标右击打开Git Bash 或者在菜单里搜索Git Bash，设置user.name和user.email配置信息： 12git config --global user.name &quot;你的GitHub用户名&quot;git config --global user.email &quot;你的GitHub注册邮箱&quot; 生成ssh密钥文件： 1ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot; 然后直接三个回车即可，默认不需要设置密码然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制 打开GitHub_Settings_keys 页面，新建new SSH Key Title为标题，任意填即可，将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key。在Git Bash中检测GitHub公钥设置是否成功，输入 ssh &#103;&#105;&#116;&#64;&#x67;&#x69;&#x74;&#x68;&#x75;&#x62;&#46;&#x63;&#x6f;&#x6d; ： 如上则说明成功。这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。 安装Node.jsHexo基于Node.js，Node.js下载地址：Download | Node.js 下载安装包，注意安装Node.js会包含环境变量及npm的安装，安装后，检测Node.js是否安装成功，在命令行中输入 1node -v 检测npm是否安装成功，在命令行中输入 1npm -v 到这了，安装Hexo的环境已经全部搭建完成。 安装Hexo推送网站获得个人网站域名绑定域名更换主题初识MarkDown语法发布文章寻找图床个性化设置其他附录","categories":[{"name":"hexo博客","slug":"hexo博客","permalink":"http://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"}],"tags":[]},{"title":"hexo主题-pure","slug":"hexo主题-pure","date":"2021-11-21T05:54:16.000Z","updated":"2021-11-21T07:04:08.989Z","comments":true,"path":"14761.html","link":"","permalink":"http://blog.lixin.ee/14761.html","excerpt":"","text":"预览地址: https://blog.cofess.com项目地址: https://github.com/cofess/hexo-theme-pure中文使用文档: https://github.com/cofess/hexo-theme-pure/blob/master/README.cn.md原文链接：https://blog.plcent.com/2019/11/05/hexo-theme-pure/ 使用前请操作使用该主题前, 请先复制 theme/pure/_source/ 目录下的所有内容到source/目录下,原因在于该目录下有建好的菜单 categories(分类)、tags(标签)、repository(项目)、books(书单)、links(友链)、about(关于)页面当你使用自动生成分类、标签，展示github项目时 文章目录索引在文章详情页, 展示一个文章目录 1.主题配置文件中开启配置: 12config toc: true # 是否开启文章章节目录导航 2.在文章顶部将该文章开启索引, 如: 123456789101112---title: Hexo主题pure使用指南date: 2019-11-05 14:34:15tags: - hexo主题categories:- hexotoc: true # 是否启用内容索引sidebar: none # 是否启用sidebar侧边栏，none：不启用--- 侧边栏主题配置项中, 侧边栏可以如下配置: 1234567891011121314# 侧边栏sidebar: right# 侧边栏启用哪些模块widgets: - board # 公告 - category # 分类 - tag # 标签 - tagcloud # 标签云 - archive # 归档 - recent_posts # 最近文章# 归档列表的展示方式archive_type: &#x27;monthly&#x27; # 归档方式: yearly | monthlyshow_count: true # 显示每个归档的文章总数 图集在文章详情页中, 涉及的图片可以使用图集功能, 在点击一张图片时, 放大图片.主题的图册公告是使用fancybox实现, 可以参照github 123# Fancybox# 图集功能fancybox: true 展示github项目在左侧菜单项目中, 点击展示自己的github项目 1.在主题配置文件中 _config.yml 修改, 请配置自己github用户名 12github: username: caoruiy # github用户名 2.新建repository页面: 1&gt; hexo new repository 你也可以直接复制 theme/pure/_source/ 目录下 repository文件夹 到 博客根目录/source/ 目录下 3.将文件内容修改为: 123456---title: Repositorieslayout: repositorycomments: falsesidebar: none--- 关键内容为 layout: repository,包含该属性才可以展示github项目 评论功能主题集成了disqus、友言、来必力、gitment、gitalk评论系统，选择其中一种即可你可以在主题配置文件中修改评论工具 12comment: type: valine # 启用哪种评论系统 Valine一个无后端的评论框工具, 其依赖于 Leancloud 开发, 所以使用前需要先注册 Leancloud 账号 如何开始? 你可以从 Valine-快速开始 教程开始, 教程包含了一步一步的指引教程. Valine配置项主题valine评论框提供了以下配置项 12345678910111213valine: # Valine官方地址: https://valine.js.org appid: # 你的 leancloud 应用 appid appkey: # 你的 leancloud 应用 appkey notify: true # 是否开始评论邮件提醒, 教程: https://github.com/xCss/Valine/wiki verify: false # 是否开始验证码功能, 开始邮件提醒会自动开启验证码功能 placeholder: 说点什么... # 输入框默认内容 avatar: mm # 头像展示方式, 具体设置项教程: https://valine.js.org/configuration.html#avatar meta: nick,mail,link # 自定义评论信息 pageSize: 10 # 评论列表分页 lang: zh-cn, # 多语言支持 zh-cn | en visitor: true # 文章阅读量统计: https://valine.js.org/visitor.html highlight: true # 代码高亮 recordIP: true # 记录评论者的IP 关于邮件提醒: 只有在回复评论时, 并且填写了邮箱的评论才会收到回复提醒关于文章阅读量统计: 开启阅读量统计, 会在详情页标题下展示阅读量数据 搜索功能主题提供内置的搜索功能和百度搜索, 百度搜索就是使用百度的SEO搜索, 个人觉得不是很实用, 不建议开启. 在主题配置文件 _config.yml 中配置: 1234# Searchsearch: insight: true # 在使用搜索功能前, 你需要安装 `hexo-generator-json-content` baidu: false # 使用百度搜索前, 你必须禁用其他所有的搜索功能 内置搜索使用搜索功能前需要先安装: 1npm i -S hexo-generator-json-content 项目地址: https://github.com/alexbruno/hexo-generator-json-content hexo-wordcount在你运行 hexo g 或者 hexo s 时生效，在 hexo g 生成站点时, 会在根目录下生成content.json该文件内容即为搜索内容。 你可以对搜索内容进行自定义的配置， 只要在 _config.yml 中配置 jsonContent即可: 12345678910111213141516171819# 示例: 隐藏分类和标签的搜索jsonContent: dateFormat: DD/MM/YYYY posts: title: true date: true path: true text: true raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: false author: false 文章阅读数量统计主题提供 不蒜子 和 基于 leancloud 的统计 但是经过验证, 发现基于leancloud的统计不生效, 不知原因, 实现等效的方法就是: 评论框使用valine评论框(主题已经内置), 同时开启 visitor: true 配置项项即可 字数统计&amp;阅读时长主题内置了该功能, 使用前需要先安装插件: 1npm i -S hexo-wordcount 主题配置文件中, 开启设置即可: 12345# wordcountpostCount: enable: true wordcount: true # 文章字数统计 min2read: true # 阅读时长预计 友情链接复制 theme/pure/_source/ 目录下 links文件夹到 /source/ 目录下在 hexo 目录下的 source 文件夹内创建一个名为_data（禁止改名）的文件夹。 然后在文件内创建一个名为 links.yml 的文件,在其中添加相关数据即可。 单个友情链接的格式为： 1234Name: link: http://example.com avatar: http://example.com/avatar.png desc: &quot;这是一个描述&quot; 添加多个友情链接，我们只需要根据上面的格式重复填写即可。 将 Name 改为友情链接的名字，例如 Cofess。 http://example.com 为友情链接的地址。 http://example.com/avatar.png 为友情链接的头像。 这是一个描述 为友情链接描述。","categories":[{"name":"hexo博客","slug":"hexo博客","permalink":"http://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"}],"tags":[]},{"title":"hexo插件","slug":"hexo插件","date":"2021-11-20T12:17:13.000Z","updated":"2021-11-23T14:42:07.653Z","comments":true,"path":"37456.html","link":"","permalink":"http://blog.lixin.ee/37456.html","excerpt":"","text":"1、hexo-abbrlink一个基于帖子标题生成静态帖子链接的Hexo 插件。 安装 hexo-abbrlink博客项目的根目录直接执行： 1npm install hexo-abbrlink --save Hexo 配置还是刚才的配置文件（站点配置文件），把permalink改成以下配置： 1permalink: :abbrlink.html Next 配置打开主题配置文件根目录下：/theme/主题名/_config.yml，新增配置如下： 1234# post urlabbrlink: alg: crc32 #support crc16(default) and crc32 rep: hex #support dec(default) and hex hexo clean &amp;&amp; hexo g这一步是必须操作，hexo clean清除 public 站点文件，hexo g重新生成站点文件。生成之后，打开一个.md 文章文件，你会发现，在顶部的定义部分新增了一个abbrlink属性，后面是文件的 url 资源路径。 1abbrlink: 44359 hexo s重启服务。重启之后回到 home 主页，点开一个博文查看 url，不出意外 url 已发生改变，没有改变的同学查看下 2 个配置文件处，是否配置对了，别搞混了，不要都配置到一个文件中。","categories":[{"name":"hexo博客","slug":"hexo博客","permalink":"http://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"}],"tags":[]},{"title":"hexo博客部署到云服务器(使用宝塔面板)","slug":"hexo博客从Giulia迁移到服务器","date":"2021-11-20T11:59:35.000Z","updated":"2021-11-23T14:02:07.679Z","comments":true,"path":"14bf8efe.html","link":"","permalink":"http://blog.lixin.ee/14bf8efe.html","excerpt":"","text":"思路是： 在服务器上搭建Git环境，创建Git仓库在主机生成Hexo静态文件，通过与服务器连接，推到服务器上的Git仓库通过git-hooks实现自动部署到网站资源目录Nginx做静态文件服务器，实现外界对网站资源目录的访问一、环境准备 安装宝塔面板我是安装了服务器上面的Cloudreve镜像，自带有宝塔面板。宝塔面板安装很简单，直接连上服务器（推荐宝塔终端，很简单易用），输入 1yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install\\_6.0.sh &amp;&amp; sh install.sh 显示如下即成功123456789101112131415外网面板地址: http://49.232.1.111:8888 #用来访问面板内网面板地址: http://10.0.8.13:8888\\*以下仅为初始默认账户密码，若无法登录请执行bt命令重置账户/密码登录username: ehmpmg7m #记住用户名和密码password: dsjfhasd #忘记可使用sudo /etc/init.d/bt default查看If you cannot access the panel,release the following panel port [8888] in the security group若无法访问面板，请检查防火墙/安全组是否有放行面板[8888]端口 #安全组注意放行，轻量级服务器为防火墙 然后在宝塔面板网站-&gt;添加站点，找到放置网站资源目录www/wwwroot/taitrs.cc 安装nginx和git1yum install -y nginx git Nginx服务器配置通过宝塔面板可以方便地修改Nginx的配置文件，在taitres.cc的设置中找到配置文件，应该是自动配好了的，没有就自己设置下，也可以使用其他端口 二、Git仓库搭建 之前推hexo的静态文件都是推到GitHub的仓库，现在服务器也是一样，需要仓库来保存 1.添加一个用户git 在服务器端 1234567891011adduser git #添加git用户chmod 740 /etc/sudoers #改变sudoers文件的权限为文件所有者可写vim /etc/sudoers#在root ALL=(ALL) ALL 下方添加一行 git ALL=(ALL) ALLchmod 400 /etc/sudoers #将其权限修改为文件所有者可读 2.给git用户添加ssh密钥 这一步是为了建立主机与服务器连接，使其不需要密码也能登陆 1234567891011121314151617181920212223#在主机端打开powershell，cd到C:\\Users\\admin\\.ssh生成密匙，如已有密匙可跳过这一步ssh-keygen -t rsa -C &quot;taitres.cc&quot;# -t 指定密钥类型，默认是 rsa ，可以省略# -C 用于识别这个密钥的注释，可以输入任何内容# -f 指定密钥文件存储文件名，默认id\\_rsa#在服务器端su git #切换到git用户mkdir -p ~/.sshtouch ~/.ssh/authorized\\_keys #创建authorized\\_keys文件chmod 600 ~/.ssh/authorized\\_keys #为authorized\\_keys文件赋予文件所有者可读可写的权限chmod 700 ~/.ssh #为.ssh文件夹赋予文件夹所有者可读可写可执行的权限 复制公匙id_rsa.pub内容到服务器/home/git/.ssh/authorized_keys，关闭终端，使用`ssh git@server`重新登录服务器，测试是否能不要密码登录到git用户，如出现Permission denied的问题可尝试文章末尾的解决办法 3.创建Git仓库 12345sudo mkdir /home/git/repos #新建目录，这是git仓库的位置cd /home/git/repossudo git init --bare taiblog.git #初始化一个名叫taiblog的仓库 4.配置钩子实现自动部署找到 /home/git/repos/taiblog.git/hooks/post-update.sample 改名post-update，内容改为 123#!/bin/shgit --work-tree=/www/wwwroot/taitres.cc --git-dir=/home/git/repos/taiblog.git checkout -f 然后给权限 1234567cd taiblog.git/hooks/sudo chmod +x post-update #赋予其可执行权限sudo chown -R git:git /home/git/repos/ #仓库所有者改为gitsudo chown -R git:git /www/wwwroot/taitrs.cc/ #站点文件夹所有者改为git 5.测试Git仓库是否可用 1#在主机端，如果能将仓库拉下来，说明Git仓库搭建成功git clone git@server\\_ip:/home/git/repos/blog.git 三、本地配置和测试1.本地配置修改本地Hexo博客文件夹中的\\_config.yml文件 1234567deploy: type: git repo: git@server:/home/git/repos/taiblog.git branch: maste 2.测试 12345hexo clean #清除缓存hexo generate #生成静态页面hexo delopy #将本地静态页面目录部署到云服务器 也可以在package.json 中添加 npm 脚本，这样就可以直接npm run dd一下执行 123456789101112131415&quot;scripts&quot;: &#123; &quot;build&quot;: &quot;hexo generate&quot;, &quot;clean&quot;: &quot;hexo clean&quot;, &quot;deploy&quot;: &quot;hexo deploy&quot;, &quot;dd&quot;: &quot;hexo clean &amp;&amp; hexo g -d&quot;, &quot;server&quot;: &quot;hexo server&quot;, &quot;ss&quot;: &quot;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&quot; &#125;, 然后访问自己的IP看看是否成功49.232.1.11 遇到的一些问题在ssh-copy-id 时报错，ssh-copy-id : 无法将“ssh-copy-id”项识别为 cmdlet、函数、脚本文件或可运行程序的名称解决办法：需要在powershell配置文件中添加以下内容： 1234567891011121314151617function ssh-copy-id([string]$userAtMachine)&#123; $publicKey = &quot;$ENV:USERPROFILE&quot; + &quot;/.ssh/id\\_rsa.pub&quot; if (!(Test-Path &quot;$publicKey&quot;))&#123; Write-Error &quot;ERROR: failed to open ID file &#x27;$publicKey&#x27;: No such file&quot; &#125; else &#123; &amp; cat &quot;$publicKey&quot; | ssh $userAtMachine &quot;umask 077; test -d .ssh || mkdir .ssh ; cat &gt;&gt; .ssh/authorized\\_keys || exit 1&quot; &#125;&#125; 关于powershell配置文件的使用： 11.首先检查配置文件是否已经存在 12.打开powershell输入 `Test-Path $profile`如果返回false，则在C:\\Users\\admin\\Documents\\下创建一个WindowsPowerShell文件夹，然后执行 1New-Item -path $profile -type file 就创建了一个Microsoft.PowerShell_profile.ps1文件 使用ssh-add时出现 unable to start ssh-agent service, error :1058解决方法：使用管理员权限运行 Power Shell，然后执行Set-Service -Name ssh-agent -StartupType automatic. 把 ssh-agent 的启动类型设置为自动方式，在任务管理器中查看，ssh-agent是否开启 连接ssh时出现 Permission denied解决方法：vi /etc/ssh/sshd\\_config 修改为PubkeyAuthentication yes（如果前面有#，就去掉#）","categories":[{"name":"hexo博客","slug":"hexo博客","permalink":"http://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"}],"tags":[]},{"title":"Hexo博客所用到的MD编辑器语法","slug":"hexo博客所用到的MD编辑器语法","date":"2021-11-20T06:34:15.000Z","updated":"2021-11-20T16:12:01.307Z","comments":true,"path":"13838.html","link":"","permalink":"http://blog.lixin.ee/13838.html","excerpt":"","text":"标题语法段落语法换行语法强调语法引用语法列表语法代码语法分割线语法链接语法图片语法转义字符语法内嵌HTML标签扩展语法 标题语法标题前面加#号空格，几级标题就加几个#号，最后一个#号紧跟空格，最多有六级标题。如下： 123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 一级标题二级标题三级标题四级标题五级标题六级标题段落语法要创建段落，请使用空白行将一行或多行文本进行分隔。不要用空格或制表符缩进段落。 换行语法1&lt;br&gt; 强调语法粗体要加粗文本请在要加粗的内容前后各添加两个*或者两个_Markdown 应用程序在如何处理文字中间的下划线上并不一致。为兼容考虑，在文字中间部分加粗的话，请使用星号。 1我**爱**豆 我爱豆 1我__爱__豆 我__爱__豆 斜体要用斜体显示文本，请在内容前后添加一个星号或下划线。要斜体突出内容的中间部分，请在内容前后各添加一个星号，中间不要带空格。语法: 1*今天天气真好* 今天天气真好 粗体和斜体要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。要加粗并用斜体显示单词或短语的中间部分，请在要突出显示的部分前后各添加三个星号，中间不要带空格。语法 1你可***真***好看 你可真好看 斜体和粗体Markdown 应用程序在处理内容中间添加的下划线上并不一致。为了实现兼容性，请使用星号将内容的中间部分加粗并以斜体显示，以示重要。 引用语法要创建块引用，请在段落前添加一个&gt;符号。语法 1&gt;这是引用效果 预览 这是引用效果 多个段落引用块引用可以包含多个段落。为段落之间的空白行添加一个&gt;符号。语法： 123&gt;多个段落的引用效果就是这样的&gt;&gt;明白了吗？ 预览 多个段落的引用效果就是这样的 明白了吗？ 嵌套块引用块引用可以嵌套。在要嵌套的段落前添加一个&gt;&gt;符号。语法 12&gt;这是效果&gt;&gt;这是效果的效果 预览 这是效果 这是效果的效果 带有其他元素的引用块引用可以包含其他 Markdown 格式的元素。并非所有元素都可以使用，你需要进行实验以查看哪些元素有效。语法 123456&gt; #### 加粗引用&gt;&gt; - 小标题1&gt; - 小标题2&gt;&gt; *斜体*加**加粗**. 预览 加粗引用 小标题1 小标题2 斜体加加粗. 列表语法有序列表要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字 1 起始。语法 1231.这是第一点2.这是第二点3.这是第三点 预览1.这是第一点2.这是第二点3.这是第三点 代码语法要将单词或短语表示为代码，请将其包裹在反引号 (`) 中。 转义反引号如果你要表示为代码的单词或短语中包含一个或多个反引号，则可以通过将单词或短语包裹在双反引号(``)中。##代码块要创建代码块，请将代码块的每一行缩进至少四个空格或一个制表符。 分割线语法要创建分隔线，请在单独一行上使用三个或多个星号 (***)、破折号 (—) 或下划线 (___) ，并且不能包含其他内容。为了兼容性，请在分隔线的前后均添加空白行。语法 123***---___ 预览 链接语法链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。 超链接Markdown语法代码： 1[超链接显示名](超链接地址 &quot;超链接title&quot;) 给链接增加 Title链接title是当鼠标悬停在链接上时会出现的文字，这个title是可选的，它放在圆括号中链接地址后面，跟链接地址之间以空格分隔。语法 1[李鑫的博客](https://eelx.cn/ &quot;点击打开李鑫的博客&quot;) 预览李鑫的博客 网址和Email地址使用尖括号可以很方便地把URL或者email地址变成可点击的链接。语法 12&lt;https://eelx.cn&gt;&lt;lixin@lixin.ee&gt; 预览https://eelx.cn&#x6c;&#105;&#120;&#105;&#110;&#x40;&#108;&#x69;&#x78;&#105;&#110;&#x2e;&#101;&#101; 带格式化的链接强调 链接, 在链接语法前后增加星号。 要将链接表示为代码，请在方括号中添加反引号。语法 123这是记录我跟阿豆在一起的天数 **[李鑫&amp;阿豆](https://adou.lixin.ee)**.这个也是记录我跟阿豆在一起的天数 *[李鑫&amp;阿豆](https://adou.lixin.ee)*.这个也是记录我跟阿豆在一起的天数 [`李鑫&amp;阿豆`](https://adou.lixin.ee). 预览这是记录我跟阿豆在一起的天数 李鑫&amp;阿豆.这个也是记录我跟阿豆在一起的天数 李鑫&amp;阿豆.这个也是记录我跟阿豆在一起的天数 李鑫&amp;阿豆. 引用类型链接引用样式链接是一种特殊的链接，它使URL在Markdown中更易于显示和阅读。参考样式链接分为两部分：与文本保持内联的部分以及存储在文件中其他位置的部分，以使文本易于阅读。 链接的第一部分格式引用类型的链接的第一部分使用两组括号进行格式设置。第一组方括号包围应显示为链接的文本。第二组括号显示了一个标签，该标签用于指向您存储在文档其他位置的链接。 尽管不是必需的，可以在第一组和第二组括号之间包含一个空格。第二组括号中的标签不区分大小写，可以包含字母，数字，空格或标点符号。 以下示例格式对于链接的第一部分效果相同： [hobbit-hole][1][hobbit-hole] [1] 链接的第二部分格式引用类型链接的第二部分使用以下属性设置格式： 放在括号中的标签，其后紧跟一个冒号和至少一个空格（例如[label]:）。链接的URL，可以选择将其括在尖括号中。链接的可选标题，可以将其括在双引号，单引号或括号中。以下示例格式对于链接的第二部分效果相同： 1234567[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle &quot;Hobbit lifestyles&quot;[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle &#x27;Hobbit lifestyles&#x27;[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle (Hobbit lifestyles)[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; &quot;Hobbit lifestyles&quot;[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; &#x27;Hobbit lifestyles&#x27;[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; (Hobbit lifestyles) 可以将链接的第二部分放在Markdown文档中的任何位置。有些人将它们放在出现的段落之后，有些人则将它们放在文档的末尾（例如尾注或脚注）。 图片语法要添加图像，请使用感叹号 (!), 然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。语法 1![随机图片](https://picsum.photos/1920/1080 &quot;鼠标放上去的文字&quot;) 预览 链接图片给图片增加链接，请将图像的Markdown 括在方括号中，然后将链接添加在圆括号中。语法 1[![随机图片](https://picsum.photos/1920/1080 &quot;访问李鑫的博客&quot;)](https://eelx.cn) 预览 转义字符语法要显示原本用于格式化 Markdown 文档的字符，请在字符前面添加反斜杠字符 \\ 。语法 1\\* 这很重要 预览* 这很重要 可做转义的字符 符号 名字 \\ 反斜杠 ` 反引号 * *号 _ 下划线 { } 大括号 [ ] 括号 ( ) 括弧 # #号 + 加号 - 减号 . 点 ! 感叹号 特殊字符自动转义在HTML文件中，有两个字符需要特殊处理：&lt;和&amp;。&lt;符号用于起始标签&amp;符号则用于标记HTML实体，如果你只是想要使用这些符号，你必须要使用实体的形式，像是&amp;lt;和&amp;amp;。&amp;符号其实很容易让写作网页文件的人感到困扰，如果你要打「AT&amp;T」，你必须要写成「AT&amp;amp;T」，还得转换网址内的&amp;符号，如果你要链接到： 1http://images.google.com/images?num=30&amp;q=larry+bird 你必须要把网址转成： 1http://images.google.com/images?num=30&amp;amp;q=larry+bird 才能放到链接标签的href属性里。不用说也知道这很容易忘记，这也可能是HTML标准检查所检查到的错误中，数量最多的。Markdown 允许你直接使用这些符号，它帮你自动转义字符。如果你使用&amp;符号的作为HTML实体的一部分，那么它不会被转换，而在其它情况下，它则会被转换成&amp;amp;。所以你如果要在文件中插入一个著作权的符号，你可以这样写： 1&amp;copy; Markdown将不会对这段文字做修改，但是如果你这样写： 1AT&amp;T Markdown就会将它转为： 1AT&amp;amp;T 类似的状况也会发生在&lt;符号上，因为Markdown支持行内HTML，如果你使用&lt;符号作为HTML标签的分隔符，那Markdown也不会对它做任何转换，但是如果你是写： 14 &lt; 5 Markdown 将会把它转换为： 14 &amp;lt; 5 需要特别注意的是，在 Markdown 的块级元素和内联元素中，&lt;和&amp;两个符号都会被自动转换成HTML实体，这项特性让你可以很容易地用 Markdown写HTML。（在 HTML 语法中，你要手动把所有的&lt;和&amp;都转换为HTML实体。） 内嵌HTML标签对于Markdown涵盖范围之外的标签，都可以直接在文件里面用HTML本身。如需使用HTML，不需要额外标注这是HTML或是Markdown，只需HTML标签添加到Markdown文本中即可。 行级內联标签HTML的行级內联标签如&lt;span&gt;、&lt;cite&gt;、&lt;del&gt;不受限制，可以在Markdown的段落、列表或是标题里任意使用。依照个人习惯，甚至可以不用Markdown格式，而采用HTML标签来格式化。例如：如果比较喜欢HTML的&lt;a&gt;或&lt;img&gt;标签，可以直接使用这些标签，而不用Markdown提供的链接或是图片语法。当你需要更改元素的属性时（例如为文本指定颜色或更改图像的宽度），使用HTML标签更方便些。 HTML行级內联标签和区块标签不同，在內联标签的范围内，Markdown的语法是可以解析的。语法 1This **word** is bold. This &lt;em&gt;word&lt;/em&gt; is italic. 预览This word is bold. This word is italic. 区块标签区块元素──比如&lt;div&gt;、&lt;table&gt;、&lt;pre&gt;、&lt;p&gt; 等标签，必须在前后加上空行，以便于内容区分。而且这些元素的开始与结尾标签，不可以用 tab 或是空白来缩进。Markdown会自动识别这区块元素，避免在区块标签前后加上没有必要的&lt;p&gt;标签。 例如，在Markdown文件里加上一段HTML表格： 123456789This is a regular paragraph.&lt;table&gt; &lt;tr&gt; &lt;td&gt;Foo&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;This is another regular paragraph. 请注意，Markdown语法在HTML区块标签中将不会被进行处理。例如，你无法在HTML区块内使用Markdown形式的*强调*。 HTML用法最佳实践出于安全原因，并非所有Markdown应用程序都支持在Markdown文档中添加HTML。如有疑问，请查看相应Markdown应用程序的手册。某些应用程序只支持HTML标签的子集。 对于HTML的块级元素&lt;div&gt;、&lt;table&gt;、&lt;pre&gt;和&lt;p&gt;，请在其前后使用空行（blank lines）与其它内容进行分隔。尽量不要使用制表符（tabs）或空格（spaces）对HTML标签做缩进，否则将影响格式。 在HTML块级标签内不能使用Markdown语法。例如&lt;p&gt;italic and **bold**&lt;/p&gt;将不起作用。 扩展语法删除线您可以通过在单词中心放置一条水平线来删除单词。结果看起来像这样。此功能使您可以指示某些单词是一个错误，要从文档中删除。若要删除单词，请在单词前后使用两个波浪号~~。语法 1~~世界是平坦的。~~ 我们现在知道世界是圆的。 预览世界是平坦的。 我们现在知道世界是圆的。 任务列表语法任务列表使您可以创建带有复选框的项目列表。在支持任务列表的Markdown应用程序中，复选框将显示在内容旁边。要创建任务列表，请在任务列表项之前添加破折号-和方括号[ ]，并在[ ]前面加上空格。要选择一个复选框，请在方括号[x]之间添加 x 。 123- [x] 带女朋友见家长- [x] 带女朋友去玩- [ ] 给女朋友买个包 带女朋友见家长 带女朋友去玩 给女朋友买个包 自动网址链接许多Markdown处理器会自动将URL转换为链接。这意味着如果您输入https://eelx.cn/ ，即使您未使用方括号，您的Markdown处理器也会自动将其转换为链接。 1https://eelx.cn/ 呈现的输出如下所示：https://eelx.cn/ 禁用自动URL链接如果您不希望自动链接URL，则可以通过将URL表示为带反引号的代码来删除该链接。 1`https://eelx.cn/` 呈现的输出如下所示：https://eelx.cn/ 使用Emoji表情有两种方法可以将表情符号添加到Markdown文件中：将表情符号复制并粘贴到Markdown格式的文本中，或者键入emoji shortcodes。 复制和粘贴表情符号在大多数情况下，您可以简单地从Emojipedia等来源复制表情符号并将其粘贴到文档中。许多Markdown应用程序会自动以Markdown格式的文本显示表情符号。从Markdown应用程序导出的HTML和PDF文件应显示表情符号。 Tip: 如果您使用的是静态网站生成器，请确保将HTML页面编码为UTF-8。 使用表情符号简码一些Markdown应用程序允许您通过键入表情符号短代码来插入表情符号。这些以冒号开头和结尾，并包含表情符号的名称。 12去露营了！ :tent: 很快回来。真好笑！ :joy: 呈现的输出如下所示：去露营了！⛺很快回来。真好笑！😂这是我用MD写的第一篇文章，留给自己备用。跳转顶部","categories":[{"name":"hexo博客","slug":"hexo博客","permalink":"http://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"MD语法","slug":"MD语法","permalink":"http://blog.lixin.ee/tags/MD%E8%AF%AD%E6%B3%95/"}]},{"title":"hexo如何新建文章和删除文章","slug":"hexo如何写文章和删除文章","date":"2021-11-19T12:07:51.000Z","updated":"2021-11-23T14:46:21.361Z","comments":true,"path":"27201.html","link":"","permalink":"http://blog.lixin.ee/27201.html","excerpt":"","text":"hexo算是搭建好了，可是怎么写文章，本地上传以及删除和更新文章，这篇博客同样写给我，留着备用。 新建文章使用命令来新建文章 1hexo new &lt;文章标题&gt; # 或者 hexo n 文章标题 命令执行完后，就会发现在Hexo\\source_posts目录中多了一个文件文章名.md，这就是我们刚才新建的博文。 此外，我们也可以直接进入Hexo\\source_posts目录中，右键新建一个文本文档，将名字改为文章名.md，这样也新建了一篇博文。 新建页面上面新建的文章是显示在单个文章界面，这里新建的页面是作为单个页面显示的，比如下图的分类、标签、归档和关于我，你点击后都是显示为单个页面。 你只需要记住新建博文是用上面的方法，新建页面是用这里的方法就行了，这里也采用命令新建页面： 1hexo new page &quot;页面名称&quot; 命令执行完后，就会发现在Hexo\\source目录中多了一个文件夹，里面还有一个index.md，这就代表我们新建了一个页面。 编辑文章用文本编辑器打开上面新建的博文，如下所示： 123456title: 文章标题tags: - 文章标签categories: - 文章分类toc: true # 是否启用内容索引 新建的页面略有不同，没有tags和categories标签。三个”-“后面就是博文的正文内容，接下来就是正儿八经地撰写博文了。 删除文章删除文章的过程一样也很简单，先删除本地文件，然后通过生成和部署命令进而将远程仓库中的文件也一并删除。具体来说，以最开始默认形成的helloworld.md这篇文章为例。 首先进入到source / _post 文件夹中，找到helloworld.md文件，在本地直接执行删除。然后依次执行 12hexo ghexo d 再去主页查看你就会发现你的博客上面已经空空如也了。 上传文章在 Git Shell 中进入 Hexo 文件夹，执行下面几条命令，将博客部署到 GitHub 上： 1234hexo cleanhexo generate # (输入hexo g也可以)(若要本地预览就先执行 hexo server)hexo deploy # (输入hexo d也可以) 快捷命令： 1234hexo g == hexo generatehexo d == hexo deployhexo s == hexo serverhexo n == hexo new 还能组合使用，如： 1hexo d -g 刷新你的个人博客 更新文章修改了谋篇文章内容需要同步更新，方法同上。在 Git Shell 中进入 Hexo 文件夹，执行下面几条命令，将博客部署到 GitHub 上： 123hexo cleanhexo ghexo d","categories":[{"name":"hexo博客","slug":"hexo博客","permalink":"http://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"}],"tags":[]},{"title":"Hello World（你好，世界）","slug":"hello-world","date":"2021-11-17T11:59:35.000Z","updated":"2021-11-21T07:06:25.886Z","comments":true,"path":"16107.html","link":"","permalink":"http://blog.lixin.ee/16107.html","excerpt":"","text":"欢迎来到Hexo!这是你的第一篇文章。查看文档了解更多信息。如果您在使用 Hexo 时遇到任何问题， 您可以在问题解答中找到答案，也可以在GitHub上问我。 快速开始创建一个新帖子1$ hexo new &quot;My New Post&quot; 更多信息: 写作 运行服务器1$ hexo server 更多信息: 服务器 生成静态文件1$ hexo generate 更多信息: 生成 部署到远程站点1$ hexo deploy 更多信息: 部署","categories":[],"tags":[]}],"categories":[{"name":"hexo博客","slug":"hexo博客","permalink":"http://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"MD语法","slug":"MD语法","permalink":"http://blog.lixin.ee/tags/MD%E8%AF%AD%E6%B3%95/"}]}