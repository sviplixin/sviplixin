{"meta":{"title":"lixin.ee","subtitle":"","description":"lixin的博客","author":"李鑫","url":"https://blog.lixin.ee","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2021-11-20T14:42:06.713Z","updated":"2021-11-19T02:17:32.117Z","comments":false,"path":"/404.html","permalink":"https://blog.lixin.ee/404.html","excerpt":"","text":""},{"title":"关于","date":"2021-12-03T10:47:48.976Z","updated":"2021-12-03T10:47:48.976Z","comments":false,"path":"about/index.html","permalink":"https://blog.lixin.ee/about/index.html","excerpt":"","text":"Li Xin"},{"title":"书单","date":"2021-11-19T14:08:21.508Z","updated":"2021-11-19T14:08:21.508Z","comments":false,"path":"books/index.html","permalink":"https://blog.lixin.ee/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2021-11-20T14:42:38.252Z","updated":"2021-11-19T02:17:32.121Z","comments":false,"path":"categories/index.html","permalink":"https://blog.lixin.ee/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2021-11-19T13:44:00.451Z","updated":"2021-11-19T02:17:32.122Z","comments":true,"path":"links/index.html","permalink":"https://blog.lixin.ee/links/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2021-11-19T13:31:43.843Z","updated":"2021-11-19T02:17:32.123Z","comments":false,"path":"repository/index.html","permalink":"https://blog.lixin.ee/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2021-11-20T14:40:59.416Z","updated":"2021-11-19T02:17:32.123Z","comments":false,"path":"tags/index.html","permalink":"https://blog.lixin.ee/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"使用宝塔控制面板安装搭建 Alist 多网盘文件列表","slug":"使用宝塔控制面板安装搭建 Alist 多网盘文件列表","date":"2022-07-09T14:23:15.000Z","updated":"2022-07-09T14:41:31.991Z","comments":true,"path":"48244.html","link":"","permalink":"https://blog.lixin.ee/48244.html","excerpt":"","text":"Alist 是啥？是一款支持多种存储的目录文件列表程序，支持 web 浏览与 webdav，后端基于gin，前端使用react。官方已经写出了非常详细的教程，可以移步官方使用说明查看： 官方使用说明https://alist-doc.nn.ci/docs/intro但是今天，缙哥哥要跟大家分享的是基于宝塔面板安装 Alist 程序。 推荐使用宝塔Linux控制面板（站内AD）部署好宝塔面板之后，创建网站。 数据库无需创建，PHP版本可随意，纯静态也可以。这里我们复制一下根目录地址，后面安装 Alist 程序需要用到。根目录地址为： 1/www/wwwroot/alist.dujin.org 宝塔安装 Alist 程序接下来，通过 ssh 连接该服务器，在官方给出的基础上，末尾增加指定目录安装，添加刚刚得到的根目录地址，如下示例。 123curl -fsSL &quot;https://nn.ci/alist.sh&quot; | bash -s install /www/wwwroot/alist.dujin.orgcurl -fsSL &quot;https://nn.ci/alist.sh&quot; | bash -s update /www/wwwroot/alist.dujin.orgcurl -fsSL &quot;https://nn.ci/alist.sh&quot; | bash -s uninstall /www/wwwroot/alist.dujin.org install 为安装，update 为升级，uninstall 为卸载。我们执行第一行安装之后，会得到如下内容： 1234567891011121314Alist 安装成功！访问地址：http://YOUR_IP:5244/配置文件：/www/wwwroot/alist.dujin.org/alist/data/config.json初始管理密码：www.dujin.org查看状态：systemctl status alist启动服务：systemctl start alist重启服务：systemctl restart alist停止服务：systemctl stop alist温馨提示：如果端口无法正常访问，请检查 服务器安全组、本机防火墙、Alist状态这里我们要记住 Alist 初始管理密码。所以，你如果是使用阿里云、腾讯云、华为云之类的服务器，就要把这个 5244 端口给开一下，同时在宝塔→安全里面也对 5244 端口放行一下。 给 Alist 程序添加反向代理点击宝塔→网站菜单→对应网站设置→反向代理→添加反向代理。 点击开启代理，代理名称随意，目标URL设置为： 1http://127.0.0.1:5244 其余保持默认即可，点击提交按钮。 其他终端管理命令12345启动: systemctl start alist关闭: systemctl stop alist自启: systemctl enable alist状态: systemctl status alist重启: systemctl restart alist 输入你的前端域名就可以访问，这里的密码就是最开始通过 ssh 安装成功显示的密码 至于如何添加各种网盘这种事，官方说明都写的很清楚了，这里就不再赘述了。 个人建议如果是自己一个人用用，那么可以选择一款网络较好的服务器，尤其是海外服务器，还可以对接谷歌云盘、海外版 OneDrive 等。 如果是公开给大伙儿用，那么建议套一个 CloudFlare，避免被频繁扫描或者胡乱调用导致 API 阈值过高而账号被黑。","categories":[],"tags":[]},{"title":"中华人民共和国劳动法","slug":"劳动法","date":"2022-06-10T00:47:59.000Z","updated":"2022-06-10T01:37:26.160Z","comments":true,"path":"10336.html","link":"","permalink":"https://blog.lixin.ee/10336.html","excerpt":"","text":"颁布单位： 全国人民代表大会&emsp;&emsp;文号： 中华人民共和国主席令第24号颁布日期：2018-12-29&emsp;&emsp;执行日期：2018-12-29时 效 性： 现行有效效力&emsp;&emsp;级别： 法律 目录第一章 总&emsp;则第二章 促进就业第三章 劳动合同和集体合同第四章 工作时间和休息休假第五章 工&emsp;资第六章 劳动安全卫生第七章 女职工和未成年工特殊保护第八章 职业培训第九章 社会保险和福利第十章 劳动争议第十一章 监督检查第十二章 法律责任第十三章 附 则 &emsp;&emsp;(1994年7月5日第八届全国人民代表大会常务委员会第八次会议通过 根据2009年8月27日第十一届全国人民代表大会常务委员会第十次会议《关于修改部分法律的决定》第一次修正 根据2018年12月29日第十三届全国人民代表大会常务委员会第七次会议《关于修改〈中华人民共和国劳动法〉等七部法律的决定》第二次修正) 第一章 总 则&emsp;&emsp;第一条 为了保护劳动者的合法权益，调整劳动关系，建立和维护适应社会主义市场经济的劳动制度，促进经济发展和社会进步，根据宪法，制定本法。 &emsp;&emsp;第二条 在中华人民共和国境内的企业、个体经济组织(以下统称用人单位)和与之形成劳动关系的劳动者，适用本法。 &emsp;&emsp;国家机关、事业组织、社会团体和与之建立劳动合同关系的劳动者，依照本法执行。 &emsp;&emsp;第三条 劳动者享有平等就业和选择职业的权利、取得劳动报酬的权利、休息休假的权利、获得劳动安全卫生保护的权利、接受职业技能培训的权利、享受社会保险和福利的权利、提请劳动争议处理的权利以及法律规定的其他劳动权利。 &emsp;&emsp;劳动者应当完成劳动任务，提高职业技能，执行劳动安全卫生规程，遵守劳动纪律和职业道德。 &emsp;&emsp;第四条 用人单位应当依法建立和完善规章制度，保障劳动者享有劳动权利和履行劳动义务。 &emsp;&emsp;第五条 国家采取各种措施，促进劳动就业，发展职业教育，制定劳动标准，调节社会收入，完善社会保险，协调劳动关系，逐步提高劳动者的生活水平。 &emsp;&emsp;第六条 国家提倡劳动者参加社会义务劳动，开展劳动竞赛和合理化建议活动，鼓励和保护劳动者进行科学研究、技术革新和发明创造，表彰和奖励劳动模范和先进工作者。 &emsp;&emsp;第七条 劳动者有权依法参加和组织工会。 &emsp;&emsp;工会代表和维护劳动者的合法权益，依法独立自主地开展活动。 &emsp;&emsp;第八条 劳动者依照法律规定，通过职工大会、职工代表大会或者其他形式，参与民主管理或者就保护劳动者合法权益与用人单位进行平等协商。 &emsp;&emsp;第九条 国务院劳动行政部门主管全国劳动工作。 &emsp;&emsp;县级以上地方人民政府劳动行政部门主管本行政区域内的劳动工作。 第二章 促进就业&emsp;&emsp;第十条 国家通过促进经济和社会发展，创造就业条件，扩大就业机会。 &emsp;&emsp;国家鼓励企业、事业组织、社会团体在法律、行政法规规定的范围内兴办产业或者拓展经营，增加就业。 &emsp;&emsp;国家支持劳动者自愿组织起来就业和从事个体经营实现就业。 &emsp;&emsp;第十一条 地方各级人民政府应当采取措施，发展多种类型的职业介绍机构，提供就业服务。 &emsp;&emsp;第十二条 劳动者就业，不因民族、种族、性别、宗教信仰不同而受歧视。 &emsp;&emsp;第十三条 妇女享有与男子平等的就业权利。在录用职工时，除国家规定的不适合妇女的工种或者岗位外，不得以性别为由拒绝录用妇女或者提高对妇女的录用标准。 &emsp;&emsp;第十四条 残疾人、少数民族人员、退出现役的军人的就业，法律、法规有特别规定的，从其规定。 &emsp;&emsp;第十五条 禁止用人单位招用未满十六周岁的未成年人。 &emsp;&emsp;文艺、体育和特种工艺单位招用未满十六周岁的未成年人，必须遵守国家有关规定，并保障其接受义务教育的权利。 第三章 劳动合同和集体合同&emsp;&emsp;第十六条 劳动合同是劳动者与用人单位确立劳动关系、明确双方权利和义务的协议。 &emsp;&emsp;建立劳动关系应当订立劳动合同。 &emsp;&emsp;第十七条 订立和变更劳动合同，应当遵循平等自愿、协商一致的原则，不得违反法律、行政法规的规定。 &emsp;&emsp;劳动合同依法订立即具有法律约束力，当事人必须履行劳动合同规定的义务。 &emsp;&emsp;第十八条 下列劳动合同无效： &emsp;&emsp;(一)违反法律、行政法规的劳动合同; &emsp;&emsp;(二)采取欺诈、威胁等手段订立的劳动合同。 &emsp;&emsp;无效的劳动合同，从订立的时候起，就没有法律约束力。确认劳动合同部分无效的，如果不影响其余部分的效力，其余部分仍然有效。 &emsp;&emsp;劳动合同的无效，由劳动争议仲裁委员会或者人民法院确认。 &emsp;&emsp;第十九条 劳动合同应当以书面形式订立，并具备以下条款： &emsp;&emsp;(一)劳动合同期限; &emsp;&emsp;(二)工作内容; &emsp;&emsp;(三)劳动保护和劳动条件; &emsp;&emsp;(四)劳动报酬; &emsp;&emsp;(五)劳动纪律; &emsp;&emsp;(六)劳动合同终止的条件; &emsp;&emsp;(七)违反劳动合同的责任。 &emsp;&emsp;劳动合同除前款规定的必备条款外，当事人可以协商约定其他内容。 &emsp;&emsp;第二十条 劳动合同的期限分为有固定期限、无固定期限和以完成一定的工作为期限。 &emsp;&emsp;劳动者在同一用人单位连续工作满十年以上，当事人双方同意续延劳动合同的，如果劳动者提出订立无固定期限的劳动合同，应当订立无固定期限的劳动合同。 &emsp;&emsp;第二十一条 劳动合同可以约定试用期。试用期最长不得超过六个月。 &emsp;&emsp;第二十二条 劳动合同当事人可以在劳动合同中约定保守用人单位商业秘密的有关事项。 &emsp;&emsp;第二十三条 劳动合同期满或者当事人约定的劳动合同终止条件出现，劳动合同即行终止。 &emsp;&emsp;第二十四条 经劳动合同当事人协商一致，劳动合同可以解除。 &emsp;&emsp;第二十五条 劳动者有下列情形之一的，用人单位可以解除劳动合同： &emsp;&emsp;(一)在试用期间被证明不符合录用条件的; &emsp;&emsp;(二)严重违反劳动纪律或者用人单位规章制度的; &emsp;&emsp;(三)严重失职，营私舞弊，对用人单位利益造成重大损害的; &emsp;&emsp;(四)被依法追究刑事责任的。 &emsp;&emsp;第二十六条 有下列情形之一的，用人单位可以解除劳动合同，但是应当提前三十日以书面形式通知劳动者本人： &emsp;&emsp;(一)劳动者患病或者非因工负伤，医疗期满后，不能从事原工作也不能从事由用人单位另行安排的工作的; &emsp;&emsp;(二)劳动者不能胜任工作，经过培训或者调整工作岗位，仍不能胜任工作的; &emsp;&emsp;(三)劳动合同订立时所依据的客观情况发生重大变化，致使原劳动合同无法履行，经当事人协商不能就变更劳动合同达成协议的。 &emsp;&emsp;第二十七条 用人单位濒临破产进行法定整顿期间或者生产经营状况发生严重困难，确需裁减人员的，应当提前三十日向工会或者全体职工说明情况，听取工会或者职工的意见，经向劳动行政部门报告后，可以裁减人员。 &emsp;&emsp;用人单位依据本条规定裁减人员，在六个月内录用人员的，应当优先录用被裁减的人员。 &emsp;&emsp;第二十八条 用人单位依据本法第二十四条、第二十六条、第二十七条的规定解除劳动合同的，应当依照国家有关规定给予经济补偿。 &emsp;&emsp;第二十九条 劳动者有下列情形之一的，用人单位不得依据本法第二十六条、第二十七条的规定解除劳动合同： &emsp;&emsp;(一)患职业病或者因工负伤并被确认丧失或者部分丧失劳动能力的; &emsp;&emsp;(二)患病或者负伤，在规定的医疗期内的; &emsp;&emsp;(三)女职工在孕期、产期、哺乳期内的; &emsp;&emsp;(四)法律、行政法规规定的其他情形。 &emsp;&emsp;第三十条 用人单位解除劳动合同，工会认为不适当的，有权提出意见。如果用人单位违反法律、法规或者劳动合同，工会有权要求重新处理;劳动者申请仲裁或者提起诉讼的，工会应当依法给予支持和帮助。 &emsp;&emsp;第三十一条 劳动者解除劳动合同，应当提前三十日以书面形式通知用人单位。 &emsp;&emsp;第三十二条 有下列情形之一的，劳动者可以随时通知用人单位解除劳动合同： &emsp;&emsp;(一)在试用期内的; &emsp;&emsp;(二)用人单位以暴力、威胁或者非法限制人身自由的手段强迫劳动的; &emsp;&emsp;(三)用人单位未按照劳动合同约定支付劳动报酬或者提供劳动条件的。 &emsp;&emsp;第三十三条 企业职工一方与企业可以就劳动报酬、工作时间、休息休假、劳动安全卫生、保险福利等事项，签订集体合同。集体合同草案应当提交职工代表大会或者全体职工讨论通过。 &emsp;&emsp;集体合同由工会代表职工与企业签订;没有建立工会的企业，由职工推举的代表与企业签订。 &emsp;&emsp;第三十四条 集体合同签订后应当报送劳动行政部门;劳动行政部门自收到集体合同文本之日起十五日内未提出异议的，集体合同即行生效。 &emsp;&emsp;第三十五条 依法签订的集体合同对企业和企业全体职工具有约束力。职工个人与企业订立的劳动合同中劳动条件和劳动报酬等标准不得低于集体合同的规定。 第四章 工作时间和休息休假&emsp;&emsp;第三十六条 国家实行劳动者每日工作时间不超过八小时、平均每周工作时间不超过四十四小时的工时制度。 &emsp;&emsp;第三十七条 对实行计件工作的劳动者，用人单位应当根据本法第三十六条规定的工时制度合理确定其劳动定额和计件报酬标准。 &emsp;&emsp;第三十八条 用人单位应当保证劳动者每周至少休息一日。 &emsp;&emsp;第三十九条 企业因生产特点不能实行本法第三十六条、第三十八条规定的，经劳动行政部门批准，可以实行其他工作和休息办法。 &emsp;&emsp;第四十条 用人单位在下列节日期间应当依法安排劳动者休假： &emsp;&emsp;(一)元旦; &emsp;&emsp;(二)春节; &emsp;&emsp;(三)国际劳动节; &emsp;&emsp;(四)国庆节; &emsp;&emsp;(五)法律、法规规定的其他休假节日。 &emsp;&emsp;第四十一条 用人单位由于生产经营需要，经与工会和劳动者协商后可以延长工作时间，一般每日不得超过一小时;因特殊原因需要延长工作时间的，在保障劳动者身体健康的条件下延长工作时间每日不得超过三小时，但是每月不得超过三十六小时。 &emsp;&emsp;第四十二条 有下列情形之一的，延长工作时间不受本法第四十一条规定的限制： &emsp;&emsp;(一)发生自然灾害、事故或者因其他原因，威胁劳动者生命健康和财产安全，需要紧急处理的; &emsp;&emsp;(二)生产设备、交通运输线路、公共设施发生故障，影响生产和公众利益，必须及时抢修的; &emsp;&emsp;(三)法律、行政法规规定的其他情形。 &emsp;&emsp;第四十三条 用人单位不得违反本法规定延长劳动者的工作时间。 &emsp;&emsp;第四十四条 有下列情形之一的，用人单位应当按照下列标准支付高于劳动者正常工作时间工资的工资报酬： &emsp;&emsp;(一)安排劳动者延长工作时间的，支付不低于工资的百分之一百五十的工资报酬; &emsp;&emsp;(二)休息日安排劳动者工作又不能安排补休的，支付不低于工资的百分之二百的工资报酬; &emsp;&emsp;(三)法定休假日安排劳动者工作的，支付不低于工资的百分之三百的工资报酬。 &emsp;&emsp;第四十五条 国家实行带薪年休假制度。 &emsp;&emsp;劳动者连续工作一年以上的，享受带薪年休假。具体办法由国务院规定。 第五章 工 资&emsp;&emsp;第四十六条 工资分配应当遵循按劳分配原则，实行同工同酬。 &emsp;&emsp;工资水平在经济发展的基础上逐步提高。国家对工资总量实行宏观调控。 &emsp;&emsp;第四十七条 用人单位根据本单位的生产经营特点和经济效益，依法自主确定本单位的工资分配方式和工资水平。 &emsp;&emsp;第四十八条 国家实行最低工资保障制度。最低工资的具体标准由省、自治区、直辖市人民政府规定，报国务院备案。 &emsp;&emsp;用人单位支付劳动者的工资不得低于当地最低工资标准。 &emsp;&emsp;第四十九条 确定和调整最低工资标准应当综合参考下列因素： &emsp;&emsp;(一)劳动者本人及平均赡养人口的最低生活费用; &emsp;&emsp;(二)社会平均工资水平; &emsp;&emsp;(三)劳动生产率; &emsp;&emsp;(四)就业状况; &emsp;&emsp;(五)地区之间经济发展水平的差异。 &emsp;&emsp;第五十条 工资应当以货币形式按月支付给劳动者本人。不得克扣或者无故拖欠劳动者的工资。 &emsp;&emsp;第五十一条 劳动者在法定休假日和婚丧假期间以及依法参加社会活动期间，用人单位应当依法支付工资。 第六章 劳动安全卫生&emsp;&emsp;第五十二条 用人单位必须建立、健全劳动安全卫生制度，严格执行国家劳动安全卫生规程和标准，对劳动者进行劳动安全卫生教育，防止劳动过程中的事故，减少职业危害。 &emsp;&emsp;第五十三条 劳动安全卫生设施必须符合国家规定的标准。 &emsp;&emsp;新建、改建、扩建工程的劳动安全卫生设施必须与主体工程同时设计、同时施工、同时投入生产和使用。 &emsp;&emsp;第五十四条 用人单位必须为劳动者提供符合国家规定的劳动安全卫生条件和必要的劳动防护用品，对从事有职业危害作业的劳动者应当定期进行健康检查。 &emsp;&emsp;第五十五条 从事特种作业的劳动者必须经过专门培训并取得特种作业资格。 &emsp;&emsp;第五十六条 劳动者在劳动过程中必须严格遵守安全操作规程。 &emsp;&emsp;劳动者对用人单位管理人员违章指挥、强令冒险作业，有权拒绝执行;对危害生命安全和身体健康的行为，有权提出批评、检举和控告。 &emsp;&emsp;第五十七条 国家建立伤亡事故和职业病统计报告和处理制度。县级以上各级人民政府劳动行政部门、有关部门和用人单位应当依法对劳动者在劳动过程中发生的伤亡事故和劳动者的职业病状况，进行统计、报告和处理。 第七章 女职工和未成年工特殊保护&emsp;&emsp;第五十八条 国家对女职工和未成年工实行特殊劳动保护。 &emsp;&emsp;未成年工是指年满十六周岁未满十八周岁的劳动者。 &emsp;&emsp;第五十九条 禁止安排女职工从事矿山井下、国家规定的第四级体力劳动强度的劳动和其他禁忌从事的劳动。 &emsp;&emsp;第六十条 不得安排女职工在经期从事高处、低温、冷水作业和国家规定的第三级体力劳动强度的劳动。 &emsp;&emsp;第六十一条 不得安排女职工在怀孕期间从事国家规定的第三级体力劳动强度的劳动和孕期禁忌从事的劳动。对怀孕七个月以上的女职工，不得安排其延长工作时间和夜班劳动。 &emsp;&emsp;第六十二条 女职工生育享受不少于九十天的产假。 &emsp;&emsp;第六十三条 不得安排女职工在哺乳未满一周岁的婴儿期间从事国家规定的第三级体力劳动强度的劳动和哺乳期禁忌从事的其他劳动，不得安排其延长工作时间和夜班劳动。 &emsp;&emsp;第六十四条 不得安排未成年工从事矿山井下、有毒有害、国家规定的第四级体力劳动强度的劳动和其他禁忌从事的劳动。 &emsp;&emsp;第六十五条 用人单位应当对未成年工定期进行健康检查。 第八章 职业培训&emsp;&emsp;第六十六条 国家通过各种途径，采取各种措施，发展职业培训事业，开发劳动者的职业技能，提高劳动者素质，增强劳动者的就业能力和工作能力。 &emsp;&emsp;第六十七条 各级人民政府应当把发展职业培训纳入社会经济发展的规划，鼓励和支持有条件的企业、事业组织、社会团体和个人进行各种形式的职业培训。 &emsp;&emsp;第六十八条 用人单位应当建立职业培训制度，按照国家规定提取和使用职业培训经费，根据本单位实际，有计划地对劳动者进行职业培训。 &emsp;&emsp;从事技术工种的劳动者，上岗前必须经过培训。 &emsp;&emsp;第六十九条 国家确定职业分类，对规定的职业制定职业技能标准，实行职业资格证书制度，由经备案的考核鉴定机构负责对劳动者实施职业技能考核鉴定。 第九章 社会保险和福利&emsp;&emsp;第七十条 国家发展社会保险事业，建立社会保险制度，设立社会保险基金，使劳动者在年老、患病、工伤、失业、生育等情况下获得帮助和补偿。 &emsp;&emsp;第七十一条 社会保险水平应当与社会经济发展水平和社会承受能力相适应。 &emsp;&emsp;第七十二条 社会保险基金按照保险类型确定资金来源，逐步实行社会统筹。用人单位和劳动者必须依法参加社会保险，缴纳社会保险费。 &emsp;&emsp;第七十三条 劳动者在下列情形下，依法享受社会保险待遇： &emsp;&emsp;(一)退休; &emsp;&emsp;(二)患病、负伤; &emsp;&emsp;(三)因工伤残或者患职业病; &emsp;&emsp;(四)失业; &emsp;&emsp;(五)生育。 &emsp;&emsp;劳动者死亡后，其遗属依法享受遗属津贴。 &emsp;&emsp;劳动者享受社会保险待遇的条件和标准由法律、法规规定。 &emsp;&emsp;劳动者享受的社会保险金必须按时足额支付。 &emsp;&emsp;第七十四条 社会保险基金经办机构依照法律规定收支、管理和运营社会保险基金，并负有使社会保险基金保值增值的责任。 &emsp;&emsp;社会保险基金监督机构依照法律规定，对社会保险基金的收支、管理和运营实施监督。 &emsp;&emsp;社会保险基金经办机构和社会保险基金监督机构的设立和职能由法律规定。 &emsp;&emsp;任何组织和个人不得挪用社会保险基金。 &emsp;&emsp;第七十五条 国家鼓励用人单位根据本单位实际情况为劳动者建立补充保险。 &emsp;&emsp;国家提倡劳动者个人进行储蓄性保险。 &emsp;&emsp;第七十六条 国家发展社会福利事业，兴建公共福利设施，为劳动者休息、休养和疗养提供条件。 &emsp;&emsp;用人单位应当创造条件，改善集体福利，提高劳动者的福利待遇。 第十章 劳动争议&emsp;&emsp;第七十七条 用人单位与劳动者发生劳动争议，当事人可以依法申请调解、仲裁、提起诉讼，也可以协商解决。 &emsp;&emsp;调解原则适用于仲裁和诉讼程序。 &emsp;&emsp;第七十八条 解决劳动争议，应当根据合法、公正、及时处理的原则，依法维护劳动争议当事人的合法权益。 &emsp;&emsp;第七十九条 劳动争议发生后，当事人可以向本单位劳动争议调解委员会申请调解;调解不成，当事人一方要求仲裁的，可以向劳动争议仲裁委员会申请仲裁。当事人一方也可以直接向劳动争议仲裁委员会申请仲裁。对仲裁裁决不服的，可以向人民法院提起诉讼。 &emsp;&emsp;第八十条 在用人单位内，可以设立劳动争议调解委员会。劳动争议调解委员会由职工代表、用人单位代表和工会代表组成。劳动争议调解委员会主任由工会代表担任。 &emsp;&emsp;劳动争议经调解达成协议的，当事人应当履行。 &emsp;&emsp;第八十一条 劳动争议仲裁委员会由劳动行政部门代表、同级工会代表、用人单位方面的代表组成。劳动争议仲裁委员会主任由劳动行政部门代表担任。 &emsp;&emsp;第八十二条 提出仲裁要求的一方应当自劳动争议发生之日起六十日内向劳动争议仲裁委员会提出书面申请。仲裁裁决一般应在收到仲裁申请的六十日内作出。对仲裁裁决无异议的，当事人必须履行。 &emsp;&emsp;第八十三条 劳动争议当事人对仲裁裁决不服的，可以自收到仲裁裁决书之日起十五日内向人民法院提起诉讼。一方当事人在法定期限内不起诉又不履行仲裁裁决的，另一方当事人可以申请人民法院强制执行。 &emsp;&emsp;第八十四条 因签订集体合同发生争议，当事人协商解决不成的，当地人民政府劳动行政部门可以组织有关各方协调处理。 &emsp;&emsp;因履行集体合同发生争议，当事人协商解决不成的，可以向劳动争议仲裁委员会申请仲裁;对仲裁裁决不服的，可以自收到仲裁裁决书之日起十五日内向人民法院提起诉讼。 第十一章 监督检查&emsp;&emsp;第八十五条 县级以上各级人民政府劳动行政部门依法对用人单位遵守劳动法律、法规的情况进行监督检查，对违反劳动法律、法规的行为有权制止，并责令改正。 &emsp;&emsp;第八十六条 县级以上各级人民政府劳动行政部门监督检查人员执行公务，有权进入用人单位了解执行劳动法律、法规的情况，查阅必要的资料，并对劳动场所进行检查。 &emsp;&emsp;县级以上各级人民政府劳动行政部门监督检查人员执行公务，必须出示证件，秉公执法并遵守有关规定。 &emsp;&emsp;第八十七条 县级以上各级人民政府有关部门在各自职责范围内，对用人单位遵守劳动法律、法规的情况进行监督。 &emsp;&emsp;第八十八条 各级工会依法维护劳动者的合法权益，对用人单位遵守劳动法律、法规的情况进行监督。 &emsp;&emsp;任何组织和个人对于违反劳动法律、法规的行为有权检举和控告。 第十二章 法律责任&emsp;&emsp;第八十九条 用人单位制定的劳动规章制度违反法律、法规规定的，由劳动行政部门给予警告，责令改正;对劳动者造成损害的，应当承担赔偿责任。 &emsp;&emsp;第九十条 用人单位违反本法规定，延长劳动者工作时间的，由劳动行政部门给予警告，责令改正，并可以处以罚款。 &emsp;&emsp;第九十一条 用人单位有下列侵害劳动者合法权益情形之一的，由劳动行政部门责令支付劳动者的工资报酬、经济补偿，并可以责令支付赔偿金： &emsp;&emsp;(一)克扣或者无故拖欠劳动者工资的; &emsp;&emsp;(二)拒不支付劳动者延长工作时间工资报酬的; &emsp;&emsp;(三)低于当地最低工资标准支付劳动者工资的; &emsp;&emsp;(四)解除劳动合同后，未依照本法规定给予劳动者经济补偿的。 &emsp;&emsp;第九十二条 用人单位的劳动安全设施和劳动卫生条件不符合国家规定或者未向劳动者提供必要的劳动防护用品和劳动保护设施的，由劳动行政部门或者有关部门责令改正，可以处以罚款;情节严重的，提请县级以上人民政府决定责令停产整顿;对事故隐患不采取措施，致使发生重大事故，造成劳动者生命和财产损失的，对责任人员依照刑法有关规定追究刑事责任。 &emsp;&emsp;第九十三条 用人单位强令劳动者违章冒险作业，发生重大伤亡事故，造成严重后果的，对责任人员依法追究刑事责任。 &emsp;&emsp;第九十四条 用人单位非法招用未满十六周岁的未成年人的，由劳动行政部门责令改正，处以罚款;情节严重的，由市场监督管理部门吊销营业执照。 &emsp;&emsp;第九十五条 用人单位违反本法对女职工和未成年工的保护规定，侵害其合法权益的，由劳动行政部门责令改正，处以罚款;对女职工或者未成年工造成损害的，应当承担赔偿责任。 &emsp;&emsp;第九十六条 用人单位有下列行为之一，由公安机关对责任人员处以十五日以下拘留、罚款或者警告;构成犯罪的，对责任人员依法追究刑事责任： &emsp;&emsp;(一)以暴力、威胁或者非法限制人身自由的手段强迫劳动的; &emsp;&emsp;(二)侮辱、体罚、殴打、非法搜查和拘禁劳动者的。 &emsp;&emsp;第九十七条 由于用人单位的原因订立的无效合同，对劳动者造成损害的，应当承担赔偿责任。 &emsp;&emsp;第九十八条 用人单位违反本法规定的条件解除劳动合同或者故意拖延不订立劳动合同的，由劳动行政部门责令改正;对劳动者造成损害的，应当承担赔偿责任。 &emsp;&emsp;第九十九条 用人单位招用尚未解除劳动合同的劳动者，对原用人单位造成经济损失的，该用人单位应当依法承担连带赔偿责任。 &emsp;&emsp;第一百条 用人单位无故不缴纳社会保险费的，由劳动行政部门责令其限期缴纳;逾期不缴的，可以加收滞纳金。 &emsp;&emsp;第一百零一条 用人单位无理阻挠劳动行政部门、有关部门及其工作人员行使监督检查权，打击报复举报人员的，由劳动行政部门或者有关部门处以罚款;构成犯罪的，对责任人员依法追究刑事责任。 &emsp;&emsp;第一百零二条 劳动者违反本法规定的条件解除劳动合同或者违反劳动合同中约定的保密事项，对用人单位造成经济损失的，应当依法承担赔偿责任。 &emsp;&emsp;第一百零三条 劳动行政部门或者有关部门的工作人员滥用职权、玩忽职守、徇私舞弊，构成犯罪的，依法追究刑事责任;不构成犯罪的，给予行政处分。 &emsp;&emsp;第一百零四条 国家工作人员和社会保险基金经办机构的工作人员挪用社会保险基金，构成犯罪的，依法追究刑事责任。 &emsp;&emsp;第一百零五条 违反本法规定侵害劳动者合法权益，其他法律、行政法规已规定处罚的，依照该法律、行政法规的规定处罚。 第十三章 附 则&emsp;&emsp;第一百零六条 省、自治区、直辖市人民政府根据本法和本地区的实际情况，规定劳动合同制度的实施步骤，报国务院备案。 &emsp;&emsp;第一百零七条 本法自1995年1月1日起施行。 备注： 本条例生效时间为：2018.12.29,截至2022年仍然有效 最近更新：2022.01.18","categories":[],"tags":[]},{"title":"hexo博客分享","slug":"hexo博客分享","date":"2022-06-04T16:15:55.000Z","updated":"2022-06-04T19:30:18.164Z","comments":true,"path":"62222.html","link":"","permalink":"https://blog.lixin.ee/62222.html","excerpt":"","text":"罹寒 - 后凋少年拿云，谁念幽寒。https://freezing.cool 42cloud and 42team42cloud 是一个有意思的空间https://42cloud.cn 一袋米要抗几楼一个 Javaer 的博客，用于记录工作学习上遇到的问题或笔记https://blog.cayzlh.com YINUXY’S BLOG理想的生活就是生活的理想https://blog.yinuxy.com 凉风的博客凉风的博客，主要分享网络安全、安全开发相关的技术文章https://lltuo.com Hexo-Theme-LxA simple &amp; clear &amp; elegant hexo theme.https://lx.blleng.cn Royce 的小窝OI 小白https://royce2003.top bmyjacks blog分享个人的一些学习心得，交流技术https://www.bmyjacks.cn **YINUXY’S BLOG **理想的生活就是生活的理想https://blog.yinuxy.com 班班碎碎念无曰已是，无曰遂真；记录日常学习生活与碎碎念。https://blog.dlzhang.com ajin blog小菜鸡，主要分享技术文章，学习记录，学习方向https://www.ajin.cloud EasyHexo🤘 Build your own website with Hexo, the easy way. | 轻松使用 Hexo 建站。https://github.com/EasyHexo/Easy-Hexo 云游君的小站希望能成为一个有趣的任https://www.yunyoujun.cntheme YUN：https://github.com/YunYouJun/hexo-theme-yun saki.li一个以传统纸张，后现代主义为风格的 Hexo 主题，拥有理性（不添加多余元素）和非理性（比如使用衬线字体）。欢迎试用。https://github.com/eatradish/saki.li 豪进的博客Keep mindful living.https://lihaojin.cntheme Icarus：https://github.com/ppoffice/hexo-theme-icarus 庭说保持勃起的好奇心https://tingtalk.mehttps://theme-next.js.org/mist/ RivenNero’s Blog有许多人在笑着，我想那一定不会错https://rivennero.comhttps://theme-next.js.org/ Editing’s Dream专注更新主题，随机更新文章https://editio.me 苏格兰高地没有狮子想到什么写什么https://guff.inhttps://theme-next.org/ 始终个人技术类博客，主题集中在：机器学习、深度学习（NLP、推荐系统）、LaTeX、C++、Linux、常见大数据工具等方向。除此之外，还会写一些诸如欧洲史、音乐理论、英文文法之类的文章。欢迎浏览、订阅 RSS。https://liam.pagehttps://theme-next.org/ Leon Vision偶尔写写理财和技术https://leonvision.onlinehttps://theme-next.org/ 猫梨の部屋日常向博客，什么都写系列https://nek0ri.de Zhangfei’s Blog转载大王https://zhangfei.menhttps://theme-next.org/ Mr.Cosine’s Blog算法竞赛用https://cosine22.xyz Alfred’s blog什么都写，佛系更新https://blog.nameidi.top 大牙的一亩三分地93 年的社畜，现在从事一名 SRE（简单理解为写代码的运维），个人博客主要分享一些学习笔记 &amp; 生活点滴。最近成功从技术分享转型为旅行记录的博主https://changchen.me 随遇而安生活吐槽 &amp; 学习记录https://www.iszy.cc DimensionXA strange place where Mivik lives / Mivik 的小窝目前博客搭建不久，文章数量较少，后续会将自己的日常和一些有趣的想法搬到博客上来。https://mivik.gitee.io 一番队长记录学习与成长https://ivenbao.github.io KANIKIG BLOG兴趣使然https://blog.kanikig.xyz 苏寅 Blog全栈、教程、工具、总结https://suyin-blog.club 孤岛鲸一个分享日常生活与技术方向的博客https://kugougo.github.io LITREILY技术分享，嵌入式 Linux 开发，网络技术，Python 爬虫等。Hexo 主题：自己设计的 snark 。https://www.litreily.top hexo-theme-yummy移植 Jekyll 的一款简洁风格主题，作者不会写前端样式那些，所有样式都是照搬的，目前集成了 Hexo 一些基础功能。https://github.com/cayzlh/hexo-theme-yummy Reckful欢迎你，陌生的旅人https://www.reckful.cn 陆宇的个人博客个人经验分享，关于技术、生活等。https://blog.infonet.io ColdCard 的小黑屋没技术，纯爱好，博文没几篇，主要享受搭建过程https://coldcard.wang 曾晋哲的博客发一些自己创作的内容，大杂烩https://njzjz.win 炸裂志无去来处，动静等观https://zhaliezhi.com Geniucker’s Blog崇尚技术https://geniucker.js.org Gavin’s blog分享人工智能相关的文章以及软件开发方向的心得总结https://iotop.top 饿龙不是龙哩Fluid 主题美化|记录|分享|碎碎念|人穷志短|日常自闭|没有技术|复制粘贴|热爱一切美好https://liuyifei.club 无岸海你眼里银河有迹可循https://noshore.cn 挨拍的儿一个纯粹的互联网爱好者https://JimmyQin.cn 逸文笔记见天地，见众生，见自己历史 | 政治 | 其他https://www.evennotes.cn 零奇部落阁喜欢视频创作的程序猿http://www.zyskys.com 一只会敲代码的 Sheep分享自己最近正在研究的东西https://www.koyang.shop Eren’s SpaceshipEren 的一片自留地https://erenspace.cool 若风从折腾到弃疗……开始专注文字😅https://loafing.cn Lunski’s Clutter程序員 Lunski 與他的貓熊 Shvara 的日常https://eric999j.github.io InFaNg’s Blog记录 ACM 程序设计竞赛日常https://infang.me Catowenblog这是个 catowen 的博客http://catowen.top Lone0x0’s Blog一个分享技术的博客https://lone0x0.github.io Xcbyao’s worldxcbyao 的技术分享自留地https://xcbyao.github.io rxliuli吾辈是 rxliuli（中文名是 琉璃），喜欢现代前端的全沾开发者（曾经的后端开发）。https://blog.rxliuli.com nojsja’ 个人博客编程、开发分享，专注前端和 Linux 领域https://nojsja.gitee.io/blogs Xecades’s Neverland有趣的知识https://xecades.xyz 梦落の小屋时不时更新一些技术教程（但是我懒）https://blog.dreamfall.cntheme Butterfly：https://github.com/jerryc127/hexo-theme-butterfly LYTian 博客活着就是为了折腾https://www.lytian.xyz lopponia’s blog分享个人的开发以及学习笔记https://blog.stelpolvo.com 宝硕博客宝硕 (@renbaoshuo) 随便写东西的地方，以技术向博文为主，生活向博文为辅。https://blog.baoshuo.ren Sady’Blog永远年轻，永远热泪盈眶https://sady0.com 雪藏的部落格 一个原创的技术类博客。认真写博客，让看到博文的人受益。https://isora.cc 屠•城屠夫 9441 的博客https://www.haomwei.comTheme Maupassant：https://github.com/tufu9441/maupassant-hexo","categories":[],"tags":[]},{"title":"Windows系统及office软件","slug":"Windows系统及office软件","date":"2022-05-22T03:13:50.000Z","updated":"2022-05-22T03:38:01.244Z","comments":true,"path":"38461.html","link":"","permalink":"https://blog.lixin.ee/38461.html","excerpt":"","text":"win10原版精简版office原版精简版","categories":[],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://blog.lixin.ee/tags/Windows/"},{"name":"office","slug":"office","permalink":"https://blog.lixin.ee/tags/office/"}]},{"title":"摄影构图学","slug":"摄影构图学","date":"2021-12-29T02:01:38.000Z","updated":"2022-04-18T05:38:45.429Z","comments":true,"path":"16550.html","link":"","permalink":"https://blog.lixin.ee/16550.html","excerpt":"","text":"","categories":[],"tags":[]},{"title":"应届毕业生补助","slug":"应届毕业生补助","date":"2021-12-21T12:36:43.000Z","updated":"2021-12-21T12:38:40.728Z","comments":true,"path":"5378.html","link":"","permalink":"https://blog.lixin.ee/5378.html","excerpt":"","text":"","categories":[{"name":"毕业了","slug":"毕业了","permalink":"https://blog.lixin.ee/categories/%E6%AF%95%E4%B8%9A%E4%BA%86/"}],"tags":[]},{"title":"hexo部署到阿里云香港OSS","slug":"hexo部署到阿里云香港OSS","date":"2021-12-10T11:30:42.000Z","updated":"2021-12-10T13:27:52.123Z","comments":true,"path":"6862.html","link":"","permalink":"https://blog.lixin.ee/6862.html","excerpt":"","text":"原文香港oss免备案 + github workflow 自动部署https静态网站hexo部署到github访问速度实在是太慢，想着通过香港地区的对象存储来存放，这里推荐阿里云oss，自定义域名支持上传ssl证书。下图一次是github、阿里云香港oss、经过CDN加速的阿里云香港oss","categories":[],"tags":[]},{"title":"青年大学习","slug":"青年大学习","date":"2021-12-06T13:10:19.000Z","updated":"2021-12-10T07:25:03.727Z","comments":true,"path":"322.html","link":"","permalink":"https://blog.lixin.ee/322.html","excerpt":"","text":"本地跳过苹果手机自带外挂，打开控制中心直接划到最后即可 安卓手机跳过青年大学习视频，以下步骤在微信app内完成第一步、打开这个链接debugmm.qq.com/?forcex5=true点开后，退出就行了，接着下一步 第二步、安装线上内核http://debugtbs.qq.com 第三步、打开这个网页debugx5.qq.com最上方大字，点信息打开vConsole调试功能 第四步.开始学习后点开右下角绿标，输入代码 1document.getElementById(‘Bvideo’).currentTime=9999 代码中9999是跳过的秒数，只要大于青年大学习的秒数就可以，需要输入两遍代码，第一遍答题，第二遍跳视频 如果需要截图的话再输入代码去掉绿标 1__vconsole.style.display=”none”; 以后每次青年大学习只需要进行输入代码就可以了 直接生成截图younthStudy通过爬取中青网页面元素,获取最新一期的青年大学习页面信息, 生成完成学习的界面，只有截图没有后台观看记录，演示站点青年大学习截图,此项目是gitee上的younthStudy项目，这个项目我已经使用了将近一年。 下载gitee：younthStudy网盘下载：蓝奏网盘 构架 Nodejs构建服务端 模块使用 koa + cheerio + axios axios 获取 HTMLcheerio 解析获取到的 HTMLkoa 做应用服务器返回网页数据 思路1.用中青网作为主入口跳板 www.cyol.com 因为中青网域名固定,保证进到的青年大学习列表页是最新的爬取路径: .school dt.dtsty1 &gt; a:first-child (href)得到青年大学习列表页地址 2.从青年大学习列表页中获取最新一期青年大学习地址 爬取路径: ul.movie-list &gt; li:first-child &gt; a:first-child (href)得到最新一期大学习地址 使用说明1.安装 nodejs(必须的), 版本不限, 8.0 及以上2.安装模块请使用 yarn (npm 处理依赖存在问题) 123456789# 安装模块npx yarn# 或者npm install -g yarn &amp;&amp; yarn# 启动服务node ./index.js# 或者yarn start 3.服务端口","categories":[],"tags":[]},{"title":"过得充实的人，都有这六个好习惯","slug":"过得充实的人，都有这六个好习惯","date":"2021-11-27T14:56:08.000Z","updated":"2021-11-27T15:27:07.952Z","comments":true,"path":"14860.html","link":"","permalink":"https://blog.lixin.ee/14860.html","excerpt":"","text":"1一是读书。一个人每天至少应该花上半小时读书。也许不读书，并不影响正常的生活。只要你吃饱了饭，肚子就不会饿；只要你按时休息，就不会觉得困。但不读书，会影响你的生活质量。不读书，你的语言会变得乏味，你的思想会变得平庸，你的人生也随之变得单调。 一个人在读书中不断成长和进步，才能遇见更好的自己。不读书，只会活得越来越僵化和麻木。 二是运动。一个人无论再忙，都要抽出时间来运动。生命在于运动。不运动的坏处很多，每天久坐不动，或者躺着不动，不仅容易引起肥胖，身体素质会变差，也会让自己越来越懒散。 而常常运动，不仅可以很好地控制体重、保持身体的健康，也可以让自己变得朝气蓬勃，还能锻炼自己的意志力。当你活动起来时，你会有一个越来越棒的身体，也会给自己带来越来越积极的生活状态。 2三是培养兴趣。一个人总要有一两个兴趣爱好，才能让生活变得更丰富有趣。一个人有爱好和没爱好，过的是不一样的人生。如果没有爱好，他会感到无聊，甚至每天浑浑噩噩地过着毫无意思的生活。但如果有了爱好，日子会过得有趣起来，生活也会充满活力。 俗话说：“人无癖，不可交。”我们每个人都有自己特别喜欢做的事情，每一天都或多或少有自己的闲暇时间。不要虚度光阴，把空闲时间花在自己真正热爱的事上。如此，人生就会变得特别不一样。 四是制定计划。一个人能根据自己的情况制定计划并坚持执行，才能不断取得进步。一个人如果每天只是重复昨天的自己，就很难有所成长；如果只是重复昨天的生活，日子就会过得无趣。想要生活变得更精彩，你要学会给自己定下一些稍有难度、但通过努力可以实现的目标和计划。 你可以在某一段时间内，学一个新技能，比如游泳、钢琴、射击等；你可以在某一个阶段内，把自己的状态调整得更加积极、乐观、向上；你还可以在一年的时间里，培养早起、早睡或者午休的好习惯。当你的生活有了目标，你就会在努力中逐渐变成越来越好的自己。 3五是自省。一个人每天都应该留出自省的时间，把这一天自己的一言一行乃至一念，都做一个自我检讨。每个人都不是完人，但每个人都有自我改错的能力和机会。一句话说错了，争取下一次说得更得体、更有分寸，这就是进步；一件事做错了，争取同样的错误不犯第二次，这就是成长；产生了不好的念头，也不能轻易地纵容自己，正面去分析和纠正它，这就是一个新的开始。 一个懂得自省的人，就拥有了自我更新的能力。只有你肯正视自己的错误和不足，才能不断完善和提高自己。 六是保持好心态。一个人再厉害和优秀，也要始终保持空杯心态。一个人只有暂时放下过去的所学、所闻、所见，才有可能接纳和学习更多的东西，才会变得更博学、也更智慧。一个人越是自以为是，就越像满杯的水，再也装不下更新、更好、更棒的学问和知识。而一个人越是虚心求学，就越能不断拓宽自己，让自己不断去吸收、去借鉴、去向比自己更出色的人学习。当一个人保持着不断上进和精进的心态，他的人生才能过得如开挂般精彩。","categories":[],"tags":[]},{"title":"GitHub+Hexo搭建个人博客","slug":"GitHub-Hexo搭建个人博客","date":"2021-11-24T02:26:53.000Z","updated":"2021-12-02T10:13:29.191Z","comments":true,"path":"6447.html","link":"","permalink":"https://blog.lixin.ee/6447.html","excerpt":"","text":"什么是Hexo ?Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。这里我们选用的是GitHub。Hexo同时也是GitHub上的开源项目，参见：hexojs/hexo如果想要更加全面的了解Hexo，可以到其官网Hexo了解更多的细节，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。 搭建步骤： GitHub创建个人仓库 安装Git 安装Node.js 安装Hexo 推送网站 获得个人网站域名 绑定域名 更换主题 初识MarkDown语法 发布文章 寻找图床 个性化设置 其他 附录 GitHub创建个人仓库登录到GitHub,如果没有GitHub帐号，使用你的邮箱注册GitHub帐号：Build software better, together 点击GitHub中的New repository创建新仓库，仓库名应该为：用户名.github.io 这个用户名使用你的GitHub帐号名称代替，这是固定写法，比如我的仓库名为： 安装Git什么是Git ?简单来说Git是开源的分布式版本控制系统，用于敏捷高效地处理项目。我们网站在本地搭建好了，需要使用Git同步到GitHub上。如果想要了解Git的细节，参看廖雪峰老师的Git教程：Git教程 从Git官网下载：Git - Downloading Package 现在的机子基本都是64位的，选择64位的安装包，下载后安装，在命令行里输入git测试是否安装成功，若安装失败，参看其他详细的Git安装教程。安装成功后，将你的Git与GitHub帐号绑定，鼠标右击打开Git Bash 或者在菜单里搜索Git Bash，设置user.name和user.email配置信息： 12git config --global user.name &quot;你的GitHub用户名&quot;git config --global user.email &quot;你的GitHub注册邮箱&quot; 生成ssh密钥文件： 1ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot; 然后直接三个回车即可，默认不需要设置密码然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制 打开GitHub_Settings_keys 页面，新建new SSH Key Title为标题，任意填即可，将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key。在Git Bash中检测GitHub公钥设置是否成功，输入 ssh &#x67;&#x69;&#x74;&#x40;&#x67;&#x69;&#116;&#104;&#117;&#98;&#46;&#99;&#x6f;&#x6d; ： 如上则说明成功。这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。 安装Node.jsHexo基于Node.js，Node.js下载地址：Download | Node.js 下载安装包，注意安装Node.js会包含环境变量及npm的安装，安装后，检测Node.js是否安装成功，在命令行中输入 1node -v 检测npm是否安装成功，在命令行中输入 1npm -v 到这了，安装Hexo的环境已经全部搭建完成。 安装HexoHexo就是我们的个人博客网站的框架， 这里需要自己在电脑常里创建一个文件夹，可以命名为Blog，Hexo框架与以后你自己发布的网页都在这个文件夹中。创建好后，进入文件夹中，按住shift键，右击鼠标点击命令行 推送网站获得个人网站域名绑定域名更换主题初识MarkDown语法发布文章寻找图床个性化设置其他附录","categories":[{"name":"hexo博客","slug":"hexo博客","permalink":"https://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"}],"tags":[]},{"title":"hexo博客的备份与恢复","slug":"hexo博客的备份与恢复","date":"2021-11-22T05:03:55.000Z","updated":"2022-04-18T05:31:18.148Z","comments":true,"path":"18547.html","link":"","permalink":"https://blog.lixin.ee/18547.html","excerpt":"","text":"为了防止误操作或计算机崩溃导致的博客源文件丢失，或满足我们更换电脑进行写作的需求，定期进行备份与恢复就显得很重要了。 备份需备份的文件目录 我们在进行备份时，并不需要将整个博客目录全部备份，只备份以下几个用户自定义的即可：scaffolds目录，source目录，themes目录，.gitignore文件，_config.yml文件，package.json文件，其他都是通用的。 首先我们先来观察整个博客目录的结构： (1) .deploy_git 本目录会在我们部署时生成，也就是github上保存的文件，无需备份。 (2) node_modules 本目录包含了hexo博客依赖的模块，安装时自动生成，无需备份。 (3) public 与.deploy_git类似，是编译后生成的文件静态网页文件，无需备份。 (4) scaffolds 保存了用户文章的模板，需要备份。 (5) source 保存了用户文章的源文件，需要备份。 (6) themes 保存了用户下载的主题文件与配置，需要备份。 (7) .gitignore 保存了推送到github时忽略的文件名，需要备份。 (8) _config.yml 保存了用户配置信息，需要备份。 (9) db.json 保存了网页的数据文件，在编译生成静态网页时会自动更新，无需备份。 (10) package.json 保存了依赖的模块列表，需要备份。 (11) package-lock.json 保存了依赖的模块安装记录，无需备份。 备份操作在了解了需要备份的文件后，就可以进行备份了，可以手动找到这些文件并将其拷贝出来，或者上传到云端，但这样无疑是比较麻烦的。复制这一重复性操作可以编写一个批处理脚本进行操作： 123456789@echo offecho d|xcopy &quot;scaffolds&quot; &quot;../Back-up/MyBlog/scaffolds&quot; /E/I/Yecho d|xcopy &quot;source&quot; &quot;../Back-up/MyBlog/source&quot; /E/I/Yecho d|xcopy &quot;themes&quot; &quot;../Back-up/MyBlog/themes&quot; /E/I/Yecho f|xcopy &quot;.gitignore&quot; &quot;../Back-up/MyBlog/.gitignore&quot; /E/I/Yecho f|xcopy &quot;_config.yml&quot; &quot;../Back-up/MyBlog/_config.yml&quot; /E/I/Yecho f|xcopy &quot;package.json&quot; &quot;../Back-up/MyBlog/package.json&quot; /E/I/Yecho 备份完成！pause 使用xcopy命令来完成复制操作，格式为：xcopy &lt;需拷贝的文件路径&gt; &lt;拷贝后的文件路径&gt;，有时系统可能会无法判断路径是文件名还是目录名，在执行时会让用户进行输入选择，输入d是目录名，输入f是文件名。为了防止程序因此中断，我们可以使用管道命令：A | B，表示A命令输出的结果作为B命令的输入。 这样我们便将需要备份的文件拷贝出来了，之后便可以保存在U盘或者上传云端。 恢复如果电脑上已经安装了hexo博客，由于某些误操作只是想恢复到之前备份的状态的话，只需要将备份的那六个文件和目录覆盖当前博客相应的文件和目录即可。而如果想在其他电脑上恢复博客内容的话，需要进行如下操作： 安装git bash和node.js安装后可以在cmd中输入git version，node -v，npm -v查看版本来检测是否成功安装。 安装Hexo在cmd中输入npm install -g hexo-cli 初始化Hexo在想要保存hexo目录的位置，右键打开git bash here（也可以cmd进入此目录），执行hexo init 恢复备份文件将备份的六个文件和目录覆盖到当前博客目录，恢复操作完成，可以hexo g，hexo s进行检验。 转自CSDN：hexo博客的备份与恢复","categories":[{"name":"hexo博客","slug":"hexo博客","permalink":"https://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"}],"tags":[]},{"title":"hexo主题-pure","slug":"hexo主题-pure","date":"2021-11-21T05:54:16.000Z","updated":"2021-11-21T07:04:08.989Z","comments":true,"path":"14761.html","link":"","permalink":"https://blog.lixin.ee/14761.html","excerpt":"","text":"预览地址: https://blog.cofess.com项目地址: https://github.com/cofess/hexo-theme-pure中文使用文档: https://github.com/cofess/hexo-theme-pure/blob/master/README.cn.md原文链接：https://blog.plcent.com/2019/11/05/hexo-theme-pure/ 使用前请操作使用该主题前, 请先复制 theme/pure/_source/ 目录下的所有内容到source/目录下,原因在于该目录下有建好的菜单 categories(分类)、tags(标签)、repository(项目)、books(书单)、links(友链)、about(关于)页面当你使用自动生成分类、标签，展示github项目时 文章目录索引在文章详情页, 展示一个文章目录 1.主题配置文件中开启配置: 12config toc: true # 是否开启文章章节目录导航 2.在文章顶部将该文章开启索引, 如: 123456789101112---title: Hexo主题pure使用指南date: 2019-11-05 14:34:15tags: - hexo主题categories:- hexotoc: true # 是否启用内容索引sidebar: none # 是否启用sidebar侧边栏，none：不启用--- 侧边栏主题配置项中, 侧边栏可以如下配置: 1234567891011121314# 侧边栏sidebar: right# 侧边栏启用哪些模块widgets: - board # 公告 - category # 分类 - tag # 标签 - tagcloud # 标签云 - archive # 归档 - recent_posts # 最近文章# 归档列表的展示方式archive_type: &#x27;monthly&#x27; # 归档方式: yearly | monthlyshow_count: true # 显示每个归档的文章总数 图集在文章详情页中, 涉及的图片可以使用图集功能, 在点击一张图片时, 放大图片.主题的图册公告是使用fancybox实现, 可以参照github 123# Fancybox# 图集功能fancybox: true 展示github项目在左侧菜单项目中, 点击展示自己的github项目 1.在主题配置文件中 _config.yml 修改, 请配置自己github用户名 12github: username: caoruiy # github用户名 2.新建repository页面: 1&gt; hexo new repository 你也可以直接复制 theme/pure/_source/ 目录下 repository文件夹 到 博客根目录/source/ 目录下 3.将文件内容修改为: 123456---title: Repositorieslayout: repositorycomments: falsesidebar: none--- 关键内容为 layout: repository,包含该属性才可以展示github项目 评论功能主题集成了disqus、友言、来必力、gitment、gitalk评论系统，选择其中一种即可你可以在主题配置文件中修改评论工具 12comment: type: valine # 启用哪种评论系统 Valine一个无后端的评论框工具, 其依赖于 Leancloud 开发, 所以使用前需要先注册 Leancloud 账号 如何开始? 你可以从 Valine-快速开始 教程开始, 教程包含了一步一步的指引教程. Valine配置项主题valine评论框提供了以下配置项 12345678910111213valine: # Valine官方地址: https://valine.js.org appid: # 你的 leancloud 应用 appid appkey: # 你的 leancloud 应用 appkey notify: true # 是否开始评论邮件提醒, 教程: https://github.com/xCss/Valine/wiki verify: false # 是否开始验证码功能, 开始邮件提醒会自动开启验证码功能 placeholder: 说点什么... # 输入框默认内容 avatar: mm # 头像展示方式, 具体设置项教程: https://valine.js.org/configuration.html#avatar meta: nick,mail,link # 自定义评论信息 pageSize: 10 # 评论列表分页 lang: zh-cn, # 多语言支持 zh-cn | en visitor: true # 文章阅读量统计: https://valine.js.org/visitor.html highlight: true # 代码高亮 recordIP: true # 记录评论者的IP 关于邮件提醒: 只有在回复评论时, 并且填写了邮箱的评论才会收到回复提醒关于文章阅读量统计: 开启阅读量统计, 会在详情页标题下展示阅读量数据 搜索功能主题提供内置的搜索功能和百度搜索, 百度搜索就是使用百度的SEO搜索, 个人觉得不是很实用, 不建议开启. 在主题配置文件 _config.yml 中配置: 1234# Searchsearch: insight: true # 在使用搜索功能前, 你需要安装 `hexo-generator-json-content` baidu: false # 使用百度搜索前, 你必须禁用其他所有的搜索功能 内置搜索使用搜索功能前需要先安装: 1npm i -S hexo-generator-json-content 项目地址: https://github.com/alexbruno/hexo-generator-json-content hexo-wordcount在你运行 hexo g 或者 hexo s 时生效，在 hexo g 生成站点时, 会在根目录下生成content.json该文件内容即为搜索内容。 你可以对搜索内容进行自定义的配置， 只要在 _config.yml 中配置 jsonContent即可: 12345678910111213141516171819# 示例: 隐藏分类和标签的搜索jsonContent: dateFormat: DD/MM/YYYY posts: title: true date: true path: true text: true raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: false author: false 文章阅读数量统计主题提供 不蒜子 和 基于 leancloud 的统计 但是经过验证, 发现基于leancloud的统计不生效, 不知原因, 实现等效的方法就是: 评论框使用valine评论框(主题已经内置), 同时开启 visitor: true 配置项项即可 字数统计&amp;阅读时长主题内置了该功能, 使用前需要先安装插件: 1npm i -S hexo-wordcount 主题配置文件中, 开启设置即可: 12345# wordcountpostCount: enable: true wordcount: true # 文章字数统计 min2read: true # 阅读时长预计 友情链接复制 theme/pure/_source/ 目录下 links文件夹到 /source/ 目录下在 hexo 目录下的 source 文件夹内创建一个名为_data（禁止改名）的文件夹。 然后在文件内创建一个名为 links.yml 的文件,在其中添加相关数据即可。 单个友情链接的格式为： 1234Name: link: http://example.com avatar: http://example.com/avatar.png desc: &quot;这是一个描述&quot; 添加多个友情链接，我们只需要根据上面的格式重复填写即可。 将 Name 改为友情链接的名字，例如 Cofess。 http://example.com 为友情链接的地址。 http://example.com/avatar.png 为友情链接的头像。 这是一个描述 为友情链接描述。","categories":[{"name":"hexo博客","slug":"hexo博客","permalink":"https://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"}],"tags":[]},{"title":"hexo插件","slug":"hexo插件","date":"2021-11-20T12:17:13.000Z","updated":"2021-12-02T10:04:13.345Z","comments":true,"path":"37456.html","link":"","permalink":"https://blog.lixin.ee/37456.html","excerpt":"","text":"1、hexo-abbrlink一个基于帖子标题生成静态帖子链接的Hexo 插件。 安装 hexo-abbrlink博客项目的根目录直接执行： 1npm install hexo-abbrlink --save Hexo 配置还是刚才的配置文件（站点配置文件），把permalink改成以下配置： 1permalink: :abbrlink.html Next 配置打开主题配置文件根目录下：/theme/主题名/_config.yml，新增配置如下： 1234# post urlabbrlink: alg: crc32 #support crc16(default) and crc32 rep: hex #support dec(default) and hex hexo clean &amp;&amp; hexo g这一步是必须操作，hexo clean清除 public 站点文件，hexo g重新生成站点文件。生成之后，打开一个.md 文章文件，你会发现，在顶部的定义部分新增了一个abbrlink属性，后面是文件的 url 资源路径。 1abbrlink: 44359 hexo s重启服务。重启之后回到 home 主页，点开一个博文查看 url，不出意外 url 已发生改变，没有改变的同学查看下 2 个配置文件处，是否配置对了，别搞混了，不要都配置到一个文件中。 2、Hexo-WordCount一个基于帖子字数统计的Hexo 插件。 3、hexo-generator-json-contentHexo插件生成一个 JSON 文件，用于一般用途或使用帖子和页面的内容。 4、hexo-generator-feed生成 Atom 1.0 或 RSS 2.0 提要。 5、hexo-generator-sitemap生成站点地图。 6、hexo-generator-baidu-sitemap使用站图的初衷是为自己的博客添加站内搜索，如果想更好的发挥站图的作用，建议手动提交baidusitemap给百度。","categories":[{"name":"hexo博客","slug":"hexo博客","permalink":"https://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"}],"tags":[]},{"title":"hexo博客部署到云服务器(使用宝塔面板)","slug":"hexo博客从Giulia迁移到服务器","date":"2021-11-20T11:59:35.000Z","updated":"2021-12-28T14:23:07.636Z","comments":true,"path":"14bf8efe.html","link":"","permalink":"https://blog.lixin.ee/14bf8efe.html","excerpt":"","text":"思路是： 在服务器上搭建Git环境，创建Git仓库在主机生成Hexo静态文件，通过与服务器连接，推到服务器上的Git仓库通过git-hooks实现自动部署到网站资源目录Nginx做静态文件服务器，实现外界对网站资源目录的访问一、环境准备 安装宝塔面板 我是安装了服务器上面的Cloudreve镜像，自带有宝塔面板。宝塔面板安装很简单，直接连上服务器（推荐宝塔终端，很简单易用），输入 1yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install\\_6.0.sh &amp;&amp; sh install.sh 显示如下即成功 123456789101112131415外网面板地址: http://49.232.1.111:8888 #用来访问面板内网面板地址: http://10.0.8.13:8888\\*以下仅为初始默认账户密码，若无法登录请执行bt命令重置账户/密码登录username: ehmpmg7m #记住用户名和密码password: dsjfhasd #忘记可使用sudo /etc/init.d/bt default查看If you cannot access the panel,release the following panel port [8888] in the security group若无法访问面板，请检查防火墙/安全组是否有放行面板[8888]端口 #安全组注意放行，轻量级服务器为防火墙 然后在宝塔面板网站-&gt;添加站点，找到放置网站资源目录www/wwwroot/taitrs.cc2.安装nginx和git 1yum install -y nginx git 3.Nginx服务器配置通过宝塔面板可以方便地修改Nginx的配置文件，在taitres.cc的设置中找到配置文件，应该是自动配好了的，没有就自己设置下，也可以使用其他端口 二、Git仓库搭建 之前推hexo的静态文件都是推到GitHub的仓库，现在服务器也是一样，需要仓库来保存 1.添加一个用户git 在服务器端 1234567891011adduser git #添加git用户chmod 740 /etc/sudoers #改变sudoers文件的权限为文件所有者可写vim /etc/sudoers#在root ALL=(ALL) ALL 下方添加一行 git ALL=(ALL) ALLchmod 400 /etc/sudoers #将其权限修改为文件所有者可读 2.给git用户添加ssh密钥 这一步是为了建立主机与服务器连接，使其不需要密码也能登陆 1234567891011121314151617181920212223#在主机端打开powershell，cd到C:\\Users\\admin\\.ssh生成密匙，如已有密匙可跳过这一步ssh-keygen -t rsa -C &quot;taitres.cc&quot;# -t 指定密钥类型，默认是 rsa ，可以省略# -C 用于识别这个密钥的注释，可以输入任何内容# -f 指定密钥文件存储文件名，默认id\\_rsa#在服务器端su git #切换到git用户mkdir -p ~/.sshtouch ~/.ssh/authorized\\_keys #创建authorized\\_keys文件chmod 600 ~/.ssh/authorized\\_keys #为authorized\\_keys文件赋予文件所有者可读可写的权限chmod 700 ~/.ssh #为.ssh文件夹赋予文件夹所有者可读可写可执行的权限 复制公匙id_rsa.pub内容到服务器/home/git/.ssh/authorized_keys，关闭终端，使用`ssh git@server`重新登录服务器，测试是否能不要密码登录到git用户，如出现Permission denied的问题可尝试文章末尾的解决办法 3.创建Git仓库 12345sudo mkdir /home/git/repos #新建目录，这是git仓库的位置cd /home/git/repossudo git init --bare taiblog.git #初始化一个名叫taiblog的仓库 4.配置钩子实现自动部署找到 /home/git/repos/taiblog.git/hooks/post-update.sample 改名post-update，内容改为 123#!/bin/shgit --work-tree=/www/wwwroot/taitres.cc --git-dir=/home/git/repos/taiblog.git checkout -f 然后给权限 1234567cd taiblog.git/hooks/sudo chmod +x post-update #赋予其可执行权限sudo chown -R git:git /home/git/repos/ #仓库所有者改为gitsudo chown -R git:git /www/wwwroot/taitrs.cc/ #站点文件夹所有者改为git 5.测试Git仓库是否可用 1#在主机端，如果能将仓库拉下来，说明Git仓库搭建成功git clone git@server\\_ip:/home/git/repos/blog.git 三、本地配置和测试1.本地配置修改本地Hexo博客文件夹中的\\_config.yml文件 1234567deploy: type: git repo: git@server:/home/git/repos/taiblog.git branch: maste 2.测试 12345hexo clean #清除缓存hexo generate #生成静态页面hexo delopy #将本地静态页面目录部署到云服务器 也可以在package.json 中添加 npm 脚本，这样就可以直接npm run dd一下执行 123456789101112131415&quot;scripts&quot;: &#123; &quot;build&quot;: &quot;hexo generate&quot;, &quot;clean&quot;: &quot;hexo clean&quot;, &quot;deploy&quot;: &quot;hexo deploy&quot;, &quot;dd&quot;: &quot;hexo clean &amp;&amp; hexo g -d&quot;, &quot;server&quot;: &quot;hexo server&quot;, &quot;ss&quot;: &quot;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&quot; &#125;, 然后访问自己的IP看看是否成功49.232.1.11 遇到的一些问题在ssh-copy-id 时报错，ssh-copy-id : 无法将“ssh-copy-id”项识别为 cmdlet、函数、脚本文件或可运行程序的名称解决办法：需要在powershell配置文件中添加以下内容： 1234567891011121314151617function ssh-copy-id([string]$userAtMachine)&#123; $publicKey = &quot;$ENV:USERPROFILE&quot; + &quot;/.ssh/id\\_rsa.pub&quot; if (!(Test-Path &quot;$publicKey&quot;))&#123; Write-Error &quot;ERROR: failed to open ID file &#x27;$publicKey&#x27;: No such file&quot; &#125; else &#123; &amp; cat &quot;$publicKey&quot; | ssh $userAtMachine &quot;umask 077; test -d .ssh || mkdir .ssh ; cat &gt;&gt; .ssh/authorized\\_keys || exit 1&quot; &#125;&#125; 关于powershell配置文件的使用： 11.首先检查配置文件是否已经存在 12.打开powershell输入 `Test-Path $profile`如果返回false，则在C:\\Users\\admin\\Documents\\下创建一个WindowsPowerShell文件夹，然后执行 1New-Item -path $profile -type file 就创建了一个Microsoft.PowerShell_profile.ps1文件 使用ssh-add时出现 unable to start ssh-agent service, error :1058解决方法：使用管理员权限运行 Power Shell，然后执行Set-Service -Name ssh-agent -StartupType automatic. 把 ssh-agent 的启动类型设置为自动方式，在任务管理器中查看，ssh-agent是否开启 连接ssh时出现 Permission denied解决方法：vi /etc/ssh/sshd\\_config 修改为PubkeyAuthentication yes（如果前面有#，就去掉#）","categories":[{"name":"hexo博客","slug":"hexo博客","permalink":"https://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"}],"tags":[]},{"title":"Hexo博客所用到的MD编辑器语法","slug":"hexo博客所用到的MD编辑器语法","date":"2021-11-20T06:34:15.000Z","updated":"2021-12-22T03:36:39.323Z","comments":true,"path":"13838.html","link":"","permalink":"https://blog.lixin.ee/13838.html","excerpt":"","text":"标题语法段落语法换行语法强调语法引用语法列表语法代码语法分割线语法链接语法图片语法转义字符语法内嵌HTML标签扩展语法 标题语法标题前面加#号空格，几级标题就加几个#号，最后一个#号紧跟空格，最多有六级标题。如下： 123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 一级标题二级标题三级标题四级标题五级标题六级标题段落语法要创建段落，请使用空白行将一行或多行文本进行分隔。不要用空格或制表符缩进段落。 换行语法1&lt;br&gt; 强调语法粗体要加粗文本请在要加粗的内容前后各添加两个*或者两个_Markdown 应用程序在如何处理文字中间的下划线上并不一致。为兼容考虑，在文字中间部分加粗的话，请使用星号。 1我**爱**豆 我爱豆 1我__爱__豆 我__爱__豆 斜体要用斜体显示文本，请在内容前后添加一个星号或下划线。要斜体突出内容的中间部分，请在内容前后各添加一个星号，中间不要带空格。语法: 1*今天天气真好* 今天天气真好 粗体和斜体要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。要加粗并用斜体显示单词或短语的中间部分，请在要突出显示的部分前后各添加三个星号，中间不要带空格。语法 1你可***真***好看 你可真好看 斜体和粗体Markdown 应用程序在处理内容中间添加的下划线上并不一致。为了实现兼容性，请使用星号将内容的中间部分加粗并以斜体显示，以示重要。 引用语法要创建块引用，请在段落前添加一个&gt;符号。语法 1&gt;这是引用效果 预览 这是引用效果 多个段落引用块引用可以包含多个段落。为段落之间的空白行添加一个&gt;符号。语法： 123&gt;多个段落的引用效果就是这样的&gt;&gt;明白了吗？ 预览 多个段落的引用效果就是这样的 明白了吗？ 嵌套块引用块引用可以嵌套。在要嵌套的段落前添加一个&gt;&gt;符号。语法 12&gt;这是效果&gt;&gt;这是效果的效果 预览 这是效果 这是效果的效果 带有其他元素的引用块引用可以包含其他 Markdown 格式的元素。并非所有元素都可以使用，你需要进行实验以查看哪些元素有效。语法 123456&gt; #### 加粗引用&gt;&gt; - 小标题1&gt; - 小标题2&gt;&gt; *斜体*加**加粗**. 预览 加粗引用 小标题1 小标题2 斜体加加粗. 列表语法有序列表要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字 1 起始。语法 1231.这是第一点2.这是第二点3.这是第三点 预览1.这是第一点2.这是第二点3.这是第三点 代码语法要将单词或短语表示为代码，请将其包裹在反引号 (`) 中。 转义反引号如果你要表示为代码的单词或短语中包含一个或多个反引号，则可以通过将单词或短语包裹在双反引号(``)中。##代码块要创建代码块，请将代码块的每一行缩进至少四个空格或一个制表符。 分割线语法要创建分隔线，请在单独一行上使用三个或多个星号 (***)、破折号 (—) 或下划线 (___) ，并且不能包含其他内容。为了兼容性，请在分隔线的前后均添加空白行。语法 123***---___ 预览 链接语法链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。 超链接Markdown语法代码： 1[超链接显示名](超链接地址 &quot;超链接title&quot;) 给链接增加 Title链接title是当鼠标悬停在链接上时会出现的文字，这个title是可选的，它放在圆括号中链接地址后面，跟链接地址之间以空格分隔。语法 1[李鑫的博客](https://eelx.cn/ &quot;点击打开李鑫的博客&quot;) 预览李鑫的博客 网址和Email地址使用尖括号可以很方便地把URL或者email地址变成可点击的链接。语法 12&lt;https://eelx.cn&gt;&lt;lixin@lixin.ee&gt; 预览https://eelx.cn&#x6c;&#105;&#120;&#x69;&#110;&#x40;&#x6c;&#x69;&#120;&#105;&#x6e;&#x2e;&#101;&#101; 带格式化的链接强调 链接, 在链接语法前后增加星号。 要将链接表示为代码，请在方括号中添加反引号。语法 123这是记录我跟阿豆在一起的天数 **[李鑫&amp;阿豆](https://adou.lixin.ee)**.这个也是记录我跟阿豆在一起的天数 *[李鑫&amp;阿豆](https://adou.lixin.ee)*.这个也是记录我跟阿豆在一起的天数 [`李鑫&amp;阿豆`](https://adou.lixin.ee). 预览这是记录我跟阿豆在一起的天数 李鑫&amp;阿豆.这个也是记录我跟阿豆在一起的天数 李鑫&amp;阿豆.这个也是记录我跟阿豆在一起的天数 李鑫&amp;阿豆. 引用类型链接引用样式链接是一种特殊的链接，它使URL在Markdown中更易于显示和阅读。参考样式链接分为两部分：与文本保持内联的部分以及存储在文件中其他位置的部分，以使文本易于阅读。 链接的第一部分格式引用类型的链接的第一部分使用两组括号进行格式设置。第一组方括号包围应显示为链接的文本。第二组括号显示了一个标签，该标签用于指向您存储在文档其他位置的链接。 尽管不是必需的，可以在第一组和第二组括号之间包含一个空格。第二组括号中的标签不区分大小写，可以包含字母，数字，空格或标点符号。 以下示例格式对于链接的第一部分效果相同： [hobbit-hole][1][hobbit-hole] [1] 链接的第二部分格式引用类型链接的第二部分使用以下属性设置格式： 放在括号中的标签，其后紧跟一个冒号和至少一个空格（例如[label]:）。链接的URL，可以选择将其括在尖括号中。链接的可选标题，可以将其括在双引号，单引号或括号中。以下示例格式对于链接的第二部分效果相同： 1234567[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle &quot;Hobbit lifestyles&quot;[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle &#x27;Hobbit lifestyles&#x27;[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle (Hobbit lifestyles)[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; &quot;Hobbit lifestyles&quot;[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; &#x27;Hobbit lifestyles&#x27;[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; (Hobbit lifestyles) 可以将链接的第二部分放在Markdown文档中的任何位置。有些人将它们放在出现的段落之后，有些人则将它们放在文档的末尾（例如尾注或脚注）。 图片语法要添加图像，请使用感叹号 (!), 然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。语法 1![随机图片](https://picsum.photos/1920/1080 &quot;鼠标放上去的文字&quot;) 预览 链接图片给图片增加链接，请将图像的Markdown 括在方括号中，然后将链接添加在圆括号中。语法 1[![随机图片](https://picsum.photos/1920/1080 &quot;访问李鑫的博客&quot;)](https://eelx.cn) 预览 转义字符语法要显示原本用于格式化 Markdown 文档的字符，请在字符前面添加反斜杠字符 \\ 。语法 1\\* 这很重要 预览* 这很重要 可做转义的字符 符号 名字 \\ 反斜杠 ` 反引号 * *号 _ 下划线 { } 大括号 [ ] 括号 ( ) 括弧 # #号 + 加号 - 减号 . 点 ! 感叹号 特殊字符自动转义在HTML文件中，有两个字符需要特殊处理：&lt;和&amp;。&lt;符号用于起始标签&amp;符号则用于标记HTML实体，如果你只是想要使用这些符号，你必须要使用实体的形式，像是&amp;lt;和&amp;amp;。&amp;符号其实很容易让写作网页文件的人感到困扰，如果你要打「AT&amp;T」，你必须要写成「AT&amp;amp;T」，还得转换网址内的&amp;符号，如果你要链接到： 1http://images.google.com/images?num=30&amp;q=larry+bird 你必须要把网址转成： 1http://images.google.com/images?num=30&amp;amp;q=larry+bird 才能放到链接标签的href属性里。不用说也知道这很容易忘记，这也可能是HTML标准检查所检查到的错误中，数量最多的。Markdown 允许你直接使用这些符号，它帮你自动转义字符。如果你使用&amp;符号的作为HTML实体的一部分，那么它不会被转换，而在其它情况下，它则会被转换成&amp;amp;。所以你如果要在文件中插入一个著作权的符号，你可以这样写： 1&amp;copy; Markdown将不会对这段文字做修改，但是如果你这样写： 1AT&amp;T Markdown就会将它转为： 1AT&amp;amp;T 类似的状况也会发生在&lt;符号上，因为Markdown支持行内HTML，如果你使用&lt;符号作为HTML标签的分隔符，那Markdown也不会对它做任何转换，但是如果你是写： 14 &lt; 5 Markdown 将会把它转换为： 14 &amp;lt; 5 需要特别注意的是，在 Markdown 的块级元素和内联元素中，&lt;和&amp;两个符号都会被自动转换成HTML实体，这项特性让你可以很容易地用 Markdown写HTML。（在 HTML 语法中，你要手动把所有的&lt;和&amp;都转换为HTML实体。） 内嵌HTML标签对于Markdown涵盖范围之外的标签，都可以直接在文件里面用HTML本身。如需使用HTML，不需要额外标注这是HTML或是Markdown，只需HTML标签添加到Markdown文本中即可。 行级內联标签HTML的行级內联标签如&lt;span&gt;、&lt;cite&gt;、&lt;del&gt;不受限制，可以在Markdown的段落、列表或是标题里任意使用。依照个人习惯，甚至可以不用Markdown格式，而采用HTML标签来格式化。例如：如果比较喜欢HTML的&lt;a&gt;或&lt;img&gt;标签，可以直接使用这些标签，而不用Markdown提供的链接或是图片语法。当你需要更改元素的属性时（例如为文本指定颜色或更改图像的宽度），使用HTML标签更方便些。 HTML行级內联标签和区块标签不同，在內联标签的范围内，Markdown的语法是可以解析的。语法 1This **word** is bold. This &lt;em&gt;word&lt;/em&gt; is italic. 预览This word is bold. This word is italic. 区块标签区块元素──比如&lt;div&gt;、&lt;table&gt;、&lt;pre&gt;、&lt;p&gt; 等标签，必须在前后加上空行，以便于内容区分。而且这些元素的开始与结尾标签，不可以用 tab 或是空白来缩进。Markdown会自动识别这区块元素，避免在区块标签前后加上没有必要的&lt;p&gt;标签。 例如，在Markdown文件里加上一段HTML表格： 123456789This is a regular paragraph.&lt;table&gt; &lt;tr&gt; &lt;td&gt;Foo&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;This is another regular paragraph. 请注意，Markdown语法在HTML区块标签中将不会被进行处理。例如，你无法在HTML区块内使用Markdown形式的*强调*。 HTML用法最佳实践出于安全原因，并非所有Markdown应用程序都支持在Markdown文档中添加HTML。如有疑问，请查看相应Markdown应用程序的手册。某些应用程序只支持HTML标签的子集。 对于HTML的块级元素&lt;div&gt;、&lt;table&gt;、&lt;pre&gt;和&lt;p&gt;，请在其前后使用空行（blank lines）与其它内容进行分隔。尽量不要使用制表符（tabs）或空格（spaces）对HTML标签做缩进，否则将影响格式。 在HTML块级标签内不能使用Markdown语法。例如&lt;p&gt;italic and **bold**&lt;/p&gt;将不起作用。 扩展语法删除线您可以通过在单词中心放置一条水平线来删除单词。结果看起来像这样。此功能使您可以指示某些单词是一个错误，要从文档中删除。若要删除单词，请在单词前后使用两个波浪号~~。语法 1~~世界是平坦的。~~ 我们现在知道世界是圆的。 预览世界是平坦的。 我们现在知道世界是圆的。 任务列表语法任务列表使您可以创建带有复选框的项目列表。在支持任务列表的Markdown应用程序中，复选框将显示在内容旁边。要创建任务列表，请在任务列表项之前添加破折号-和方括号[ ]，并在[ ]前面加上空格。要选择一个复选框，请在方括号[x]之间添加 x 。 123- [x] 带女朋友见家长- [x] 带女朋友去玩- [ ] 给女朋友买个包 带女朋友见家长 带女朋友去玩 给女朋友买个包 自动网址链接许多Markdown处理器会自动将URL转换为链接。这意味着如果您输入https://eelx.cn/ ，即使您未使用方括号，您的Markdown处理器也会自动将其转换为链接。 1https://eelx.cn/ 呈现的输出如下所示：https://eelx.cn/ 禁用自动URL链接如果您不希望自动链接URL，则可以通过将URL表示为带反引号的代码来删除该链接。 1`https://eelx.cn/` 呈现的输出如下所示：https://eelx.cn/ 使用Emoji表情有两种方法可以将表情符号添加到Markdown文件中：将表情符号复制并粘贴到Markdown格式的文本中，或者键入emoji shortcodes。 复制和粘贴表情符号在大多数情况下，您可以简单地从Emojipedia等来源复制表情符号并将其粘贴到文档中。许多Markdown应用程序会自动以Markdown格式的文本显示表情符号。从Markdown应用程序导出的HTML和PDF文件应显示表情符号。 Tip: 如果您使用的是静态网站生成器，请确保将HTML页面编码为UTF-8。 使用表情符号简码一些Markdown应用程序允许您通过键入表情符号短代码来插入表情符号。这些以冒号开头和结尾，并包含表情符号的名称。 12去露营了！ :tent: 很快回来。真好笑！ :joy: 呈现的输出如下所示：去露营了！⛺很快回来。真好笑！😂 表格1234| 表头 | 表头 || ---- | ---- || 单元格 | 单元格 || 单元格 | 单元格 | 表头 表头 单元格 单元格 单元格 单元格 1234| 左对齐 | 右对齐 | 居中对齐 || :-----| ----: | :----: || 单元格 | 单元格 | 单元格 || 单元格 | 单元格 | 单元格 | 左对齐 右对齐 居中对齐 单元格 单元格 单元格 单元格 单元格 单元格 这是我用MD写的第一篇文章，留给自己备用。跳转顶部","categories":[{"name":"hexo博客","slug":"hexo博客","permalink":"https://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"MD语法","slug":"MD语法","permalink":"https://blog.lixin.ee/tags/MD%E8%AF%AD%E6%B3%95/"}]},{"title":"hexo如何新建文章和删除文章","slug":"hexo如何写文章和删除文章","date":"2021-11-19T12:07:51.000Z","updated":"2021-12-28T14:12:17.527Z","comments":true,"path":"27201.html","link":"","permalink":"https://blog.lixin.ee/27201.html","excerpt":"","text":"hexo算是搭建好了，可是怎么写文章，本地上传以及删除和更新文章，这篇博客同样写给我，留着备用。 新建文章使用命令来新建文章 1hexo new &lt;文章标题&gt; # 或者 hexo n 文章标题 命令执行完后，就会发现在Hexo\\source_posts目录中多了一个文件文章名.md，这就是我们刚才新建的博文。 此外，我们也可以直接进入Hexo\\source_posts目录中，右键新建一个文本文档，将名字改为文章名.md，这样也新建了一篇博文。 新建页面上面新建的文章是显示在单个文章界面，这里新建的页面是作为单个页面显示的，比如下图的分类、标签、归档和关于我，你点击后都是显示为单个页面。 你只需要记住新建博文是用上面的方法，新建页面是用这里的方法就行了，这里也采用命令新建页面： 1hexo new page &quot;页面名称&quot; 命令执行完后，就会发现在Hexo\\source目录中多了一个文件夹，里面还有一个index.md，这就代表我们新建了一个页面。 编辑文章用文本编辑器打开上面新建的博文，如下所示： 123456title: 文章标题tags: - 文章标签categories: - 文章分类toc: true # 是否启用内容索引 新建的页面略有不同，没有tags和categories标签。三个”-“后面就是博文的正文内容，接下来就是正儿八经地撰写博文了。 删除文章删除文章的过程一样也很简单，先删除本地文件，然后通过生成和部署命令进而将远程仓库中的文件也一并删除。具体来说，以最开始默认形成的helloworld.md这篇文章为例。 首先进入到source / _post 文件夹中，找到helloworld.md文件，在本地直接执行删除。然后依次执行 12hexo ghexo d 再去主页查看你就会发现你的博客上面已经空空如也了。 上传文章在 Git Shell 中进入 Hexo 文件夹，执行下面几条命令，将博客部署到 GitHub 上： 1234hexo cleanhexo generate # (输入hexo g也可以)(若要本地预览就先执行 hexo server)hexo deploy # (输入hexo d也可以) 快捷命令： 1234hexo g == hexo generatehexo d == hexo deployhexo s == hexo serverhexo n == hexo new 还能组合使用，如： 1hexo d -g 刷新你的个人博客 更新文章修改了谋篇文章内容需要同步更新，方法同上。在 Git Shell 中进入 Hexo 文件夹，执行下面几条命令，将博客部署到 GitHub 上： 123hexo cleanhexo ghexo d 备份目录 参数 描述 默认值 source_dir 资源文件夹，这个文件夹用来存放内容。 source public_dir 公共文件夹，这个文件夹用于存放生成的站点文件 public tag_dir 标签文件夹 tags archive_dir 归档文件夹 archives category_dir 分类文件夹 categories code_dir Include code 文件夹，source_dir 下的子目录 downloads/code i18n_dir 国际化（i18n）文件夹 :lang skip_render 跳过指定文件的渲染。匹配到的文件将会被不做改动地复制到 public 目录中。您可使用 glob 表达式来匹配路径。 1、进入原来电脑 hexo 博客目录，只拷如下几个目录：.ssh路径C:\\Users\\HP\\.ssh 文件名 描述 备份 scaffolds 文章模版 必须备份 source 博客文章 必须备份 themes 主题 必须备份 .gitignore 限定在push时那些文件可以忽略 必须备份 _config.yml 站点配置文件 必须备份 package.json 安装包的名称 必须备份 .ssh 密钥文件 必须备份","categories":[{"name":"hexo博客","slug":"hexo博客","permalink":"https://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"}],"tags":[]},{"title":"不学习何以强国","slug":"不学习何以强国","date":"2021-11-18T13:33:07.000Z","updated":"2021-12-28T13:38:35.331Z","comments":true,"path":"33399.html","link":"","permalink":"https://blog.lixin.ee/33399.html","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798991001011021031041051061071081091101111121131141151161171181191201211221231241251261271281291301311321331341351361371381391401411421431441451461471481491501511521531541551561571581591601611621631641651661671681691701711721731741751761771781791801811821831841851861871881891901911921931941951961971981992002012022032042052062072082092102112122132142152162172182192202212222232242252262272282292302312322332342352362372382392402412422432442452462472482492502512522532542552562572582592602612622632642652662672682692702712722732742752762772782792802812822832842852862872882892902912922932942952962972982993003013023033043053063073083093103113123133143153163173183193203213223233243253263273283293303313323333343353363373383393403413423433443453463473483493503513523533543553563573583593603613623633643653663673683693703713723733743753763773783793803813823833843853863873883893903913923933943953963973983994004014024034044054064074084094104114124134144154164174184194204214224234244254264274284294304314324334344354364374384394404414424434444454464474484494504514524534544554564574584594604614624634644654664674684694704714724734744754764774784794804814824834844854864874884894904914924934944954964974984995005015025035045055065075085095105115125135145155165175185195205215225235245255265275285295305315325335345355365375385395405415425435445455465475485495505515525535545555565575585595605615625635645655665675685695705715725735745755765775785795805815825835845855865875885895905915925935945955965975985996006016026036046056066076086096106116126136146156166176186196206216226236246256266276286296306316326336346356366376386396406416426436446456466476486496506516526536546556566576586596606616626636646656666676686696706716726736746756766776786796806816826836846856866876886896906916926936946956966976986997007017027037047057067077087097107117127137147157167177187197207217227237247257267277287297307317327337347357367377387397407417427437447457467477487497507517527537547557567577587597607617627637647657667677687697707717727737747757767777787797807817827837847857867877887897907917927937947957967977987998008018028038048058068078088098108118128138148158168178188198208218228238248258268278288298308318328338348358368378388398408418428438448458468478488498508518528538548558568578588598608618628638648658668678688698708718728738748758768778788798808818828838848858868878888898908918928938948958968978988999009019029039049059069079089099109119129139149159169179189199209219229239249259269279289299309319329339349359369379389399409419429439449459469479489499509519529539549559569579589599609619629639649659669679689699709719729739749759769779789799809819829839849859869879889899909919929939949959969979989991000100110021003100410051006100710081009101010111012101310141015101610171018101910201021102210231024102510261027102810291030103110321033103410351036103710381039104010411042104310441045104610471048104910501051105210531054105510561057105810591060106110621063106410651066106710681069107010711072107310741075107610771078107910801081108210831084108510861087108810891090109110921093109410951096109710981099110011011102110311041105110611071108110911101111111211131114111511161117// ==UserScript==// @name 不学习何以强国-beta// @namespace http://tampermonkey.net/// @version 20211223// @description 问题反馈位置： https://github.com/TechXueXi/techxuexi-js/issues 。读文章,看视频，做习题。// @author techxuexi ，荷包蛋。// @match https://www.xuexi.cn// @match https://www.xuexi.cn/*// @match https://pc.xuexi.cn/points/exam-practice.html// @match https://pc.xuexi.cn/points/exam-weekly-detail.html?id=*// @match https://pc.xuexi.cn/points/exam-weekly-list.html// @match https://pc.xuexi.cn/points/exam-paper-detail.html?id=*// @match https://pc.xuexi.cn/points/exam-paper-list.html// @require https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js// @require https://cdn.bootcdn.net/ajax/libs/blueimp-md5/2.9.0/js/md5.min.js// @grant GM_addStyle// @grant GM_setValue// @grant GM_getValue// @grant GM_deleteValue// @grant GM_openInTab// ==/UserScript==var study_css = &quot;.egg_study_btn&#123;outline:0;border:0;position:fixed;top:5px;left:5px;padding:12px 20px;border-radius:10px;cursor:pointer;background-color:#fff;color:#d90609;font-size:18px;font-weight:bold;text-align:center;box-shadow:0 0 9px #666777&#125;.egg_manual_btn&#123;transition:0.5s;outline:none;border:none;padding:12px 20px;border-radius:10px;cursor:pointer;background-color:#e3484b;color:rgb(255,255,255);font-size:18px;font-weight:bold;text-align:center;&#125;.egg_auto_btn&#123;transition:0.5s;outline:none;border:none;padding:12px 20px;border-radius:10px;cursor:pointer;background-color:#666777;color:rgb(255,255,255);font-size:18px;font-weight:bold;text-align:center;&#125;.egg_setting_box&#123;position:fixed;top:70px;left:5px;padding:12px 20px;border-radius:10px;background-color:#fff;box-shadow:0 0 9px #666777&#125;.egg_setting_item&#123;margin-top:5px;height:30px;width:140px;font-size:16px;display:flex;justify-items:center;justify-content:space-between&#125;input[type=&#x27;checkbox&#x27;].egg_setting_switch&#123;cursor:pointer;margin:0;outline:0;appearance:none;-webkit-appearance:none;-moz-appearance:none;position:relative;width:40px;height:22px;background:#ccc;border-radius:50px;transition:border-color .3s,background-color .3s&#125;input[type=&#x27;checkbox&#x27;].egg_setting_switch::after&#123;content:&#x27;&#x27;;display:inline-block;width:1rem;height:1rem;border-radius:50%;background:#fff;box-shadow:0,0,2px,#999;transition:.4s;top:3px;position:absolute;left:3px&#125;input[type=&#x27;checkbox&#x27;].egg_setting_switch:checked&#123;background:#fd5052&#125;input[type=&#x27;checkbox&#x27;].egg_setting_switch:checked::after&#123;content:&#x27;&#x27;;position:absolute;left:55%;top:3px&#125;&quot;;GM_addStyle(study_css);//https://www.xuexi.cn/lgdata/3uoe1tg20en0.json//查询今日完成情况const SearchSocreUrl = &quot;https://pc-proxy-api.xuexi.cn/api/score/days/listScoreProgress?sence=score&amp;deviceType=2&quot;;//重要新闻列表（主）const NewsUrl1 = &quot;https://www.xuexi.cn/lgdata/1jscb6pu1n2.json&quot;;//学习时评新闻列表const NewsUrl2 = &quot;https://www.xuexi.cn/lgdata/1ap1igfgdn2.json&quot;;//新闻视频列表const VideosUrl1 = &quot;https://www.xuexi.cn/lgdata/3o3ufqgl8rsn.json&quot;;//新闻视频列表const VideosUrl2 = &quot;https://www.xuexi.cn/lgdata/1742g60067k.json&quot;;//每日答题页面const ExamPracticeUrl = &quot;https://pc.xuexi.cn/points/exam-practice.html&quot;;//每周答题列表APIconst ExamWeeklyListUrl = &quot;https://pc-proxy-api.xuexi.cn/api/exam/service/practice/pc/weekly/more?pageNo=&#123;pageNo&#125;&amp;pageSize=50&quot;;//专项答题列表APIconst ExamPaperListUrl = &quot;https://pc-proxy-api.xuexi.cn/api/exam/service/paper/pc/list?pageSize=50&amp;pageNo=&#123;pageNo&#125;&quot;;//题目API（只有每周答题和专项练习）//const ExamQueryUrl = &quot;https://pc-proxy-api.xuexi.cn/api/exam/service/detail/queryV3?type=&#123;type&#125;&amp;id=&#123;id&#125;&amp;forced=true&quot;;//type=1专项练习，type=2每周答题//每周答题页面const ExamWeeklyUrl = &quot;https://pc.xuexi.cn/points/exam-weekly-detail.html?id=&#123;id&#125;&quot;;//专项测试页面const ExamPaperUrl = &quot;https://pc.xuexi.cn/points/exam-paper-detail.html?id=&#123;id&#125;&quot;;//文本服务器保存APIconst AnswerSaveUrl = &quot;https://a6.qikekeji.com/txt/data/save/&quot;;//文本服务器获取APIconst AnswerDetailUrl = &quot;https://a6.qikekeji.com/txt/data/detail/&quot;;//获取当前日期var currDate = new Date().toISOString().split(&#x27;T&#x27;)[0];var newsNum = 6;var news = [];var videoNum = 6;var videos = [];//配置var settings = [];var pause = false;//是否暂停答题//每周答题当前页码var examWeeklyPageNo = 1;//每周答题总页码var examWeeklyTotalPageCount = null;//每周答题开启逆序答题: false: 顺序答题; true: 逆序答题var examWeeklyReverse = false;//专项答题当前页码var examPaperPageNo = 1;//专项答题总页码var examPaperTotalPageCount = null;//专项答题开启逆序答题: false: 顺序答题; true: 逆序答题var examPaperReverse = false;//每周答题，专项答题 请求rate 限制 每 3000ms 一次const ratelimitms = 3000;$(document).ready(function () &#123; let url = window.location.href; if (url == &quot;https://www.xuexi.cn&quot; || url == &quot;https://www.xuexi.cn/&quot; || url == &quot;https://www.xuexi.cn/index.html&quot;) &#123; let ready = setInterval(function () &#123; if (document.getElementsByClassName(&quot;text-wrap&quot;)[0]) &#123; clearInterval(ready);//停止定时器 //初始化设置 initSetting(); //创建&quot;开始学习&quot;按钮 createStartButton(); &#125; &#125;, 800); &#125; else if (typeof GM_getValue(&quot;readingUrl&quot;) != &#x27;object&#x27; &amp;&amp; url == GM_getValue(&quot;readingUrl&quot;)) &#123; try &#123; let settingTemp = JSON.parse(GM_getValue(&#x27;studySetting&#x27;)); if (!settingTemp[7]) &#123; createTip();//创建学习提示 &#125; reading(0); &#125; catch (e) &#123; createTip();//创建学习提示 reading(0); &#125; &#125; else if (typeof GM_getValue(&quot;watchingUrl&quot;) != &#x27;object&#x27; &amp;&amp; url == GM_getValue(&quot;watchingUrl&quot;)) &#123; try &#123; let settingTemp = JSON.parse(GM_getValue(&#x27;studySetting&#x27;)); if (!settingTemp[7]) &#123; createTip();//创建学习提示 &#125; &#125; catch (e) &#123; createTip();//创建学习提示 &#125; let randNum = 0; var checkVideoPlayingInterval = setInterval(function () &#123; let temp = getVideoTag(); if (temp.video) &#123; if (!temp.video.muted) &#123; temp.video.muted = true; &#125; if (temp.video.paused) &#123; temp.video.paused = false; console.log(&quot;正在尝试播放视频&quot;) if (randNum == 0) &#123;//尝试使用js的方式播放 try &#123; temp.video.play();//尝试使用js的方式播放 &#125; catch (e) &#123; &#125; randNum++; &#125; else &#123; try &#123; temp.pauseButton.click();//尝试点击播放按钮播放 &#125; catch (e) &#123; &#125; randNum--; &#125; &#125; else &#123; console.log(&quot;成功播放&quot;) clearInterval(checkVideoPlayingInterval); reading(1); &#125; &#125; else &#123; console.log(&quot;等待加载&quot;) &#125; &#125;, 800); &#125; else if (url.indexOf(&quot;exam&quot;) != -1 &amp;&amp; url.indexOf(&quot;list&quot;) == -1) &#123; //答题页面 let ready = setInterval(function () &#123; if (document.getElementsByClassName(&quot;title&quot;)[0]) &#123; clearInterval(ready);//停止定时器 //创建“手动答题”按钮 createManualButton(); //去除答题验证 //cancelVerify(); //开始答题 doingExam(); &#125; &#125;, 500); &#125; else &#123; &#125;&#125;);//获取video标签function getVideoTag() &#123; let iframe = document.getElementsByTagName(&quot;iframe&quot;)[0]; let video = null; let pauseButton = null; if (iframe) &#123; //如果有iframe,说明外面的video标签是假的 video = iframe.contentWindow.document.getElementsByTagName(&quot;video&quot;)[0]; pauseButton = iframe.contentWindow.document.getElementsByClassName(&quot;prism-play-btn&quot;)[0]; &#125; else &#123; //否则这个video标签是真的 video = document.getElementsByTagName(&quot;video&quot;)[0]; pauseButton = document.getElementsByClassName(&quot;prism-play-btn&quot;)[0]; &#125; return &#123; &quot;video&quot;: video, &quot;pauseButton&quot;: pauseButton &#125;&#125;//读新闻或者看视频//type:0为新闻，1为视频async function reading(type) &#123; //看文章或者视频 let time = parseInt(Math.random() * (100 - 80 + 1) + 80, 10);//80-100秒后关闭页面 let firstTime = time - 2; let secendTime = 12; let scrollLength = document.body.scrollHeight / 2; var readingInterval = setInterval(function () &#123; time--; $(&quot;#studyTip&quot;).text(time + &quot; 秒后关闭页面&quot;); if (time &lt;= firstTime) &#123; try &#123; $(&quot;html,body&quot;).animate(&#123; scrollTop: 394 &#125;, 1000); &#125; catch (e) &#123; window.scrollTo(0, 394); &#125; firstTime = -1; &#125; if (time &lt;= secendTime) &#123; try &#123; $(&quot;html,body&quot;).animate(&#123; scrollTop: scrollLength / 3 &#125;, 1000); &#125; catch (e) &#123; window.scrollTo(0, scrollLength / 3); &#125; secendTime = -1; &#125; if (time &lt;= 0) &#123; if (type == 0) &#123; GM_setValue(&#x27;readingUrl&#x27;, null); &#125; else &#123; GM_setValue(&#x27;watchingUrl&#x27;, null); &#125; clearInterval(readingInterval); window.close(); &#125; &#125;, 1000); //关闭文章或视频页面&#125;//创建学习提示function createTip() &#123; let tipInfo = document.createElement(&quot;div&quot;); //添加样式 tipInfo.setAttribute(&quot;id&quot;, &quot;studyTip&quot;); tipInfo.innerText = &quot;正在初始化....&quot;; tipInfo.style.position = &quot;fixed&quot;; tipInfo.style.bottom = &quot;15px&quot;; tipInfo.style.left = &quot;5px&quot;; tipInfo.style.padding = &quot;12px 14px&quot;; tipInfo.style.border = &quot;none&quot;; tipInfo.style.borderRadius = &quot;10px&quot;; tipInfo.style.backgroundColor = &quot;#222222&quot;; tipInfo.style.color = &quot;#ffffff&quot;; tipInfo.style.fontSize = &quot;14px&quot;; tipInfo.style.fontWeight = &quot;bold&quot;; //插入节点 let body = document.getElementsByTagName(&quot;body&quot;)[0]; body.append(tipInfo)&#125;//等待窗口关闭function waitingClose(newPage) &#123; return new Promise(resolve =&gt; &#123; let doing = setInterval(function () &#123; if (newPage.closed) &#123; clearInterval(doing);//停止定时器 resolve(&#x27;done&#x27;); &#125; &#125;, 1000); &#125;);&#125;//阅读文章async function readNews() &#123; await getNews(); for (let i = 0; i &lt; news.length; i++) &#123; GM_setValue(&#x27;readingUrl&#x27;, news[i].url); console.log(&quot;正在看第&quot; + (i + 1) + &quot;个新闻&quot;); let newPage = GM_openInTab(news[i].url, &#123; active: true, insert: true, setParent: true &#125;); await waitingClose(newPage); await waitingTime(1500); &#125;&#125;//获取新闻列表function getNews() &#123; return new Promise(resolve =&gt; &#123; news = new Array(); let n = 6; if (newsNum &lt; 6) &#123;//如果需要学习的新闻数量不到6，也就是已经学过了，但是积分不够，补的 n = newsNum; &#125; console.log(&quot;还需要看&quot; + n + &quot;个新闻&quot;) //新闻数量是否足够 let enough = true; //获取重要新闻 $.ajax(&#123; type: &quot;GET&quot;, url: NewsUrl1, dataType: &quot;json&quot;, success: function (data) &#123; let j = 0; if (n == 6) &#123;//如果今天还没学过，则优先找今天的新闻 for (let i = 0; i &lt; n; i++) &#123; //如果有当天日期的,则加入 if (data[j].auditTime.indexOf(currDate) != -1) &#123; news.push(data[j]); j++; &#125; else &#123;//否则跳出循环 break; &#125; &#125; &#125; for (j; j &lt; n; j++) &#123; let temp = parseInt(Math.random() * (data.length + 1), 10); news.push(data[temp]); &#125; resolve(&#x27;done&#x27;); &#125;, error: function () &#123; news = null; resolve(&#x27;done&#x27;); &#125; &#125;); &#125;);&#125;//获取视频列表function getVideos() &#123; return new Promise(resolve =&gt; &#123; videos = new Array(); let n = 6; if (videoNum &lt; 6) &#123;//如果需要学习的视频数量不到6，也就是已经学过了，但是积分不够，补的 n = videoNum; &#125; console.log(&quot;还需要看&quot; + n + &quot;个视频&quot;) $.ajax(&#123; type: &quot;GET&quot;, url: VideosUrl1, dataType: &quot;json&quot;, success: function (data) &#123; let j = 0; if (n == 6) &#123; for (let i = 0; i &lt; n; i++) &#123; //如果有当天日期的,则加入 if (data[j].auditTime.indexOf(currDate) != -1) &#123; videos.push(data[j]); j++; &#125; else &#123;//否则跳出循环 break; &#125; &#125; &#125; for (j; j &lt; n; j++) &#123; let temp = parseInt(Math.random() * (data.length + 1), 10); videos.push(data[temp]); &#125; resolve(&#x27;done&#x27;); &#125;, error: function () &#123; videos = []; resolve(&#x27;done&#x27;); &#125; &#125;); &#125;);&#125;//看学习视频async function watchVideo() &#123; await getVideos(); for (let i = 0; i &lt; videos.length; i++) &#123; GM_setValue(&#x27;watchingUrl&#x27;, videos[i].url); console.log(&quot;正在观看第&quot; + (i + 1) + &quot;个视频&quot;); let newPage = GM_openInTab(videos[i].url, &#123; active: true, insert: true, setParent: true &#125;) await waitingClose(newPage); await waitingTime(1500); &#125;&#125;//做每日答题function doExamPractice() &#123; return new Promise(resolve =&gt; &#123; console.log(&quot;正在完成每日答题&quot;) let newPage = GM_openInTab(ExamPracticeUrl, &#123; active: true, insert: true, setParent: true &#125;); let doing = setInterval(function () &#123; if (newPage.closed) &#123; clearInterval(doing);//停止定时器 resolve(&#x27;done&#x27;); &#125; &#125;, 1000); &#125;);&#125;//fix code = 429async function waitingDependStartTime(startTime)&#123; let remainms = Date.now() - startTime; if (remainms &lt; ratelimitms) &#123; await waitingTime(ratelimitms - remainms + 1000) &#125;&#125;//初始化专项答题总页数属性async function InitExamPaperAttr() &#123; let startTime = Date.now(); var data = await getExamPaperByPageNo(1); // 默认从第一页获取全部页属性 if (data) &#123; // 初始化总页码 examPaperTotalPageCount = data.totalPageCount; // 若专项答题逆序, 则从最后一页开始 if (examPaperReverse) &#123; examPaperPageNo = examPaperTotalPageCount; &#125; &#125; await waitingDependStartTime(startTime);&#125;//获取指定页数的专项答题列表function getExamPaperByPageNo(examPaperPageNoParam) &#123; return new Promise(function (resolve) &#123; $.ajax(&#123; type: &quot;GET&quot;, url: ExamPaperListUrl.replace(&quot;&#123;pageNo&#125;&quot;, examPaperPageNoParam), xhrFields: &#123; withCredentials: true //如果没有这个请求失败 &#125;, dataType: &quot;json&quot;, success: function (data) &#123; data = decodeURIComponent(escape(window.atob(data.data_str.replace(/-/g, &quot;+&quot;).replace(/_/g, &quot;/&quot;)))); //JSON格式化 data = JSON.parse(data); resolve(data); &#125;, error: function () &#123; resolve(new Array()); &#125; &#125;); &#125;)&#125;//查询专项答题列表看看还有没有没做过的，有则返回idasync function findExamPaper() &#123; var continueFind = true; var examPaperId = null; console.log(&quot;初始化专项答题属性&quot;); await InitExamPaperAttr(); console.log(&quot;正在寻找未完成的专项答题&quot;); while (continueFind) &#123; let startTime = Date.now(); await getExamPaperByPageNo(examPaperPageNo).then(async (data) =&gt; &#123; if (data) &#123; let examPapers = data.list;//获取专项答题的列表 if (examPaperReverse) &#123; // 若开启逆序答题, 则反转专项答题列表 console.log(&quot;专项答题,开启逆序模式,从最早的题目开始答题&quot;); examPapers.reverse(); &#125; for (let j = 0; j &lt; examPapers.length; j++) &#123; //遍历查询有没有没做过的 if (examPapers[j].status != 2) &#123;//status： 1为&quot;开始答题&quot; , 2为&quot;重新答题&quot; //如果不是&quot;重新答题&quot;，则可以做 examPaperId = examPapers[j].id; continueFind = false; break; &#125; &#125; if (!continueFind) &#123; &#125; else &#123; //增加页码 (若开启逆序翻页, 则减少页码) examPaperPageNo += examPaperReverse ? -1 : 1; if (examPaperTotalPageCount == null || examPaperPageNo &gt; examPaperTotalPageCount || examPaperPageNo &lt; 1) &#123; //已经找完所有页码，还是没找到，不再继续查找 continueFind = false; &#125; &#125; &#125; else &#123; continueFind = false; &#125; //fix code = 429 await waitingDependStartTime(startTime); &#125;) &#125; return examPaperId;&#125;//做专项答题function doExamPaper() &#123; return new Promise(function (resolve) &#123; //查找有没有没做过的专项答题，有则返回ID findExamPaper().then(examPaperId =&gt; &#123; if (examPaperId != null) &#123; console.log(&quot;正在做专项答题&quot;) let newPage = GM_openInTab(ExamPaperUrl.replace(&quot;&#123;id&#125;&quot;, examPaperId), &#123; active: true, insert: true, setParent: true &#125;); let doing = setInterval(function () &#123; if (newPage.closed) &#123; clearInterval(doing);//停止定时器 resolve(&#x27;done&#x27;); &#125; &#125;, 1000); &#125; else &#123; console.log(&quot;没有找到未完成的专项答题，跳过&quot;) resolve(&#x27;noTest&#x27;); &#125; &#125;); &#125;)&#125;//初始化每周答题总页数属性async function InitExamWeeklyAttr() &#123; let startTime = Date.now(); var data = await getExamWeeklyByPageNo(1); // 默认从第一页获取全部页属性 if (data) &#123; // 初始化总页码 examWeeklyTotalPageCount = data.totalPageCount; // 若每周答题逆序, 则从最后一页开始 if (examWeeklyReverse) &#123; examWeeklyPageNo = examWeeklyTotalPageCount; &#125; &#125; await waitingDependStartTime(startTime);&#125;//获取指定页数的每周答题列表function getExamWeeklyByPageNo(examWeeklyPageNoParam) &#123; return new Promise(function (resolve) &#123; $.ajax(&#123; type: &quot;GET&quot;, url: ExamWeeklyListUrl.replace(&quot;&#123;pageNo&#125;&quot;, examWeeklyPageNoParam), xhrFields: &#123; withCredentials: true //如果没有这个请求失败 &#125;, dataType: &quot;json&quot;, success: function (data) &#123; data = decodeURIComponent(escape(window.atob(data.data_str.replace(/-/g, &quot;+&quot;).replace(/_/g, &quot;/&quot;)))); //JSON格式化 data = JSON.parse(data); resolve(data); &#125;, error: function () &#123; resolve(new Array()); &#125; &#125;); &#125;)&#125;//查询每周答题列表看看还有没有没做过的，有则返回idasync function findExamWeekly() &#123; var continueFind = true; var examWeeklyId = null; console.log(&quot;初始化每周答题&quot;); await InitExamWeeklyAttr(); console.log(&quot;正在寻找未完成的每周答题&quot;); while (continueFind) &#123; let startTime = Date.now(); await getExamWeeklyByPageNo(examWeeklyPageNo).then(async (data) =&gt; &#123; if (data) &#123; if (examWeeklyReverse) &#123; // 若开启逆序答题, 则反转列表 console.log(&quot;每周答题,开启逆序模式,从最早的题目开始答题&quot;); data.list.reverse(); &#125; for (let i = 0; i &lt; data.list.length; i++) &#123; let examWeeks = data.list[i].practices;//获取每周的测试列表 if (examWeeklyReverse) &#123; // 若开启逆序, 则反转每周的测试列表 examWeeks.reverse(); &#125; for (let j = 0; j &lt; examWeeks.length; j++) &#123; //遍历查询有没有没做过的 if (examWeeks[j].status != 2) &#123;//status： 1为&quot;开始答题&quot; , 2为&quot;重新答题&quot; //如果不是&quot;重新答题&quot;，则可以做 examWeeklyId = examWeeks[j].id; continueFind = false; break; &#125; &#125; if (!continueFind) &#123; //如果已经找到了，则退出循环 break; &#125; &#125; if (!continueFind) &#123; &#125; else &#123; //增加页码 examWeeklyPageNo += examWeeklyReverse ? -1 : 1; if (examWeeklyTotalPageCount == null || examWeeklyPageNo &gt; examWeeklyTotalPageCount || examWeeklyPageNo &lt; 1) &#123; //已经找完所有页码，还是没找到，不再继续查找 continueFind = false; &#125; &#125; &#125; else &#123; continueFind = false; &#125; //fix code = 429 await waitingDependStartTime(startTime); &#125;) &#125; return examWeeklyId;&#125;//做每周答题function doExamWeekly() &#123; return new Promise(function (resolve) &#123; //查找有没有没做过的每周测试，有则返回ID //examWeeklyId = 147;//测试题目 findExamWeekly().then(examWeeklyId =&gt; &#123; if (examWeeklyId != null) &#123; console.log(&quot;正在做每周答题&quot;) let newPage = GM_openInTab(ExamWeeklyUrl.replace(&quot;&#123;id&#125;&quot;, examWeeklyId), &#123; active: true, insert: true, setParent: true &#125;); let doing = setInterval(function () &#123; if (newPage.closed) &#123; clearInterval(doing);//停止定时器 resolve(&#x27;done&#x27;); &#125; &#125;, 1000); &#125; else &#123; console.log(&quot;没有找到未完成的每周答题，跳过&quot;) resolve(&#x27;noTest&#x27;); &#125; &#125;); &#125;)&#125;//获取答题按钮function getNextButton() &#123; return new Promise(function (resolve) &#123; let nextInterVal = setInterval(() =&gt; &#123; let nextAll = document.querySelectorAll(&quot;.ant-btn&quot;); let next = nextAll[0]; if (nextAll.length == 2) &#123; next = nextAll[1]; &#125; if (next.textContent) &#123; clearInterval(nextInterVal);//停止定时器 resolve(next); &#125; &#125;, 800); &#125;)&#125;//暂停锁function doingPause() &#123; return new Promise(function (resolve) &#123; let doing = setInterval(function () &#123; if (!pause) &#123; clearInterval(doing);//停止定时器 resolve(&#x27;done&#x27;); &#125; console.log(&quot;等待&quot;) &#125;, 500); &#125;)&#125;//答题过程(整合)async function doingExam() &#123; let nextButton = null; let qNum = 0;//题号,第一题从0开始算 let shouldSaveAnswer = false; while (true) &#123; //先等等再开始做题 await waitingTime(2500); await doingPause(); nextButton = await getNextButton(); if (nextButton.textContent == &quot;再练一次&quot; || nextButton.textContent == &quot;再来一组&quot; || nextButton.textContent == &quot;查看解析&quot;) &#123; break; &#125; try &#123; document.querySelector(&quot;.tips&quot;).click(); &#125; catch (e) &#123; console.log(e); &#125; //所有提示 var allTips = document.querySelectorAll(&quot;font[color=red]&quot;); await waitingTime(1500); //选项按钮 var allbuttons = document.querySelectorAll(&quot;.q-answer&quot;); //获取所有填空 var blanks = document.querySelectorAll(&quot;input[type=text][class=blank]&quot;); try &#123; //获取问题类型 var questionType = document.querySelector(&quot;.q-header&quot;).textContent; questionType = questionType.substr(0, 3) &#125; catch (e) &#123; &#125; var results = []; switch (questionType) &#123; case &quot;填空题&quot;: &#123; //第几个填空 var inputBubblesEvent = new Event(&#x27;input&#x27;, &#123; bubbles: true &#125;); if (blanks.length &gt; 1) &#123;//如果有多个填空 if (allTips.length == 0) &#123;//如果没有提示，先获取看看有没有答案 try &#123;//尝试点击视频播放按钮,播不播都没关系 document.getElementsByClassName(&quot;outter&quot;)[0].click(); &#125; catch (e) &#123; &#125; //生成秘钥 let key = getKey(); //尝试获取答案 let answerData = await getAnswer(key); if (answerData.status == 0 || answerData == &quot;error&quot;) &#123;//没有答案 for (let i = 0; i &lt; blanks.length; i++) &#123;//没答案，随便填点东西 blanks[i].setAttribute(&quot;value&quot;, i); //必须要阻止事件，不然无效 blanks[i].dispatchEvent(inputBubblesEvent); &#125; shouldSaveAnswer = true;//答完保存答案 &#125; else &#123;//获取到了答案 //格式化 answerData = JSON.parse(answerData.data.txt_content); answerData = answerData[0].content; //因为有多个空，所以有多个答案，先切割 answerData = answerData.split(&quot;;&quot;); for (let i = 0; i &lt; answerData.length; i++) &#123;//将答案填入 blanks[i].setAttribute(&quot;value&quot;, answerData[i]); blanks[i].dispatchEvent(inputBubblesEvent); &#125; &#125; &#125; else if (allTips.length == blanks.length) &#123; //如果填空数量和提示数量一致 for (let i = 0; i &lt; allTips.length; i++) &#123; //将答案填写到对应的空中 let answer = allTips[i].textContent; if (answer &amp;&amp; answer.length &gt; 0) &#123; blanks[i].setAttribute(&quot;value&quot;, answer); blanks[i].dispatchEvent(inputBubblesEvent); &#125; else &#123; //发生了错误，只好随便填一下 blanks[i].setAttribute(&quot;value&quot;, i); blanks[i].dispatchEvent(inputBubblesEvent); &#125; &#125; &#125; else if (allTips.length &gt; blanks.length) &#123; //若提示数量比填空的数量多 //直接将所有答案整合填进去 let answer = &quot;&quot;; for (let i = 0; i &lt; allTips.length; allTips++) &#123; answer += allTips[i].textContent(); &#125; for (let j = 0; j &lt; blanks.length; j++) &#123; blanks[j].setAttribute(&quot;value&quot;, answer); blanks[j].dispatchEvent(inputBubblesEvent); &#125; &#125; else &#123; //一般不会跑到这，如果到这了输出一下，表示惊讶 console.log(&quot;居然跑到了这里&quot;) &#125; &#125; else if (blanks.length == 1) &#123;//只有一个空，直接把所有tips合并。 let answer = &quot;&quot;; if (allTips.length != 0) &#123;//如果有提示 for (let i = 0; i &lt; allTips.length; i++) &#123; answer += allTips[i].textContent; &#125; &#125; else &#123; try &#123;//尝试点击视频播放按钮,不过播不播都没关系 document.querySelector(&#x27;video&#x27;).play(); &#125; catch (e) &#123; &#125; let key = getKey(); let answerData = await getAnswer(key); if (answerData.status == 0 || answerData == &quot;error&quot;) &#123; //没有获取到答案 answer = &quot;不知道&quot;; //没有其他人做过这道视频题，所以需要答完保存答案，这样其他人遇到就能做对 shouldSaveAnswer = true; &#125; else &#123; //有答案 answerData = JSON.parse(answerData.data.txt_content); answer = answerData[0].content; &#125; &#125; blanks[0].setAttribute(&quot;value&quot;, answer); blanks[0].dispatchEvent(inputBubblesEvent); break; &#125; else &#123; //怕有没空白的情况。 &#125; break; &#125; case &quot;多选题&quot;: &#123; results = []; let hasButton = false; for (let i = 0; i &lt; allTips.length; i++) &#123; let tip = allTips[i]; let answer = tip.textContent; if (answer &amp;&amp; answer.length &gt; 0) &#123; for (let j = 0; j &lt; allbuttons.length; j++) &#123; //获取按钮 let selectButton = allbuttons[j]; //获取按钮的上的答案 let buttonAnswer = selectButton.textContent; if (buttonAnswer == answer || buttonAnswer.indexOf(answer) != -1 || answer.indexOf(buttonAnswer) != -1) &#123; hasButton = true; if (!$(selectButton).hasClass(&quot;chosen&quot;)) &#123; selectButton.click(); &#125; break; &#125; &#125; &#125; &#125; if (!hasButton) &#123; //没找到按钮，随便选一个 allbuttons[0].click(); &#125; break; &#125; case &quot;单选题&quot;: &#123; let results = []; let answer = &quot;&quot;; for (let i = 0; i &lt; allTips.length; i++) &#123; answer += allTips[i].textContent; &#125; if (answer &amp;&amp; answer.length &gt; 0) &#123; let hasButton = false; for (let i = 0; i &lt; allbuttons.length; i++) &#123; let radioButton = allbuttons[i]; let buttonAnswer = radioButton.textContent; //对比答案 if (buttonAnswer == answer || buttonAnswer.indexOf(answer) != -1 || answer.indexOf(buttonAnswer) != -1) &#123; hasButton = true; radioButton.click(); break; &#125; &#125; if (!hasButton) &#123; //没找到按钮，随便选一个 allbuttons[0].click(); &#125; &#125; else &#123; //没答案，随便选一个 allbuttons[0].click(); &#125; break; &#125; default: break; &#125; qNum++; nextButton = await getNextButton(); if (nextButton.textContent != &quot;再练一次&quot; &amp;&amp; nextButton.textContent != &quot;再来一组&quot; &amp;&amp; nextButton.textContent != &quot;查看解析&quot;) &#123; nextButton.click(); if (shouldSaveAnswer) &#123;//如果应该保存答案 let key = getKey();//获取key let answerTemp = document.getElementsByClassName(&quot;answer&quot;)[0].innerText; let reg = new RegExp(&#x27; &#x27;, &quot;g&quot;) let answer = &quot;&quot;; try &#123;//从字符串中拿出答案 answer = answerTemp.split(&quot;：&quot;)[1]; answer = answer.replace(reg, &quot;;&quot;); &#125; catch (e) &#123; answer = answerTemp; &#125; await saveAnswer(key, answer); shouldSaveAnswer = false; &#125; &#125; else &#123; //已经做完，跳出循环 break; &#125; &#125; window.close();&#125;//获取关键字function getKey() &#123; //获取题目的文本内容 let key = document.getElementsByClassName(&quot;q-body&quot;)[0].innerText; //外部引用md5加密 key = md5(key); console.log(key) return key;&#125;//保存答案function saveAnswer(key, value) &#123; return new Promise(function (resolve) &#123; value = [&#123; &quot;title&quot;: key, &quot;content&quot;: value &#125;]; value = JSON.stringify(value); $.ajax(&#123; type: &quot;POST&quot;, url: AnswerSaveUrl, data: &#123; txt_name: key, txt_content: value, password: &quot;&quot;, v_id: &quot;&quot; &#125;, dataType: &quot;json&quot;, success: function (data) &#123; resolve(data); &#125;, error: function () &#123; resolve(&quot;error&quot;); &#125; &#125;); &#125;)&#125;//获取答案function getAnswer(key) &#123; return new Promise(function (resolve) &#123; $.ajax(&#123; type: &quot;POST&quot;, url: AnswerDetailUrl, data: &#123; txt_name: key, password: &quot;&quot; &#125;, dataType: &quot;json&quot;, success: function (data) &#123; resolve(data); &#125;, error: function () &#123; resolve(&quot;error&quot;); &#125; &#125;); &#125;)&#125;//去除答题验证function cancelVerify() &#123; try &#123; let verifyBox = document.getElementById(&quot;nc_mask&quot;); verifyBox.id = &quot;egg_nc_mask&quot;; verifyBox.innerHTML = &quot;&quot;; verifyBox.remove(); &#125; catch (e) &#123; console.log(&quot;去除验证失败&quot;); &#125;&#125;//等待时间工具函数function waitingTime(time) &#123; if (!Number.isInteger(time)) &#123; time = 1000; &#125; return new Promise(resolve =&gt; &#123; setTimeout(function () &#123; resolve(&#x27;done&#x27;); &#125;, time); &#125;);&#125;//查询今日完成情况function getToday() &#123; return new Promise(function (resolve) &#123; $.ajax(&#123; type: &quot;GET&quot;, url: SearchSocreUrl, xhrFields: &#123; withCredentials: true //如果没有这个请求失败 &#125;, dataType: &quot;json&quot;, success: function (temp) &#123; resolve(temp.data.taskProgress); &#125;, error: function () &#123; resolve(new Array()); &#125; &#125;); &#125;)&#125;//初始化配置function initSetting() &#123; try &#123; let settingTemp = JSON.parse(GM_getValue(&#x27;studySetting&#x27;)); if (settingTemp != null) &#123; settings = settingTemp; &#125; else &#123; settings = [true, true, true, true, true, true, true, false]; &#125; &#125; catch (e) &#123; //没有则直接初始化 settings = [true, true, true, true, true, true, true, false]; &#125;&#125;//创建“手动答题”按钮function createManualButton() &#123; let title = document.getElementsByClassName(&quot;title&quot;)[0]; let manualButton = document.createElement(&quot;button&quot;); manualButton.setAttribute(&quot;id&quot;, &quot;manualButton&quot;); manualButton.innerText = &quot;关闭自动答题&quot;; manualButton.className = &quot;egg_auto_btn&quot;; //添加事件监听 try &#123;// Chrome、FireFox、Opera、Safari、IE9.0及其以上版本 manualButton.addEventListener(&quot;click&quot;, clickManualButton, false); &#125; catch (e) &#123; try &#123;// IE8.0及其以下版本 manualButton.attachEvent(&#x27;onclick&#x27;, clickManualButton); &#125; catch (e) &#123;// 早期浏览器 console.log(&quot;不学习何以强国error: 手动答题按钮绑定事件失败&quot;) &#125; &#125; //插入节点 title.parentNode.insertBefore(manualButton, title.nextSibling);&#125;//点击手动学习按钮function clickManualButton() &#123; let manualButton = document.getElementById(&quot;manualButton&quot;); if (manualButton.innerText == &quot;关闭自动答题&quot;) &#123; manualButton.innerText = &quot;开启自动答题&quot;; manualButton.className = &quot;egg_manual_btn&quot;; pause = true; &#125; else &#123; manualButton.innerText = &quot;关闭自动答题&quot;; manualButton.className = &quot;egg_auto_btn&quot;; pause = false; &#125;&#125;//创建“开始学习”按钮和配置function createStartButton() &#123; let base = document.createElement(&quot;div&quot;); var baseInfo = &quot;&quot;; baseInfo += &quot;&lt;form id=\\&quot;settingData\\&quot; class=\\&quot;egg_menu\\&quot; action=\\&quot;\\&quot; target=\\&quot;_blank\\&quot; onsubmit=\\&quot;return false\\&quot;&gt;&lt;div class=\\&quot;egg_setting_box\\&quot;&gt;&lt;div class=\\&quot;egg_setting_item\\&quot;&gt;&lt;label&gt;新闻&lt;\\/label&gt;&lt;input class=\\&quot;egg_setting_switch\\&quot; type=\\&quot;checkbox\\&quot; name=\\&quot;0\\&quot; &quot; + (settings[0] ? &#x27;checked&#x27; : &#x27;&#x27;) + &quot;\\/&gt; &lt;\\/div&gt; &lt;div class=\\&quot;egg_setting_item\\&quot;&gt; &lt;label&gt;视频&lt;\\/label&gt; &lt;input class=\\&quot;egg_setting_switch\\&quot; type=\\&quot;checkbox\\&quot; name=\\&quot;1\\&quot; &quot; + (settings[1] ? &#x27;checked&#x27; : &#x27;&#x27;) + &quot;\\/&gt; &lt;\\/div&gt; &lt;div class=\\&quot;egg_setting_item\\&quot;&gt; &lt;label&gt;每日答题&lt;\\/label&gt; &lt;input class=\\&quot;egg_setting_switch\\&quot; type=\\&quot;checkbox\\&quot; name=\\&quot;6\\&quot; &quot; + (settings[6] ? &#x27;checked&#x27; : &#x27;&#x27;) + &quot;\\/&gt; &lt;\\/div&gt; &lt;div class=\\&quot;egg_setting_item\\&quot;&gt; &lt;label&gt;每周答题&lt;\\/label&gt; &lt;input class=\\&quot;egg_setting_switch\\&quot; type=\\&quot;checkbox\\&quot; name=\\&quot;2\\&quot; &quot; + (settings[2] ? &#x27;checked&#x27; : &#x27;&#x27;) + &quot;\\/&gt; &lt;\\/div&gt; &lt;div class=\\&quot;egg_setting_item\\&quot;&gt; &lt;label&gt;专项练习&lt;\\/label&gt; &lt;input class=\\&quot;egg_setting_switch\\&quot; type=\\&quot;checkbox\\&quot; name=\\&quot;5\\&quot; &quot; + (settings[5] ? &#x27;checked&#x27; : &#x27;&#x27;) + &quot;\\/&gt;&lt;\\/div&gt;&lt;hr \\/&gt;&lt;div title=&#x27;Tip:开始学习后，隐藏相关页面和提示（不隐藏答题中的关闭自动答题按钮）&#x27; class=\\&quot;egg_setting_item\\&quot;&gt; &lt;label&gt;运行隐藏&lt;\\/label&gt; &lt;input class=\\&quot;egg_setting_switch\\&quot; type=\\&quot;checkbox\\&quot; name=\\&quot;7\\&quot;&quot; + (settings[7] ? &#x27;checked&#x27; : &#x27;&#x27;) + &quot;/&gt;&lt;/div&gt;&lt;a style=\\&quot;text-decoration: none;\\&quot; title=\\&quot;视频不自动播放？点此查看解决办法\\&quot; target=\\&quot;blank\\&quot; href=\\&quot;https://docs.qq.com/doc/DZllGcGlJUG1qT3Vx\\&quot;&gt;&lt;div style=\\&quot;color:#5F5F5F;font-size:14px;\\&quot; class=\\&quot;egg_setting_item\\&quot;&gt;&lt;label style=\\&quot;cursor: pointer;\\&quot;&gt;视频不自动播放?&lt;\\/label&gt;&lt;\\/div&gt;&lt;\\/a&gt;&lt;\\/div&gt;&lt;\\/form&gt;&quot;; base.innerHTML = baseInfo; let body = document.getElementsByTagName(&quot;body&quot;)[0]; body.append(base) let startButton = document.createElement(&quot;button&quot;); startButton.setAttribute(&quot;id&quot;, &quot;startButton&quot;); startButton.innerText = &quot;开始学习&quot;; startButton.className = &quot;egg_study_btn egg_menu&quot;; //添加事件监听 try &#123;// Chrome、FireFox、Opera、Safari、IE9.0及其以上版本 startButton.addEventListener(&quot;click&quot;, start, false); &#125; catch (e) &#123; try &#123;// IE8.0及其以下版本 startButton.attachEvent(&#x27;onclick&#x27;, start); &#125; catch (e) &#123;// 早期浏览器 console.log(&quot;不学习何以强国error: 开始学习按钮绑定事件失败&quot;) &#125; &#125; //插入节点 body.append(startButton)&#125;//保存配置function saveSetting() &#123; let form = document.getElementById(&quot;settingData&quot;); let formData = new FormData(form); settings[0] = (formData.get(&#x27;0&#x27;) != null); settings[1] = (formData.get(&#x27;1&#x27;) != null); settings[6] = (formData.get(&#x27;6&#x27;) != null); settings[2] = (formData.get(&#x27;2&#x27;) != null); settings[5] = (formData.get(&#x27;5&#x27;) != null); settings[7] = (formData.get(&#x27;7&#x27;) != null);//运行时是否要隐藏 GM_setValue(&#x27;studySetting&#x27;, JSON.stringify(settings));&#125;//是否显示目录function showMenu(isShow = true) &#123; let items = document.getElementsByClassName(&quot;egg_menu&quot;); for (let i = 0; i &lt; items.length; i++) &#123; items[i].style.display = isShow ? &quot;block&quot; : &quot;none&quot;; &#125;&#125;//开始async function start() &#123; //保存配置 console.log(&quot;初始化...&quot;) saveSetting(); let loggedBox = document.querySelectorAll(&quot;a[class=&#x27;logged-link&#x27;]&quot;)[0]; console.log(&quot;检查是否登录...&quot;) if (loggedBox &amp;&amp; loggedBox.innerText) &#123; let startButton = document.getElementById(&quot;startButton&quot;); startButton.innerText = &quot;正在学习&quot;; startButton.style.cursor = &quot;default&quot;; startButton.setAttribute(&quot;disabled&quot;, true); if (settings[7]) &#123; showMenu(false); &#125; let taskProgress = null; let continueToDo = true; let tasks = [false, false, false, false, false] while (continueToDo) &#123; //查询今天还有什么任务没做完 console.log(&quot;检查今天还有什么任务没做完&quot;) taskProgress = await getToday(); if (taskProgress != null) &#123; console.log(&quot;开始学习&quot;) //检查新闻 if (settings[0] &amp;&amp; taskProgress[0].currentScore != taskProgress[0].dayMaxScore) &#123; tasks[0] = false;//只要还有要做的，就当做没完成 newsNum = taskProgress[0].dayMaxScore - taskProgress[0].currentScore;//还需要看多少个新闻 console.log(&quot;1.看新闻&quot;); await readNews(); &#125; else &#123; tasks[0] = true; &#125; //检查视频 let temp = parseInt(taskProgress[1].dayMaxScore - taskProgress[1].currentScore); let temp2 = parseInt(taskProgress[3].dayMaxScore - taskProgress[3].currentScore); if (settings[1] &amp;&amp; (temp != 0 || temp2 != 0)) &#123; tasks[1] = false;//只要还有要做的，就当做没完成 videoNum = temp &gt; temp2 ? temp : temp2;//还需要看多少个视频 console.log(&quot;2.看视频&quot;); await watchVideo(); &#125; else &#123; tasks[1] = true; &#125; //检查每日答题 if (settings[6] &amp;&amp; taskProgress[6].currentScore != taskProgress[6].dayMaxScore) &#123; tasks[2] = false;//只要还有要做的，就当做没完成 console.log(&quot;3.做每日答题&quot;); await doExamPractice(); &#125; else &#123; tasks[2] = true; &#125; //检查每周答题 if (settings[2] &amp;&amp; taskProgress[2].currentScore == 0) &#123; tasks[3] = false;//只要还有要做的，就当做没完成 console.log(&quot;4.做每周答题&quot;); let result = await doExamWeekly(); if (result == &quot;noTest&quot;) &#123; //如果是全都完成了，已经没有能做的了 tasks[3] = true; &#125; &#125; else &#123; tasks[3] = true; &#125; //检查专项练习 if (settings[5] &amp;&amp; taskProgress[5].currentScore == 0) &#123; tasks[4] = false;//只要还有要做的，就当做没完成 console.log(&quot;5.做专项练习&quot;); let result = await doExamPaper(); if (result == &quot;noTest&quot;) &#123; //如果是全都完成了，已经没有能做的了 tasks[4] = true; &#125; &#125; else &#123; tasks[4] = true; &#125; if (tasks[0] &amp;&amp; tasks[1] &amp;&amp; tasks[2] &amp;&amp; tasks[3] &amp;&amp; tasks[4]) &#123; //如果检查都做完了，就不用继续了 continueToDo = false; &#125; &#125; else &#123; alert(&quot;发生意外错误&quot;) continueToDo = false; &#125; console.log(&quot;continueToDo : &quot; + continueToDo) &#125; console.log(&quot;已完成&quot;) startButton.innerText = &quot;已完成&quot;; startButton.style.color = &quot;#c7c7c7&quot;; if (settings[7]) &#123; showMenu() &#125; &#125; else &#123; //提醒登录 alert(&quot;请先登录&quot;); &#125; return false;&#125;","categories":[],"tags":[]},{"title":"Hello World（你好，世界）","slug":"hello-world","date":"2021-11-17T11:59:35.000Z","updated":"2021-11-21T07:06:25.886Z","comments":true,"path":"16107.html","link":"","permalink":"https://blog.lixin.ee/16107.html","excerpt":"","text":"欢迎来到Hexo!这是你的第一篇文章。查看文档了解更多信息。如果您在使用 Hexo 时遇到任何问题， 您可以在问题解答中找到答案，也可以在GitHub上问我。 快速开始创建一个新帖子1$ hexo new &quot;My New Post&quot; 更多信息: 写作 运行服务器1$ hexo server 更多信息: 服务器 生成静态文件1$ hexo generate 更多信息: 生成 部署到远程站点1$ hexo deploy 更多信息: 部署","categories":[],"tags":[]},{"title":"在我工作中遇到的一些Excel问题","slug":"在我工作中遇到的一些Excel问题","date":"2019-08-23T03:10:42.000Z","updated":"2021-12-28T14:10:53.088Z","comments":true,"path":"57510.html","link":"","permalink":"https://blog.lixin.ee/57510.html","excerpt":"","text":"在我做混凝土试块抗压台账中用到的一些Excel公式；我需要将A表格中的B、C、D列单元格内容复制到B表格的C列单元格，需要将A单元格E列的日期提取到B单元格的B列单元格。1、合并单元格并保留所有内容，虽然没找到教程，但是找到了差不多可以实现的方法；在空白单元格输入公式=B58&amp;C58&amp;D58回车，即可。2、将E、F、G列单元格填充到A、B、C列的合并单元格；在C1单元格 输入公式=G1选中C列剩余合并单元格，输入公式=index(G:G,1+counta(A$1:A2))按Ctrl+Enter 即可,其中A$1:A2里的A2根据第一个合并单元格的实际范围调整,在日期填充过去的时候遇到无法显示，选中日期列设置单元格格式，选择“数字-日期”即可正常显示。3、如下图筛选施工部位；因为是合并单元格，正常筛选情况下，Excel中对存在合并单元格的数据筛选的时候，只能筛选到第一行的数据（上图）。而我需要的是将合并单元格对应的全部行的数据，在筛选时都显示出来（下图）。先将要筛选的合并单元格复制到任何一空白列（图①）；取消原来的合并单元格（图②）；然后按快捷键Ctrl+G，进入“定位条件”（图③），选择“空值”（图④）；然后在第一个单元格输入公式“=上一个单元格”（图⑤），按Ctrl+Enter填充全部；复制列，粘贴选项选择“值”（图⑥）；选中备用列，点击格式刷（图⑦），点击原来的合并单元格，取消的单元格就会重新合并（图⑧）；然后筛选单元格时，合并单元和对应列数据全部筛选（图⑨）。转自李鑫的博客在我工作中遇到的一些Excel问题","categories":[],"tags":[]}],"categories":[{"name":"毕业了","slug":"毕业了","permalink":"https://blog.lixin.ee/categories/%E6%AF%95%E4%B8%9A%E4%BA%86/"},{"name":"hexo博客","slug":"hexo博客","permalink":"https://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://blog.lixin.ee/tags/Windows/"},{"name":"office","slug":"office","permalink":"https://blog.lixin.ee/tags/office/"},{"name":"MD语法","slug":"MD语法","permalink":"https://blog.lixin.ee/tags/MD%E8%AF%AD%E6%B3%95/"}]}