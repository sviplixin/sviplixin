<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lixin.ee</title>
  
  
  <link href="http://blog.lixin.ee/atom.xml" rel="self"/>
  
  <link href="http://blog.lixin.ee/"/>
  <updated>2021-11-24T02:28:22.910Z</updated>
  <id>http://blog.lixin.ee/</id>
  
  <author>
    <name>Li Xin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>GitHub+Hexo搭建个人博客</title>
    <link href="http://blog.lixin.ee/6447.html"/>
    <id>http://blog.lixin.ee/6447.html</id>
    <published>2021-11-24T02:26:53.000Z</published>
    <updated>2021-11-24T02:28:22.910Z</updated>
    
    
    
    
    <category term="hexo博客" scheme="http://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo主题-pure</title>
    <link href="http://blog.lixin.ee/14761.html"/>
    <id>http://blog.lixin.ee/14761.html</id>
    <published>2021-11-21T05:54:16.000Z</published>
    <updated>2021-11-21T07:04:08.989Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>预览地址: <a href="https://blog.cofess.com/">https://blog.cofess.com</a><br>项目地址: <a href="https://github.com/cofess/hexo-theme-pure">https://github.com/cofess/hexo-theme-pure</a><br>中文使用文档: <a href="https://github.com/cofess/hexo-theme-pure/blob/master/README.cn.md">https://github.com/cofess/hexo-theme-pure/blob/master/README.cn.md</a><br>原文链接：<a href="https://blog.plcent.com/2019/11/05/hexo-theme-pure/">https://blog.plcent.com/2019/11/05/hexo-theme-pure/</a></p></blockquote><h2 id="使用前请操作"><a href="#使用前请操作" class="headerlink" title="使用前请操作"></a>使用前请操作</h2><p>使用该主题前, 请先复制 <code>theme/pure/_source/</code> 目录下的所有内容到<code>source/</code>目录下,原因在于该目录下有建好的菜单 <code>categories</code>(分类)、<code>tags</code>(标签)、<code>repository</code>(项目)、<code>books</code>(书单)、<code>links</code>(友链)、<code>about</code>(关于)页面当你使用自动生成分类、标签，展示github项目时</p><h2 id="文章目录索引"><a href="#文章目录索引" class="headerlink" title="文章目录索引"></a>文章目录索引</h2><p>在文章详情页, 展示一个文章目录</p><p>1.主题配置文件中开启配置:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">config</span><br><span class="line">  toc: true # 是否开启文章章节目录导航</span><br></pre></td></tr></table></figure><p>2.在文章顶部将该文章开启索引, 如:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo主题pure使用指南</span><br><span class="line">date: 2019-11-05 14:34:15</span><br><span class="line">tags: </span><br><span class="line">- hexo主题</span><br><span class="line"></span><br><span class="line">categories:</span><br><span class="line">- hexo</span><br><span class="line"></span><br><span class="line">toc: true # 是否启用内容索引</span><br><span class="line">sidebar: none # 是否启用sidebar侧边栏，none：不启用</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="侧边栏"><a href="#侧边栏" class="headerlink" title="侧边栏"></a>侧边栏</h2><p>主题配置项中, 侧边栏可以如下配置:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 侧边栏</span><br><span class="line">sidebar: right</span><br><span class="line"># 侧边栏启用哪些模块</span><br><span class="line">widgets:</span><br><span class="line">  - board # 公告</span><br><span class="line">  - category # 分类</span><br><span class="line">  - tag # 标签</span><br><span class="line">  - tagcloud # 标签云</span><br><span class="line">  - archive # 归档</span><br><span class="line">  - recent_posts # 最近文章</span><br><span class="line"></span><br><span class="line"># 归档列表的展示方式</span><br><span class="line">archive_type: &#x27;monthly&#x27; # 归档方式:  yearly | monthly</span><br><span class="line">show_count: true # 显示每个归档的文章总数</span><br></pre></td></tr></table></figure><h2 id="图集"><a href="#图集" class="headerlink" title="图集"></a>图集</h2><p>在文章详情页中, 涉及的图片可以使用图集功能, 在点击一张图片时, 放大图片.<br>主题的图册公告是使用<a href="https://github.com/fancyapps/fancybox">fancybox</a>实现, 可以参照github</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Fancybox</span><br><span class="line"># 图集功能</span><br><span class="line">fancybox: true</span><br></pre></td></tr></table></figure><h2 id="展示github项目"><a href="#展示github项目" class="headerlink" title="展示github项目"></a>展示github项目</h2><p>在左侧菜单<code>项目</code>中, 点击展示自己的github项目</p><p>1.在主题配置文件中 <code>_config.yml</code> 修改, 请配置自己github用户名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">github: </span><br><span class="line">  username: caoruiy  # github用户名</span><br></pre></td></tr></table></figure><p>2.新建<code>repository</code>页面:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; hexo new repository</span><br></pre></td></tr></table></figure><blockquote><p>你也可以直接复制 <code>theme/pure/_source/</code> 目录下 <code>repository文件夹</code> 到 <code>博客根目录/source/</code> 目录下</p></blockquote><p>3.将文件内容修改为:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Repositories</span><br><span class="line">layout: repository</span><br><span class="line">comments: false</span><br><span class="line">sidebar: none</span><br><span class="line">---</span><br></pre></td></tr></table></figure><blockquote><p>关键内容为 <code>layout: repository</code>,包含该属性才可以展示github项目</p></blockquote><h2 id="评论功能"><a href="#评论功能" class="headerlink" title="评论功能"></a>评论功能</h2><p>主题集成了<a href="https://disqus.com/">disqus</a>、<a href="http://www.uyan.cc/">友言</a>、<a href="https://livere.com/">来必力</a>、<a href="https://github.com/imsun/gitment">gitment</a>、<a href="https://github.com/gitalk/gitalk">gitalk</a>评论系统，选择其中一种即可<br>你可以在主题配置文件中修改评论工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">comment:</span><br><span class="line">  type: valine  # 启用哪种评论系统</span><br></pre></td></tr></table></figure><h3 id="Valine"><a href="#Valine" class="headerlink" title="Valine"></a>Valine</h3><p>一个无后端的评论框工具, 其依赖于 <a href="https://leancloud.cn/">Leancloud</a> 开发, 所以使用前需要先注册 <a href="https://leancloud.cn/">Leancloud</a> 账号</p><p>如何开始? 你可以从 <a href="https://valine.js.org/quickstart.html">Valine-快速开始</a> 教程开始, 教程包含了一步一步的指引教程.</p><h4 id="Valine配置项"><a href="#Valine配置项" class="headerlink" title="Valine配置项"></a>Valine配置项</h4><p>主题valine评论框提供了以下配置项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">valine: # Valine官方地址: https://valine.js.org</span><br><span class="line">  appid:  # 你的 leancloud 应用 appid</span><br><span class="line">  appkey:  # 你的 leancloud 应用 appkey</span><br><span class="line">  notify: true # 是否开始评论邮件提醒, 教程: https://github.com/xCss/Valine/wiki</span><br><span class="line">  verify: false # 是否开始验证码功能, 开始邮件提醒会自动开启验证码功能</span><br><span class="line">  placeholder: 说点什么... # 输入框默认内容</span><br><span class="line">  avatar: mm # 头像展示方式, 具体设置项教程: https://valine.js.org/configuration.html#avatar</span><br><span class="line">  meta: nick,mail,link # 自定义评论信息</span><br><span class="line">  pageSize: 10 # 评论列表分页</span><br><span class="line">  lang: zh-cn, # 多语言支持 zh-cn | en</span><br><span class="line">  visitor: true # 文章阅读量统计:  https://valine.js.org/visitor.html</span><br><span class="line">  highlight: true # 代码高亮</span><br><span class="line">  recordIP: true # 记录评论者的IP</span><br></pre></td></tr></table></figure><blockquote><p>关于邮件提醒: 只有在回复评论时, 并且填写了邮箱的评论才会收到回复提醒<br>关于文章阅读量统计: 开启阅读量统计, 会在详情页标题下展示阅读量数据</p></blockquote><h2 id="搜索功能"><a href="#搜索功能" class="headerlink" title="搜索功能"></a>搜索功能</h2><p>主题提供内置的<code>搜索功能</code>和<code>百度搜索</code>, 百度搜索就是使用百度的SEO搜索, 个人觉得不是很实用, 不建议开启.</p><p>在主题配置文件 <code>_config.yml</code> 中配置:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Search</span><br><span class="line">search:</span><br><span class="line">  insight: true # 在使用搜索功能前, 你需要安装 `hexo-generator-json-content`</span><br><span class="line">  baidu: false # 使用百度搜索前, 你必须禁用其他所有的搜索功能</span><br></pre></td></tr></table></figure><h3 id="内置搜索"><a href="#内置搜索" class="headerlink" title="内置搜索"></a>内置搜索</h3><p>使用搜索功能前需要先安装:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -S hexo-generator-json-content</span><br></pre></td></tr></table></figure><p>项目地址: <a href="https://github.com/alexbruno/hexo-generator-json-content">https://github.com/alexbruno/hexo-generator-json-content</a></p><h3 id="hexo-wordcount"><a href="#hexo-wordcount" class="headerlink" title="hexo-wordcount"></a><a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a></h3><p>在你运行 <code>hexo g</code> 或者 <code>hexo s</code> 时生效，在 <code>hexo g</code> 生成站点时, 会在根目录下生成<code>content.json</code>该文件内容即为搜索内容。</p><p>你可以对搜索内容进行自定义的配置， 只要在 <code>_config.yml</code> 中配置 <code>jsonContent</code>即可:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 示例: 隐藏分类和标签的搜索</span><br><span class="line">jsonContent:</span><br><span class="line">  dateFormat: DD/MM/YYYY</span><br><span class="line">  posts:</span><br><span class="line">    title: true</span><br><span class="line">    date: true</span><br><span class="line">    path: true</span><br><span class="line">    text: true</span><br><span class="line">    raw: false</span><br><span class="line">    content: false</span><br><span class="line">    slug: false</span><br><span class="line">    updated: false</span><br><span class="line">    comments: false</span><br><span class="line">    link: false</span><br><span class="line">    permalink: false</span><br><span class="line">    excerpt: false</span><br><span class="line">    categories: false</span><br><span class="line">    tags: false</span><br><span class="line">    author: false</span><br></pre></td></tr></table></figure><h2 id="文章阅读数量统计"><a href="#文章阅读数量统计" class="headerlink" title="文章阅读数量统计"></a>文章阅读数量统计</h2><p>主题提供 <a href="http://busuanzi.ibruce.info/">不蒜子</a> 和 基于 leancloud 的统计</p><p>但是经过验证, 发现基于leancloud的统计不生效, 不知原因, 实现等效的方法就是:</p><p>评论框使用<code>valine</code>评论框(主题已经内置), 同时开启 <code>visitor: true</code> 配置项项即可</p><h2 id="字数统计-amp-阅读时长"><a href="#字数统计-amp-阅读时长" class="headerlink" title="字数统计&amp;阅读时长"></a>字数统计&amp;阅读时长</h2><p>主题内置了该功能, 使用前需要先安装插件:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -S hexo-wordcount</span><br></pre></td></tr></table></figure><p>主题配置文件中, 开启设置即可:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># wordcount</span><br><span class="line">postCount:</span><br><span class="line">  enable: true</span><br><span class="line">  wordcount: true  # 文章字数统计</span><br><span class="line">  min2read: true  # 阅读时长预计</span><br></pre></td></tr></table></figure><h2 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h2><p>复制 <code>theme/pure/_source/</code> 目录下 links文件夹到 <code>/source/  </code> 目录下在 hexo 目录下的 source 文件夹内创建一个名为<code>_data</code>（禁止改名）的文件夹。</p><p>然后在文件内创建一个名为 <code>links.yml</code> 的文件,在其中添加相关数据即可。</p><p>单个友情链接的格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name:</span><br><span class="line">    link: http://example.com</span><br><span class="line">    avatar: http://example.com/avatar.png</span><br><span class="line">    desc: &quot;这是一个描述&quot;</span><br></pre></td></tr></table></figure><p>添加多个友情链接，我们只需要根据上面的格式重复填写即可。</p><ul><li><p>将 Name 改为友情链接的名字，例如 Cofess。</p></li><li><p><a href="http://example.com/">http://example.com</a> 为友情链接的地址。</p></li><li><p><a href="http://example.com/avatar.png">http://example.com/avatar.png</a> 为友情链接的头像。</p></li><li><p>这是一个描述 为友情链接描述。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;预览地址: &lt;a href=&quot;https://blog.cofess.com/&quot;&gt;https://blog.cofess.com&lt;/a&gt;&lt;br&gt;项目地址: &lt;a href=&quot;https://github.com/cofess/hexo-theme-</summary>
      
    
    
    
    <category term="hexo博客" scheme="http://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo插件</title>
    <link href="http://blog.lixin.ee/37456.html"/>
    <id>http://blog.lixin.ee/37456.html</id>
    <published>2021-11-20T12:17:13.000Z</published>
    <updated>2021-11-23T14:42:07.653Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、hexo-abbrlink"><a href="#1、hexo-abbrlink" class="headerlink" title="1、hexo-abbrlink"></a>1、hexo-abbrlink</h1><p>一个基于帖子标题生成静态帖子链接的Hexo 插件。</p><h4 id="安装-hexo-abbrlink"><a href="#安装-hexo-abbrlink" class="headerlink" title="安装 hexo-abbrlink"></a>安装 hexo-abbrlink</h4><p>博客项目的根目录直接执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><h4 id="Hexo-配置"><a href="#Hexo-配置" class="headerlink" title="Hexo 配置"></a>Hexo 配置</h4><p>还是刚才的配置文件（站点配置文件），把permalink改成以下配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: :abbrlink.html</span><br></pre></td></tr></table></figure><h4 id="Next-配置"><a href="#Next-配置" class="headerlink" title="Next 配置"></a>Next 配置</h4><p>打开主题配置文件根目录下：/theme/主题名/_config.yml，新增配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># post url</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32  #support crc16(default) and crc32</span><br><span class="line">  rep: hex    #support dec(default) and hex</span><br></pre></td></tr></table></figure><h4 id="hexo-clean-amp-amp-hexo-g"><a href="#hexo-clean-amp-amp-hexo-g" class="headerlink" title="hexo clean &amp;&amp; hexo g"></a>hexo clean &amp;&amp; hexo g</h4><p>这一步是必须操作，hexo clean清除 public 站点文件，hexo g重新生成站点文件。生成之后，打开一个.md 文章文件，你会发现，在顶部的定义部分新增了一个abbrlink属性，后面是文件的 url 资源路径。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abbrlink: 44359</span><br></pre></td></tr></table></figure><h4 id="hexo-s"><a href="#hexo-s" class="headerlink" title="hexo s"></a>hexo s</h4><p>重启服务。重启之后回到 home 主页，点开一个博文查看 url，不出意外 url 已发生改变，没有改变的同学查看下 2 个配置文件处，是否配置对了，别搞混了，不要都配置到一个文件中。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1、hexo-abbrlink&quot;&gt;&lt;a href=&quot;#1、hexo-abbrlink&quot; class=&quot;headerlink&quot; title=&quot;1、hexo-abbrlink&quot;&gt;&lt;/a&gt;1、hexo-abbrlink&lt;/h1&gt;&lt;p&gt;一个基于帖子标题生成静态帖子链接的H</summary>
      
    
    
    
    <category term="hexo博客" scheme="http://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo博客部署到云服务器(使用宝塔面板)</title>
    <link href="http://blog.lixin.ee/14bf8efe.html"/>
    <id>http://blog.lixin.ee/14bf8efe.html</id>
    <published>2021-11-20T11:59:35.000Z</published>
    <updated>2021-11-23T14:02:07.679Z</updated>
    
    <content type="html"><![CDATA[<p>思路是：</p><p>在服务器上搭建Git环境，创建Git仓库<br>在主机生成Hexo静态文件，通过与服务器连接，推到服务器上的Git仓库<br>通过git-hooks实现自动部署到网站资源目录<br>Nginx做静态文件服务器，实现外界对网站资源目录的访问<br>一、环境准备</p><ol><li>安装宝塔面板<br>我是安装了服务器上面的<strong>Cloudreve</strong>镜像，自带有宝塔面板。宝塔面板安装很简单，直接连上服务器（推荐宝塔终端，很简单易用），输入    <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install\_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure>显示如下即成功<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">外网面板地址: http://49.232.1.111:8888 #用来访问面板</span><br><span class="line"></span><br><span class="line">内网面板地址: http://10.0.8.13:8888</span><br><span class="line"></span><br><span class="line">\*以下仅为初始默认账户密码，若无法登录请执行bt命令重置账户/密码登录</span><br><span class="line"></span><br><span class="line">username: ehmpmg7m #记住用户名和密码</span><br><span class="line"></span><br><span class="line">password: dsjfhasd #忘记可使用sudo /etc/init.d/bt default查看</span><br><span class="line"></span><br><span class="line">If you cannot access the panel,</span><br><span class="line"></span><br><span class="line">release the following panel port [8888] in the security group</span><br><span class="line"></span><br><span class="line">若无法访问面板，请检查防火墙/安全组是否有放行面板[8888]端口 #安全组注意放行，轻量级服务器为防火墙</span><br></pre></td></tr></table></figure>然后在宝塔面板网站-&gt;添加站点，找到放置网站资源目录<br><code>www/wwwroot/taitrs.cc</code></li><li>安装nginx和git<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nginx git</span><br></pre></td></tr></table></figure></li><li>Nginx服务器配置<br>通过宝塔面板可以方便地修改Nginx的配置文件，在taitres.cc的设置中找到配置文件，应该是自动配好了的，没有就自己设置下，也可以使用其他端口</li></ol><img src="https://typora-1305223211.cos.ap-chongqing.myqcloud.com/taiblog/2021-05-12\_16.png" alt="" style="zoom: 67%;" />二、Git仓库搭建之前推hexo的静态文件都是推到GitHub的仓库，现在服务器也是一样，需要仓库来保存1.添加一个用户git在服务器端<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">adduser git   #添加git用户</span><br><span class="line"></span><br><span class="line">chmod 740 /etc/sudoers  #改变sudoers文件的权限为文件所有者可写</span><br><span class="line"></span><br><span class="line">vim /etc/sudoers</span><br><span class="line"></span><br><span class="line">#在root ALL=(ALL) ALL 下方添加一行 </span><br><span class="line"></span><br><span class="line">git ALL=(ALL) ALL</span><br><span class="line"></span><br><span class="line">chmod 400 /etc/sudoers  #将其权限修改为文件所有者可读</span><br></pre></td></tr></table></figure>2.给git用户添加ssh密钥这一步是为了建立主机与服务器连接，使其不需要密码也能登陆<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#在主机端打开powershell，cd到C:\Users\admin\.ssh生成密匙，如已有密匙可跳过这一步</span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -C &quot;taitres.cc&quot;</span><br><span class="line"></span><br><span class="line"># -t 指定密钥类型，默认是 rsa ，可以省略</span><br><span class="line"></span><br><span class="line"># -C 用于识别这个密钥的注释，可以输入任何内容</span><br><span class="line"></span><br><span class="line"># -f 指定密钥文件存储文件名，默认id\_rsa</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#在服务器端</span><br><span class="line"></span><br><span class="line">su git  #切换到git用户</span><br><span class="line"></span><br><span class="line">mkdir -p ~/.ssh</span><br><span class="line"></span><br><span class="line">touch ~/.ssh/authorized\_keys #创建authorized\_keys文件</span><br><span class="line"></span><br><span class="line">chmod 600 ~/.ssh/authorized\_keys  #为authorized\_keys文件赋予文件所有者可读可写的权限</span><br><span class="line"></span><br><span class="line">chmod 700 ~/.ssh  #为.ssh文件夹赋予文件夹所有者可读可写可执行的权限</span><br></pre></td></tr></table></figure>复制公匙id_rsa.pub内容到服务器/home/git/.ssh/authorized_keys，关闭终端，使用`ssh git@server`重新登录服务器，测试是否能不要密码登录到git用户，如出现Permission denied的问题可尝试文章末尾的解决办法<p>3.创建Git仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /home/git/repos    #新建目录，这是git仓库的位置</span><br><span class="line"></span><br><span class="line">cd /home/git/repos</span><br><span class="line"></span><br><span class="line">sudo git init --bare taiblog.git #初始化一个名叫taiblog的仓库</span><br></pre></td></tr></table></figure><p>4.配置钩子实现自动部署<br>找到 <code>/home/git/repos/taiblog.git/hooks/post-update.sample</code> 改名<code>post-update</code>，内容改为 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">git --work-tree=/www/wwwroot/taitres.cc --git-dir=/home/git/repos/taiblog.git checkout -f</span><br></pre></td></tr></table></figure><p>然后给权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd taiblog.git/hooks/</span><br><span class="line"></span><br><span class="line">sudo chmod +x post-update  #赋予其可执行权限</span><br><span class="line"></span><br><span class="line">sudo chown -R git:git /home/git/repos/ #仓库所有者改为git</span><br><span class="line"></span><br><span class="line">sudo chown -R git:git /www/wwwroot/taitrs.cc/ #站点文件夹所有者改为git</span><br></pre></td></tr></table></figure><p>5.测试Git仓库是否可用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#在主机端，如果能将仓库拉下来，说明Git仓库搭建成功git clone git@server\_ip:/home/git/repos/blog.git</span><br></pre></td></tr></table></figure><p>三、本地配置和测试<br>1.本地配置<br>修改本地Hexo博客文件夹中的<code>\_config.yml</code>文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"></span><br><span class="line">  type: git</span><br><span class="line"></span><br><span class="line">  repo: git@server:/home/git/repos/taiblog.git</span><br><span class="line"></span><br><span class="line">  branch: maste</span><br></pre></td></tr></table></figure><p>2.测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  #清除缓存</span><br><span class="line"></span><br><span class="line">hexo generate #生成静态页面</span><br><span class="line"></span><br><span class="line">hexo delopy  #将本地静态页面目录部署到云服务器</span><br></pre></td></tr></table></figure><p>也可以在package.json 中添加 npm 脚本，这样就可以直接<code>npm run dd</code>一下执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line"></span><br><span class="line">    &quot;build&quot;: &quot;hexo generate&quot;,</span><br><span class="line"></span><br><span class="line">    &quot;clean&quot;: &quot;hexo clean&quot;,</span><br><span class="line"></span><br><span class="line">    &quot;deploy&quot;: &quot;hexo deploy&quot;,</span><br><span class="line"></span><br><span class="line">    &quot;dd&quot;: &quot;hexo clean &amp;&amp; hexo g -d&quot;,</span><br><span class="line"></span><br><span class="line">    &quot;server&quot;: &quot;hexo server&quot;,</span><br><span class="line"></span><br><span class="line">    &quot;ss&quot;: &quot;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&quot;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>然后访问自己的IP看看是否成功49.232.1.11</p><p>遇到的一些问题<br>在ssh-copy-id 时报错，ssh-copy-id : 无法将“ssh-copy-id”项识别为 cmdlet、函数、脚本文件或可运行程序的名称<br>解决办法：需要在powershell配置文件中添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">function ssh-copy-id([string]$userAtMachine)&#123;   </span><br><span class="line"></span><br><span class="line">    $publicKey = &quot;$ENV:USERPROFILE&quot; + &quot;/.ssh/id\_rsa.pub&quot;</span><br><span class="line"></span><br><span class="line">    if (!(Test-Path &quot;$publicKey&quot;))&#123;</span><br><span class="line"></span><br><span class="line">        Write-Error &quot;ERROR: failed to open ID file &#x27;$publicKey&#x27;: No such file&quot;            </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    else &#123;</span><br><span class="line"></span><br><span class="line">        &amp; cat &quot;$publicKey&quot; | ssh $userAtMachine &quot;umask 077; test -d .ssh || mkdir .ssh ; cat &gt;&gt; .ssh/authorized\_keys || exit 1&quot;      </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于powershell配置文件的使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.首先检查配置文件是否已经存在</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2.打开powershell输入 `Test-Path $profile`如果返回false，则在C:\Users\admin\Documents\下创建一个WindowsPowerShell文件夹，然后执行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">New-Item -path $profile -type file</span><br></pre></td></tr></table></figure><p>就创建了一个Microsoft.PowerShell_profile.ps1文件</p><p>使用<code>ssh-add</code>时出现  <code>unable to start ssh-agent service, error :1058</code><br>解决方法：使用管理员权限运行 Power Shell，然后执行<code>Set-Service -Name ssh-agent -StartupType automatic</code>.</p><p>把 ssh-agent 的启动类型设置为自动方式，在任务管理器中查看，ssh-agent是否开启</p><p>连接ssh时出现 Permission denied<br>解决方法：<code>vi /etc/ssh/sshd\_config</code> 修改为PubkeyAuthentication yes（如果前面有#，就去掉#）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;思路是：&lt;/p&gt;
&lt;p&gt;在服务器上搭建Git环境，创建Git仓库&lt;br&gt;在主机生成Hexo静态文件，通过与服务器连接，推到服务器上的Git仓库&lt;br&gt;通过git-hooks实现自动部署到网站资源目录&lt;br&gt;Nginx做静态文件服务器，实现外界对网站资源目录的访问&lt;br&gt;一、</summary>
      
    
    
    
    <category term="hexo博客" scheme="http://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo博客所用到的MD编辑器语法</title>
    <link href="http://blog.lixin.ee/13838.html"/>
    <id>http://blog.lixin.ee/13838.html</id>
    <published>2021-11-20T06:34:15.000Z</published>
    <updated>2021-11-20T16:12:01.307Z</updated>
    
    <content type="html"><![CDATA[<p><span id="顶部"></span></p><blockquote><p><a href="#%E6%A0%87%E9%A2%98%E8%AF%AD%E6%B3%95">标题语法</a><br><a href="#%E6%AE%B5%E8%90%BD%E8%AF%AD%E6%B3%95">段落语法</a><br><a href="#%E6%8D%A2%E8%A1%8C%E8%AF%AD%E6%B3%95">换行语法</a><br><a href="#%E5%BC%BA%E8%B0%83%E8%AF%AD%E6%B3%95">强调语法</a><br><a href="#%E5%BC%95%E7%94%A8%E8%AF%AD%E6%B3%95">引用语法</a><br><a href="#%E5%88%97%E8%A1%A8%E8%AF%AD%E6%B3%95">列表语法</a><br><a href="#%E4%BB%A3%E7%A0%81%E8%AF%AD%E6%B3%95">代码语法</a><br><a href="#%E5%88%86%E5%89%B2%E7%BA%BF%E8%AF%AD%E6%B3%95">分割线语法</a><br><a href="#%E9%93%BE%E6%8E%A5%E8%AF%AD%E6%B3%95">链接语法</a><br><a href="#%E5%9B%BE%E7%89%87%E8%AF%AD%E6%B3%95">图片语法</a><br><a href="#%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6%E8%AF%AD%E6%B3%95">转义字符语法</a><br><a href="#%E5%86%85%E5%B5%8CHTML%E6%A0%87%E7%AD%BE">内嵌HTML标签</a><br><a href="#%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95">扩展语法</a></p></blockquote><h1 id="标题语法"><a href="#标题语法" class="headerlink" title="标题语法"></a>标题语法<br></h1><p>标题前面加#号空格，几级标题就加几个#号，最后一个#号紧跟空格，最多有六级标题。如下：<br><br></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题<br></h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题<br></h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题<br></h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题<br></h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题<br></h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题<br></h6><h1 id="段落语法"><a href="#段落语法" class="headerlink" title="段落语法"></a>段落语法<br></h1><p>要创建段落，请使用空白行将一行或多行文本进行分隔。<br>不要用空格或制表符缩进段落。</p><h1 id="换行语法"><a href="#换行语法" class="headerlink" title="换行语法"></a>换行语法<br></h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;br&gt;</span><br></pre></td></tr></table></figure><h1 id="强调语法"><a href="#强调语法" class="headerlink" title="强调语法"></a>强调语法<br></h1><h2 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体<br></h2><p>要加粗文本请在要加粗的内容前后各添加两个<code>*</code>或者两个<code>_</code><br>Markdown 应用程序在如何处理文字中间的下划线上并不一致。为兼容考虑，在文字中间部分加粗的话，请使用星号。<br></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我**爱**豆</span><br></pre></td></tr></table></figure><p>我<strong>爱</strong>豆</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我__爱__豆</span><br></pre></td></tr></table></figure><p>我__爱__豆</p><h2 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h2><p>要用斜体显示文本，请在内容前后添加一个星号或下划线。要斜体突出内容的中间部分，请在内容前后各添加一个星号，中间不要带空格。<br>语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*今天天气真好*</span><br></pre></td></tr></table></figure><p><em>今天天气真好</em></p><h2 id="粗体和斜体"><a href="#粗体和斜体" class="headerlink" title="粗体和斜体"></a>粗体和斜体</h2><p>要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。要加粗并用斜体显示单词或短语的中间部分，请在要突出显示的部分前后各添加三个星号，中间不要带空格。<br>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">你可***真***好看</span><br></pre></td></tr></table></figure><p>你可<em><strong>真</strong></em>好看</p><h2 id="斜体和粗体"><a href="#斜体和粗体" class="headerlink" title="斜体和粗体"></a>斜体和粗体<br></h2><p>Markdown 应用程序在处理内容中间添加的下划线上并不一致。为了实现兼容性，请使用星号将内容的中间部分加粗并以斜体显示，以示重要。</p><h1 id="引用语法"><a href="#引用语法" class="headerlink" title="引用语法"></a>引用语法<br></h1><p>要创建块引用，请在段落前添加一个<code>&gt;</code>符号。<br>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;这是引用效果</span><br></pre></td></tr></table></figure><p>预览</p><blockquote><p>这是引用效果</p></blockquote><h2 id="多个段落引用"><a href="#多个段落引用" class="headerlink" title="多个段落引用"></a>多个段落引用<br></h2><p>块引用可以包含多个段落。为段落之间的空白行添加一个<code>&gt;</code>符号。<br><br>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;多个段落的引用效果就是这样的</span><br><span class="line">&gt;</span><br><span class="line">&gt;明白了吗？</span><br></pre></td></tr></table></figure><p>预览</p><blockquote><p>多个段落的引用效果就是这样的</p><p>明白了吗？</p></blockquote><h2 id="嵌套块引用"><a href="#嵌套块引用" class="headerlink" title="嵌套块引用"></a>嵌套块引用</h2><p>块引用可以嵌套。在要嵌套的段落前添加一个<code>&gt;&gt;</code>符号。<br><br>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;这是效果</span><br><span class="line">&gt;&gt;这是效果的效果</span><br></pre></td></tr></table></figure><p>预览</p><blockquote><p>这是效果</p><blockquote><p>这是效果的效果</p></blockquote></blockquote><h2 id="带有其他元素的引用"><a href="#带有其他元素的引用" class="headerlink" title="带有其他元素的引用"></a>带有其他元素的引用</h2><p>块引用可以包含其他 Markdown 格式的元素。并非所有元素都可以使用，你需要进行实验以查看哪些元素有效。<br><br>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; #### 加粗引用</span><br><span class="line">&gt;</span><br><span class="line">&gt; - 小标题1</span><br><span class="line">&gt; - 小标题2</span><br><span class="line">&gt;</span><br><span class="line">&gt;  *斜体*加**加粗**.</span><br></pre></td></tr></table></figure><p>预览</p><blockquote><h4 id="加粗引用"><a href="#加粗引用" class="headerlink" title="加粗引用"></a>加粗引用</h4><ul><li>小标题1</li><li>小标题2</li></ul><p> <em>斜体</em>加<strong>加粗</strong>.</p></blockquote><h1 id="列表语法"><a href="#列表语法" class="headerlink" title="列表语法"></a>列表语法</h1><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><p>要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字 1 起始。<br>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.这是第一点</span><br><span class="line">2.这是第二点</span><br><span class="line">3.这是第三点</span><br></pre></td></tr></table></figure><p>预览<br>1.这是第一点<br>2.这是第二点<br>3.这是第三点</p><h1 id="代码语法"><a href="#代码语法" class="headerlink" title="代码语法"></a>代码语法<br></h1><p>要将单词或短语表示为代码，请将其包裹在反引号 (`) 中。</p><h2 id="转义反引号"><a href="#转义反引号" class="headerlink" title="转义反引号"></a>转义反引号</h2><p>如果你要表示为代码的单词或短语中包含一个或多个反引号，则可以通过将单词或短语包裹在双反引号(``)中。<br>##代码块<br>要创建代码块，请将代码块的每一行缩进至少四个空格或一个制表符。<br></p><h1 id="分割线语法"><a href="#分割线语法" class="headerlink" title="分割线语法"></a>分割线语法</h1><p>要创建分隔线，请在单独一行上使用三个或多个星号 (***)、破折号 (—) 或下划线 (___) ，并且不能包含其他内容。<br>为了兼容性，请在分隔线的前后均添加空白行。<br>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">***</span><br><span class="line">---</span><br><span class="line">___</span><br></pre></td></tr></table></figure><p>预览</p><hr><hr><hr><h1 id="链接语法"><a href="#链接语法" class="headerlink" title="链接语法"></a>链接语法</h1><p>链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。</p><p>超链接Markdown语法代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[超链接显示名](超链接地址 &quot;超链接title&quot;)</span><br></pre></td></tr></table></figure><h2 id="给链接增加-Title"><a href="#给链接增加-Title" class="headerlink" title="给链接增加 Title"></a>给链接增加 Title</h2><p>链接title是当鼠标悬停在链接上时会出现的文字，这个title是可选的，它放在圆括号中链接地址后面，跟链接地址之间以空格分隔。<br>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[李鑫的博客](https://eelx.cn/ &quot;点击打开李鑫的博客&quot;)</span><br></pre></td></tr></table></figure><p>预览<br><a href="https://eelx.cn/" title="点击打开李鑫的博客">李鑫的博客</a></p><h2 id="网址和Email地址"><a href="#网址和Email地址" class="headerlink" title="网址和Email地址"></a>网址和Email地址</h2><p>使用尖括号可以很方便地把URL或者email地址变成可点击的链接。<br>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;https://eelx.cn&gt;</span><br><span class="line">&lt;lixin@lixin.ee&gt;</span><br></pre></td></tr></table></figure><p>预览<br><a href="https://eelx.cn/">https://eelx.cn</a><br><a href="mailto:&#x6c;&#x69;&#x78;&#x69;&#110;&#64;&#108;&#105;&#x78;&#105;&#x6e;&#x2e;&#x65;&#101;">&#x6c;&#x69;&#x78;&#x69;&#110;&#64;&#108;&#105;&#x78;&#105;&#x6e;&#x2e;&#x65;&#101;</a></p><h2 id="带格式化的链接"><a href="#带格式化的链接" class="headerlink" title="带格式化的链接"></a>带格式化的链接</h2><p>强调 链接, 在链接语法前后增加星号。 要将链接表示为代码，请在方括号中添加反引号。<br>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是记录我跟阿豆在一起的天数 **[李鑫&amp;阿豆](https://adou.lixin.ee)**.</span><br><span class="line">这个也是记录我跟阿豆在一起的天数 *[李鑫&amp;阿豆](https://adou.lixin.ee)*.</span><br><span class="line">这个也是记录我跟阿豆在一起的天数 [`李鑫&amp;阿豆`](https://adou.lixin.ee).</span><br></pre></td></tr></table></figure><p>预览<br>这是记录我跟阿豆在一起的天数 <strong><a href="https://adou.lixin.ee/">李鑫&amp;阿豆</a></strong>.<br>这个也是记录我跟阿豆在一起的天数 <em><a href="https://adou.lixin.ee/">李鑫&amp;阿豆</a></em>.<br>这个也是记录我跟阿豆在一起的天数 <a href="https://adou.lixin.ee/"><code>李鑫&amp;阿豆</code></a>.</p><h2 id="引用类型链接"><a href="#引用类型链接" class="headerlink" title="引用类型链接"></a>引用类型链接</h2><p>引用样式链接是一种特殊的链接，它使URL在Markdown中更易于显示和阅读。参考样式链接分为两部分：与文本保持内联的部分以及存储在文件中其他位置的部分，以使文本易于阅读。</p><h3 id="链接的第一部分格式"><a href="#链接的第一部分格式" class="headerlink" title="链接的第一部分格式"></a>链接的第一部分格式</h3><p>引用类型的链接的第一部分使用两组括号进行格式设置。第一组方括号包围应显示为链接的文本。第二组括号显示了一个标签，该标签用于指向您存储在文档其他位置的链接。</p><p>尽管不是必需的，可以在第一组和第二组括号之间包含一个空格。第二组括号中的标签不区分大小写，可以包含字母，数字，空格或标点符号。</p><p>以下示例格式对于链接的第一部分效果相同：</p><p><code>[hobbit-hole][1]</code><br><code>[hobbit-hole] [1]</code></p><h3 id="链接的第二部分格式"><a href="#链接的第二部分格式" class="headerlink" title="链接的第二部分格式"></a>链接的第二部分格式</h3><p>引用类型链接的第二部分使用以下属性设置格式：</p><p>放在括号中的标签，其后紧跟一个冒号和至少一个空格（例如<code>[label]:</code>）。<br>链接的URL，可以选择将其括在尖括号中。<br>链接的可选标题，可以将其括在双引号，单引号或括号中。<br>以下示例格式对于链接的第二部分效果相同：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle</span><br><span class="line">[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle &quot;Hobbit lifestyles&quot;</span><br><span class="line">[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle &#x27;Hobbit lifestyles&#x27;</span><br><span class="line">[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle (Hobbit lifestyles)</span><br><span class="line">[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; &quot;Hobbit lifestyles&quot;</span><br><span class="line">[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; &#x27;Hobbit lifestyles&#x27;</span><br><span class="line">[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; (Hobbit lifestyles)</span><br></pre></td></tr></table></figure><p>可以将链接的第二部分放在Markdown文档中的任何位置。有些人将它们放在出现的段落之后，有些人则将它们放在文档的末尾（例如尾注或脚注）。</p><h1 id="图片语法"><a href="#图片语法" class="headerlink" title="图片语法"></a>图片语法</h1><p>要添加图像，请使用感叹号 (!), 然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。<br>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![随机图片](https://picsum.photos/1920/1080 &quot;鼠标放上去的文字&quot;)</span><br></pre></td></tr></table></figure><p>预览<br><img src="https://picsum.photos/1920/1080" alt="随机图片" title="鼠标放上去的文字"></p><h2 id="链接图片"><a href="#链接图片" class="headerlink" title="链接图片"></a>链接图片</h2><p>给图片增加链接，请将图像的Markdown 括在方括号中，然后将链接添加在圆括号中。<br>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[![随机图片](https://picsum.photos/1920/1080 &quot;访问李鑫的博客&quot;)](https://eelx.cn)</span><br></pre></td></tr></table></figure><p>预览<br><a href="https://eelx.cn/"><img src="https://picsum.photos/1920/1080" alt="随机图片" title="访问李鑫的博客"></a></p><h1 id="转义字符语法"><a href="#转义字符语法" class="headerlink" title="转义字符语法"></a>转义字符语法<br></h1><p>要显示原本用于格式化 Markdown 文档的字符，请在字符前面添加反斜杠字符 \ 。<br>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\* 这很重要</span><br></pre></td></tr></table></figure><p>预览<br>* 这很重要</p><h2 id="可做转义的字符"><a href="#可做转义的字符" class="headerlink" title="可做转义的字符"></a>可做转义的字符</h2><table><thead><tr><th>符号</th><th>名字</th></tr></thead><tbody><tr><td>\</td><td>反斜杠</td></tr><tr><td>`</td><td>反引号</td></tr><tr><td>*</td><td>*号</td></tr><tr><td>_</td><td>下划线</td></tr><tr><td>{ }</td><td>大括号</td></tr><tr><td>[ ]</td><td>括号</td></tr><tr><td>( )</td><td>括弧</td></tr><tr><td>#</td><td>#号</td></tr><tr><td>+</td><td>加号</td></tr><tr><td>-</td><td>减号</td></tr><tr><td>.</td><td>点</td></tr><tr><td>!</td><td>感叹号</td></tr><tr><td></td><td></td></tr></tbody></table><h2 id="特殊字符自动转义"><a href="#特殊字符自动转义" class="headerlink" title="特殊字符自动转义"></a>特殊字符自动转义</h2><p>在HTML文件中，有两个字符需要特殊处理：<code>&lt;</code>和<code>&amp;</code>。<code>&lt;</code>符号用于起始标签<code>&amp;</code>符号则用于标记HTML实体，如果你只是想要使用这些符号，你必须要使用实体的形式，像是<code>&amp;lt;</code>和<code>&amp;amp;</code>。<br><code>&amp;</code>符号其实很容易让写作网页文件的人感到困扰，如果你要打「AT&amp;T」，你必须要写成「<code>AT&amp;amp;T</code>」，还得转换网址内的<code>&amp;</code>符号，如果你要链接到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://images.google.com/images?num=30&amp;q=larry+bird</span><br></pre></td></tr></table></figure><p>你必须要把网址转成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://images.google.com/images?num=30&amp;amp;q=larry+bird</span><br></pre></td></tr></table></figure><p>才能放到链接标签的<code>href</code>属性里。不用说也知道这很容易忘记，这也可能是<code>HTML</code>标准检查所检查到的错误中，数量最多的。<br>Markdown 允许你直接使用这些符号，它帮你自动转义字符。如果你使用<code>&amp;</code>符号的作为HTML实体的一部分，那么它不会被转换，而在其它情况下，它则会被转换成<code>&amp;amp;</code>。所以你如果要在文件中插入一个著作权的符号，你可以这样写：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;copy;</span><br></pre></td></tr></table></figure><p>Markdown将不会对这段文字做修改，但是如果你这样写：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AT&amp;T</span><br></pre></td></tr></table></figure><p>Markdown就会将它转为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AT&amp;amp;T</span><br></pre></td></tr></table></figure><p>类似的状况也会发生在<code>&lt;</code>符号上，因为Markdown支持行内HTML，如果你使用<code>&lt;</code>符号作为HTML标签的分隔符，那Markdown也不会对它做任何转换，但是如果你是写：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 &lt; 5</span><br></pre></td></tr></table></figure><p>Markdown 将会把它转换为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 &amp;lt; 5</span><br></pre></td></tr></table></figure><p>需要特别注意的是，在 Markdown 的块级元素和内联元素中，<code>&lt;</code>和<code>&amp;</code>两个符号都会被自动转换成HTML实体，这项特性让你可以很容易地用 Markdown写HTML。（在 HTML 语法中，你要手动把所有的<code>&lt;</code>和<code>&amp;</code>都转换为HTML实体。）</p><h1 id="内嵌HTML标签"><a href="#内嵌HTML标签" class="headerlink" title="内嵌HTML标签"></a>内嵌HTML标签</h1><p>对于Markdown涵盖范围之外的标签，都可以直接在文件里面用HTML本身。如需使用HTML，不需要额外标注这是HTML或是Markdown，只需HTML标签添加到Markdown文本中即可。</p><h2 id="行级內联标签"><a href="#行级內联标签" class="headerlink" title="行级內联标签"></a>行级內联标签</h2><p>HTML的行级內联标签如<code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code>不受限制，可以在Markdown的段落、列表或是标题里任意使用。依照个人习惯，甚至可以不用Markdown格式，而采用HTML标签来格式化。例如：如果比较喜欢HTML的<code>&lt;a&gt;</code>或<code>&lt;img&gt;</code>标签，可以直接使用这些标签，而不用Markdown提供的链接或是图片语法。当你需要更改元素的属性时（例如为文本指定颜色或更改图像的宽度），使用HTML标签更方便些。</p><p>HTML行级內联标签和区块标签不同，在內联标签的范围内，Markdown的语法是可以解析的。<br>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This **word** is bold. This &lt;em&gt;word&lt;/em&gt; is italic.</span><br></pre></td></tr></table></figure><p>预览<br>This <strong>word</strong> is bold. This <em>word</em> is italic.</p><h2 id="区块标签"><a href="#区块标签" class="headerlink" title="区块标签"></a>区块标签</h2><p>区块元素──比如<code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>、<code>&lt;p&gt;</code> 等标签，必须在前后加上空行，以便于内容区分。而且这些元素的开始与结尾标签，不可以用 tab 或是空白来缩进。Markdown会自动识别这区块元素，避免在区块标签前后加上没有必要的<code>&lt;p&gt;</code>标签。</p><p>例如，在Markdown文件里加上一段HTML表格：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">This is a regular paragraph.</span><br><span class="line"></span><br><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;Foo&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line"></span><br><span class="line">This is another regular paragraph.</span><br></pre></td></tr></table></figure><p>请注意，Markdown语法在HTML区块标签中将不会被进行处理。例如，你无法在HTML区块内使用Markdown形式的<code>*强调*</code>。</p><h2 id="HTML用法最佳实践"><a href="#HTML用法最佳实践" class="headerlink" title="HTML用法最佳实践"></a>HTML用法最佳实践</h2><p>出于安全原因，并非所有Markdown应用程序都支持在Markdown文档中添加HTML。如有疑问，请查看相应Markdown应用程序的手册。某些应用程序只支持HTML标签的子集。</p><p>对于HTML的块级元素<code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>和<code>&lt;p&gt;</code>，请在其前后使用空行（blank lines）与其它内容进行分隔。尽量不要使用制表符（tabs）或空格（spaces）对HTML标签做缩进，否则将影响格式。</p><p>在HTML块级标签内不能使用Markdown语法。例如<code>&lt;p&gt;italic and **bold**&lt;/p&gt;</code>将不起作用。</p><h1 id="扩展语法"><a href="#扩展语法" class="headerlink" title="扩展语法"></a>扩展语法</h1><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><p>您可以通过在单词中心放置一条水平线来删除单词。结果看起来像这样。此功能使您可以指示某些单词是一个错误，要从文档中删除。若要删除单词，请在单词前后使用两个波浪号<code>~~</code>。<br>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~世界是平坦的。~~ 我们现在知道世界是圆的。</span><br></pre></td></tr></table></figure><p>预览<br><del>世界是平坦的。</del> 我们现在知道世界是圆的。</p><h2 id="任务列表语法"><a href="#任务列表语法" class="headerlink" title="任务列表语法"></a>任务列表语法</h2><p>任务列表使您可以创建带有复选框的项目列表。在支持任务列表的Markdown应用程序中，复选框将显示在内容旁边。要创建任务列表，请在任务列表项之前添加破折号<code>-</code>和方括号<code>[ ]</code>，并在<code>[ ]</code>前面加上空格。要选择一个复选框，请在方括号<code>[x]</code>之间添加 x 。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- [x] 带女朋友见家长</span><br><span class="line">- [x] 带女朋友去玩</span><br><span class="line">- [ ] 给女朋友买个包</span><br></pre></td></tr></table></figure><ul><li><input checked="" disabled="" type="checkbox"> 带女朋友见家长</li><li><input checked="" disabled="" type="checkbox"> 带女朋友去玩</li><li><input disabled="" type="checkbox"> 给女朋友买个包</li></ul><h2 id="自动网址链接"><a href="#自动网址链接" class="headerlink" title="自动网址链接"></a>自动网址链接</h2><p>许多Markdown处理器会自动将URL转换为链接。这意味着如果您输入<a href="https://eelx.cn/">https://eelx.cn/</a> ，即使您未使用方括号，您的Markdown处理器也会自动将其转换为链接。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://eelx.cn/</span><br></pre></td></tr></table></figure><p>呈现的输出如下所示：<br><a href="https://eelx.cn/">https://eelx.cn/</a></p><h3 id="禁用自动URL链接"><a href="#禁用自动URL链接" class="headerlink" title="禁用自动URL链接"></a>禁用自动URL链接</h3><p>如果您不希望自动链接URL，则可以通过将URL表示为带反引号的代码来删除该链接。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`https://eelx.cn/`</span><br></pre></td></tr></table></figure><p>呈现的输出如下所示：<br><code>https://eelx.cn/</code></p><h2 id="使用Emoji表情"><a href="#使用Emoji表情" class="headerlink" title="使用Emoji表情"></a>使用Emoji表情</h2><p>有两种方法可以将表情符号添加到Markdown文件中：将表情符号复制并粘贴到Markdown格式的文本中，或者键入emoji shortcodes。</p><h4 id="复制和粘贴表情符号"><a href="#复制和粘贴表情符号" class="headerlink" title="复制和粘贴表情符号"></a>复制和粘贴表情符号</h4><p>在大多数情况下，您可以简单地从<a href="https://emojipedia.org/" title="Emojipedia官网">Emojipedia</a>等来源复制表情符号并将其粘贴到文档中。许多Markdown应用程序会自动以Markdown格式的文本显示表情符号。从Markdown应用程序导出的HTML和PDF文件应显示表情符号。</p><p>Tip: 如果您使用的是静态网站生成器，请确保将HTML页面编码为UTF-8。</p><h4 id="使用表情符号简码"><a href="#使用表情符号简码" class="headerlink" title="使用表情符号简码"></a>使用表情符号简码</h4><p>一些Markdown应用程序允许您通过键入表情符号短代码来插入表情符号。这些以冒号开头和结尾，并包含表情符号的名称。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">去露营了！ :tent: 很快回来。</span><br><span class="line">真好笑！ :joy:</span><br></pre></td></tr></table></figure><p>呈现的输出如下所示：<br>去露营了！⛺很快回来。<br>真好笑！😂<br><img src="https://wx4.sinaimg.cn/large/922e804bly1gwls6r5aiyg20y40ra7ww.gif" alt="我的第一篇md" title="我的第一篇md"><br>这是我用MD写的第一篇文章，留给自己备用。<br><a href="#%E9%A1%B6%E9%83%A8">跳转顶部</a> </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;span id=&quot;顶部&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;#%E6%A0%87%E9%A2%98%E8%AF%AD%E6%B3%95&quot;&gt;标题语法&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#%E6%AE%B5%E8%90%BD%E8%AF%</summary>
      
    
    
    
    <category term="hexo博客" scheme="http://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="MD语法" scheme="http://blog.lixin.ee/tags/MD%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>hexo如何新建文章和删除文章</title>
    <link href="http://blog.lixin.ee/27201.html"/>
    <id>http://blog.lixin.ee/27201.html</id>
    <published>2021-11-19T12:07:51.000Z</published>
    <updated>2021-11-23T14:46:21.361Z</updated>
    
    <content type="html"><![CDATA[<p>hexo算是搭建好了，可是怎么写文章，本地上传以及删除和更新文章，这篇博客同样写给我，留着备用。</p><h1 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h1><p>使用命令来新建文章</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &lt;文章标题&gt; # 或者 hexo n 文章标题</span><br></pre></td></tr></table></figure><p>命令执行完后，就会发现在<code>Hexo\source_posts</code>目录中多了一个文件<code>文章名.md</code>，这就是我们刚才新建的博文。</p><p>此外，我们也可以直接进入<code>Hexo\source_posts</code>目录中，右键新建一个文本文档，将名字改为<code>文章名.md</code>，这样也新建了一篇博文。</p><h1 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h1><p>上面新建的文章是显示在单个文章界面，这里新建的页面是作为单个页面显示的，比如下图的分类、标签、归档和关于我，你点击后都是显示为单个页面。</p><p>你只需要记住新建博文是用上面的方法，新建页面是用这里的方法就行了，这里也采用命令新建页面：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;页面名称&quot;</span><br></pre></td></tr></table></figure><p>命令执行完后，就会发现在<code>Hexo\source</code>目录中多了一个文件夹，里面还有一个index.md，这就代表我们新建了一个页面。</p><h1 id="编辑文章"><a href="#编辑文章" class="headerlink" title="编辑文章"></a>编辑文章</h1><p>用文本编辑器打开上面新建的博文，如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: 文章标题</span><br><span class="line">tags:</span><br><span class="line">  - 文章标签</span><br><span class="line">categories:</span><br><span class="line">  - 文章分类</span><br><span class="line">toc: true # 是否启用内容索引</span><br></pre></td></tr></table></figure><p>新建的页面略有不同，没有tags和categories标签。三个”-“后面就是博文的正文内容，接下来就是正儿八经地撰写博文了。</p><h1 id="删除文章"><a href="#删除文章" class="headerlink" title="删除文章"></a>删除文章</h1><p>删除文章的过程一样也很简单，先删除本地文件，然后通过生成和部署命令进而将远程仓库中的文件也一并删除。具体来说，以最开始默认形成的helloworld.md这篇文章为例。</p><p>首先进入到<code>source / _post</code> 文件夹中，找到helloworld.md文件，在本地直接执行删除。然后依次执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>再去主页查看你就会发现你的博客上面已经空空如也了。</p><h1 id="上传文章"><a href="#上传文章" class="headerlink" title="上传文章"></a>上传文章</h1><p>在 Git Shell 中进入 Hexo 文件夹，执行下面几条命令，将博客部署到 GitHub 上：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate # (输入hexo g也可以)</span><br><span class="line">(若要本地预览就先执行 hexo server)</span><br><span class="line">hexo deploy # (输入hexo d也可以)</span><br></pre></td></tr></table></figure><p>快捷命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo g == hexo generate</span><br><span class="line">hexo d == hexo deploy</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo n == hexo new</span><br></pre></td></tr></table></figure><p>还能组合使用，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><p>刷新你的个人博客</p><h1 id="更新文章"><a href="#更新文章" class="headerlink" title="更新文章"></a>更新文章</h1><p>修改了谋篇文章内容需要同步更新，方法同上。在 Git Shell 中进入 Hexo 文件夹，执行下面几条命令，将博客部署到 GitHub 上：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;hexo算是搭建好了，可是怎么写文章，本地上传以及删除和更新文章，这篇博客同样写给我，留着备用。&lt;/p&gt;
&lt;h1 id=&quot;新建文章&quot;&gt;&lt;a href=&quot;#新建文章&quot; class=&quot;headerlink&quot; title=&quot;新建文章&quot;&gt;&lt;/a&gt;新建文章&lt;/h1&gt;&lt;p&gt;使用命令来新</summary>
      
    
    
    
    <category term="hexo博客" scheme="http://blog.lixin.ee/categories/hexo%E5%8D%9A%E5%AE%A2/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World（你好，世界）</title>
    <link href="http://blog.lixin.ee/16107.html"/>
    <id>http://blog.lixin.ee/16107.html</id>
    <published>2021-11-17T11:59:35.000Z</published>
    <updated>2021-11-21T07:06:25.886Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎来到<a href="https://hexo.io/zh-cn/">Hexo</a>!这是你的第一篇文章。查看<a href="https://hexo.io/zh-cn/docs/">文档</a>了解更多信息。如果您在使用 Hexo 时遇到任何问题， 您可以在<a href="https://hexo.io/zh-cn/docs/troubleshooting.html">问题解答</a>中找到答案，也可以在<a href="https://github.com/hexojs/hexo/issues">GitHub</a>上问我。</p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="创建一个新帖子"><a href="#创建一个新帖子" class="headerlink" title="创建一个新帖子"></a>创建一个新帖子</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/zh-cn/docs/writing.html">写作</a></p><h3 id="运行服务器"><a href="#运行服务器" class="headerlink" title="运行服务器"></a>运行服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/zh-cn/docs/server.html">服务器</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/zh-cn/docs/generating.html">生成</a></p><h3 id="部署到远程站点"><a href="#部署到远程站点" class="headerlink" title="部署到远程站点"></a>部署到远程站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/zh-cn/docs/one-command-deployment.html">部署</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;欢迎来到&lt;a href=&quot;https://hexo.io/zh-cn/&quot;&gt;Hexo&lt;/a&gt;!这是你的第一篇文章。查看&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot;&gt;文档&lt;/a&gt;了解更多信息。如果您在使用 Hexo 时遇到任何问题， 您可以在&lt;a </summary>
      
    
    
    
    
  </entry>
  
</feed>
